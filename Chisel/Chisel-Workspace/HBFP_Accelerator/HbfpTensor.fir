circuit HbfpTensor :
  module adderTree2 :
    input clock : Clock
    input reset : Reset
    output io : { flip sign_man : UInt<6>[4], flip exps : UInt<9>[4], flip control_signal : UInt<1>, flip control_signal2 : UInt<1>, result_tree : UInt<14>}

    reg exp_buffer_0 : UInt<9>, clock with :
      reset => (reset, UInt<9>("h0")) @[block_division.scala 243:60]
    reg exp_buffer_1 : UInt<9>, clock with :
      reset => (reset, UInt<9>("h0")) @[block_division.scala 243:60]
    reg exp_buffer_2 : UInt<9>, clock with :
      reset => (reset, UInt<9>("h0")) @[block_division.scala 243:60]
    reg exp_buffer_3 : UInt<9>, clock with :
      reset => (reset, UInt<9>("h0")) @[block_division.scala 243:60]
    reg man_buffer_two_complement_0 : SInt<6>, clock with :
      reset => (reset, asSInt(UInt<6>("h0"))) @[block_division.scala 245:12]
    reg man_buffer_two_complement_1 : SInt<6>, clock with :
      reset => (reset, asSInt(UInt<6>("h0"))) @[block_division.scala 245:12]
    reg man_buffer_two_complement_2 : SInt<6>, clock with :
      reset => (reset, asSInt(UInt<6>("h0"))) @[block_division.scala 245:12]
    reg man_buffer_two_complement_3 : SInt<6>, clock with :
      reset => (reset, asSInt(UInt<6>("h0"))) @[block_division.scala 245:12]
    node _T = eq(io.control_signal, UInt<1>("h0")) @[block_division.scala 249:26]
    when _T : @[block_division.scala 249:34]
      exp_buffer_0 <= io.exps[0] @[block_division.scala 252:21]
      node _man_buffer_two_complement_0_T = asSInt(io.sign_man[0]) @[block_division.scala 253:54]
      man_buffer_two_complement_0 <= _man_buffer_two_complement_0_T @[block_division.scala 253:36]
      exp_buffer_1 <= io.exps[1] @[block_division.scala 252:21]
      node _man_buffer_two_complement_1_T = asSInt(io.sign_man[1]) @[block_division.scala 253:54]
      man_buffer_two_complement_1 <= _man_buffer_two_complement_1_T @[block_division.scala 253:36]
      exp_buffer_2 <= io.exps[2] @[block_division.scala 252:21]
      node _man_buffer_two_complement_2_T = asSInt(io.sign_man[2]) @[block_division.scala 253:54]
      man_buffer_two_complement_2 <= _man_buffer_two_complement_2_T @[block_division.scala 253:36]
      exp_buffer_3 <= io.exps[3] @[block_division.scala 252:21]
      node _man_buffer_two_complement_3_T = asSInt(io.sign_man[3]) @[block_division.scala 253:54]
      man_buffer_two_complement_3 <= _man_buffer_two_complement_3_T @[block_division.scala 253:36]
    reg v : UInt<10>, clock with :
      reset => (reset, UInt<10>("h0")) @[block_division.scala 259:18]
    reg enable : UInt<1>, clock with :
      reset => (UInt<1>("h0"), enable) @[block_division.scala 260:19]
    node _T_1 = eq(io.control_signal2, UInt<1>("h1")) @[block_division.scala 261:28]
    when _T_1 : @[block_division.scala 261:36]
      enable <= UInt<1>("h1") @[block_division.scala 262:12]
    node _T_2 = eq(enable, UInt<1>("h1")) @[block_division.scala 266:38]
    node _T_3 = and(io.control_signal, _T_2) @[block_division.scala 266:27]
    when _T_3 : @[block_division.scala 266:47]
      node _v_T = add(v, UInt<1>("h1")) @[block_division.scala 270:16]
      node _v_T_1 = tail(_v_T, 1) @[block_division.scala 270:16]
      v <= _v_T_1 @[block_division.scala 270:11]
      node _exp_buffer_0_T = gt(exp_buffer_0, exp_buffer_1) @[block_division.scala 274:31]
      node _exp_buffer_0_T_1 = mux(_exp_buffer_0_T, exp_buffer_0, exp_buffer_1) @[block_division.scala 273:33]
      exp_buffer_0 <= _exp_buffer_0_T_1 @[block_division.scala 273:27]
      node _exp_difference_T = gt(exp_buffer_0, exp_buffer_1) @[block_division.scala 279:31]
      node _exp_difference_T_1 = sub(exp_buffer_0, exp_buffer_1) @[block_division.scala 280:31]
      node _exp_difference_T_2 = tail(_exp_difference_T_1, 1) @[block_division.scala 280:31]
      node _exp_difference_T_3 = sub(exp_buffer_1, exp_buffer_0) @[block_division.scala 281:35]
      node _exp_difference_T_4 = tail(_exp_difference_T_3, 1) @[block_division.scala 281:35]
      node exp_difference = mux(_exp_difference_T, _exp_difference_T_2, _exp_difference_T_4) @[block_division.scala 278:35]
      node _sum_T = gt(exp_buffer_0, exp_buffer_1) @[block_division.scala 284:31]
      node _sum_T_1 = dshr(man_buffer_two_complement_1, exp_difference) @[block_division.scala 287:15]
      node _sum_T_2 = add(man_buffer_two_complement_0, _sum_T_1) @[block_division.scala 285:46]
      node _sum_T_3 = dshr(man_buffer_two_complement_0, exp_difference) @[block_division.scala 290:15]
      node _sum_T_4 = add(man_buffer_two_complement_1, _sum_T_3) @[block_division.scala 288:50]
      node sum = mux(_sum_T, _sum_T_2, _sum_T_4) @[block_division.scala 283:24]
      node _man_buffer_two_complement_0_T_1 = bits(sum, 6, 6) @[block_division.scala 292:50]
      node _man_buffer_two_complement_0_T_2 = eq(_man_buffer_two_complement_0_T_1, UInt<1>("h1")) @[block_division.scala 292:63]
      node _man_buffer_two_complement_0_T_3 = bits(sum, 5, 0) @[block_division.scala 292:82]
      node _man_buffer_two_complement_0_T_4 = not(_man_buffer_two_complement_0_T_3) @[block_division.scala 292:78]
      node _man_buffer_two_complement_0_T_5 = add(_man_buffer_two_complement_0_T_4, UInt<1>("h1")) @[block_division.scala 292:96]
      node _man_buffer_two_complement_0_T_6 = tail(_man_buffer_two_complement_0_T_5, 1) @[block_division.scala 292:96]
      node _man_buffer_two_complement_0_T_7 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 292:116]
      node _man_buffer_two_complement_0_T_8 = tail(_man_buffer_two_complement_0_T_7, 1) @[block_division.scala 292:116]
      node _man_buffer_two_complement_0_T_9 = gt(_man_buffer_two_complement_0_T_6, _man_buffer_two_complement_0_T_8) @[block_division.scala 292:103]
      node _man_buffer_two_complement_0_T_10 = not(UInt<6>("h20")) @[block_division.scala 292:124]
      node _man_buffer_two_complement_0_T_11 = sub(_man_buffer_two_complement_0_T_10, UInt<1>("h1")) @[block_division.scala 292:136]
      node _man_buffer_two_complement_0_T_12 = tail(_man_buffer_two_complement_0_T_11, 1) @[block_division.scala 292:136]
      node _man_buffer_two_complement_0_T_13 = add(_man_buffer_two_complement_0_T_12, UInt<1>("h1")) @[block_division.scala 292:143]
      node _man_buffer_two_complement_0_T_14 = tail(_man_buffer_two_complement_0_T_13, 1) @[block_division.scala 292:143]
      node _man_buffer_two_complement_0_T_15 = asUInt(sum) @[block_division.scala 292:154]
      node _man_buffer_two_complement_0_T_16 = mux(_man_buffer_two_complement_0_T_9, _man_buffer_two_complement_0_T_14, _man_buffer_two_complement_0_T_15) @[block_division.scala 292:75]
      node _man_buffer_two_complement_0_T_17 = bits(sum, 5, 0) @[block_division.scala 293:18]
      node _man_buffer_two_complement_0_T_18 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 293:45]
      node _man_buffer_two_complement_0_T_19 = tail(_man_buffer_two_complement_0_T_18, 1) @[block_division.scala 293:45]
      node _man_buffer_two_complement_0_T_20 = gt(_man_buffer_two_complement_0_T_17, _man_buffer_two_complement_0_T_19) @[block_division.scala 293:32]
      node _man_buffer_two_complement_0_T_21 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 293:63]
      node _man_buffer_two_complement_0_T_22 = tail(_man_buffer_two_complement_0_T_21, 1) @[block_division.scala 293:63]
      node _man_buffer_two_complement_0_T_23 = asUInt(sum) @[block_division.scala 293:74]
      node _man_buffer_two_complement_0_T_24 = mux(_man_buffer_two_complement_0_T_20, _man_buffer_two_complement_0_T_22, _man_buffer_two_complement_0_T_23) @[block_division.scala 293:14]
      node _man_buffer_two_complement_0_T_25 = mux(_man_buffer_two_complement_0_T_2, _man_buffer_two_complement_0_T_16, _man_buffer_two_complement_0_T_24) @[block_division.scala 292:46]
      node _man_buffer_two_complement_0_T_26 = asSInt(_man_buffer_two_complement_0_T_25) @[block_division.scala 293:83]
      man_buffer_two_complement_0 <= _man_buffer_two_complement_0_T_26 @[block_division.scala 292:40]
      node _exp_buffer_1_T = gt(exp_buffer_2, exp_buffer_3) @[block_division.scala 274:31]
      node _exp_buffer_1_T_1 = mux(_exp_buffer_1_T, exp_buffer_2, exp_buffer_3) @[block_division.scala 273:33]
      exp_buffer_1 <= _exp_buffer_1_T_1 @[block_division.scala 273:27]
      node _exp_difference_T_5 = gt(exp_buffer_2, exp_buffer_3) @[block_division.scala 279:31]
      node _exp_difference_T_6 = sub(exp_buffer_2, exp_buffer_3) @[block_division.scala 280:31]
      node _exp_difference_T_7 = tail(_exp_difference_T_6, 1) @[block_division.scala 280:31]
      node _exp_difference_T_8 = sub(exp_buffer_3, exp_buffer_2) @[block_division.scala 281:35]
      node _exp_difference_T_9 = tail(_exp_difference_T_8, 1) @[block_division.scala 281:35]
      node exp_difference_1 = mux(_exp_difference_T_5, _exp_difference_T_7, _exp_difference_T_9) @[block_division.scala 278:35]
      node _sum_T_5 = gt(exp_buffer_2, exp_buffer_3) @[block_division.scala 284:31]
      node _sum_T_6 = dshr(man_buffer_two_complement_3, exp_difference_1) @[block_division.scala 287:15]
      node _sum_T_7 = add(man_buffer_two_complement_2, _sum_T_6) @[block_division.scala 285:46]
      node _sum_T_8 = dshr(man_buffer_two_complement_2, exp_difference_1) @[block_division.scala 290:15]
      node _sum_T_9 = add(man_buffer_two_complement_3, _sum_T_8) @[block_division.scala 288:50]
      node sum_1 = mux(_sum_T_5, _sum_T_7, _sum_T_9) @[block_division.scala 283:24]
      node _man_buffer_two_complement_1_T_1 = bits(sum_1, 6, 6) @[block_division.scala 292:50]
      node _man_buffer_two_complement_1_T_2 = eq(_man_buffer_two_complement_1_T_1, UInt<1>("h1")) @[block_division.scala 292:63]
      node _man_buffer_two_complement_1_T_3 = bits(sum_1, 5, 0) @[block_division.scala 292:82]
      node _man_buffer_two_complement_1_T_4 = not(_man_buffer_two_complement_1_T_3) @[block_division.scala 292:78]
      node _man_buffer_two_complement_1_T_5 = add(_man_buffer_two_complement_1_T_4, UInt<1>("h1")) @[block_division.scala 292:96]
      node _man_buffer_two_complement_1_T_6 = tail(_man_buffer_two_complement_1_T_5, 1) @[block_division.scala 292:96]
      node _man_buffer_two_complement_1_T_7 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 292:116]
      node _man_buffer_two_complement_1_T_8 = tail(_man_buffer_two_complement_1_T_7, 1) @[block_division.scala 292:116]
      node _man_buffer_two_complement_1_T_9 = gt(_man_buffer_two_complement_1_T_6, _man_buffer_two_complement_1_T_8) @[block_division.scala 292:103]
      node _man_buffer_two_complement_1_T_10 = not(UInt<6>("h20")) @[block_division.scala 292:124]
      node _man_buffer_two_complement_1_T_11 = sub(_man_buffer_two_complement_1_T_10, UInt<1>("h1")) @[block_division.scala 292:136]
      node _man_buffer_two_complement_1_T_12 = tail(_man_buffer_two_complement_1_T_11, 1) @[block_division.scala 292:136]
      node _man_buffer_two_complement_1_T_13 = add(_man_buffer_two_complement_1_T_12, UInt<1>("h1")) @[block_division.scala 292:143]
      node _man_buffer_two_complement_1_T_14 = tail(_man_buffer_two_complement_1_T_13, 1) @[block_division.scala 292:143]
      node _man_buffer_two_complement_1_T_15 = asUInt(sum_1) @[block_division.scala 292:154]
      node _man_buffer_two_complement_1_T_16 = mux(_man_buffer_two_complement_1_T_9, _man_buffer_two_complement_1_T_14, _man_buffer_two_complement_1_T_15) @[block_division.scala 292:75]
      node _man_buffer_two_complement_1_T_17 = bits(sum_1, 5, 0) @[block_division.scala 293:18]
      node _man_buffer_two_complement_1_T_18 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 293:45]
      node _man_buffer_two_complement_1_T_19 = tail(_man_buffer_two_complement_1_T_18, 1) @[block_division.scala 293:45]
      node _man_buffer_two_complement_1_T_20 = gt(_man_buffer_two_complement_1_T_17, _man_buffer_two_complement_1_T_19) @[block_division.scala 293:32]
      node _man_buffer_two_complement_1_T_21 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 293:63]
      node _man_buffer_two_complement_1_T_22 = tail(_man_buffer_two_complement_1_T_21, 1) @[block_division.scala 293:63]
      node _man_buffer_two_complement_1_T_23 = asUInt(sum_1) @[block_division.scala 293:74]
      node _man_buffer_two_complement_1_T_24 = mux(_man_buffer_two_complement_1_T_20, _man_buffer_two_complement_1_T_22, _man_buffer_two_complement_1_T_23) @[block_division.scala 293:14]
      node _man_buffer_two_complement_1_T_25 = mux(_man_buffer_two_complement_1_T_2, _man_buffer_two_complement_1_T_16, _man_buffer_two_complement_1_T_24) @[block_division.scala 292:46]
      node _man_buffer_two_complement_1_T_26 = asSInt(_man_buffer_two_complement_1_T_25) @[block_division.scala 293:83]
      man_buffer_two_complement_1 <= _man_buffer_two_complement_1_T_26 @[block_division.scala 292:40]
      node _T_4 = eq(v, UInt<2>("h2")) @[block_division.scala 299:15]
      when _T_4 : @[block_division.scala 299:54]
        enable <= UInt<1>("h0") @[block_division.scala 300:16]
      node _v_T_2 = add(v, UInt<1>("h1")) @[block_division.scala 270:16]
      node _v_T_3 = tail(_v_T_2, 1) @[block_division.scala 270:16]
      v <= _v_T_3 @[block_division.scala 270:11]
      node _exp_buffer_0_T_2 = gt(exp_buffer_0, exp_buffer_1) @[block_division.scala 274:31]
      node _exp_buffer_0_T_3 = mux(_exp_buffer_0_T_2, exp_buffer_0, exp_buffer_1) @[block_division.scala 273:33]
      exp_buffer_0 <= _exp_buffer_0_T_3 @[block_division.scala 273:27]
      node _exp_difference_T_10 = gt(exp_buffer_0, exp_buffer_1) @[block_division.scala 279:31]
      node _exp_difference_T_11 = sub(exp_buffer_0, exp_buffer_1) @[block_division.scala 280:31]
      node _exp_difference_T_12 = tail(_exp_difference_T_11, 1) @[block_division.scala 280:31]
      node _exp_difference_T_13 = sub(exp_buffer_1, exp_buffer_0) @[block_division.scala 281:35]
      node _exp_difference_T_14 = tail(_exp_difference_T_13, 1) @[block_division.scala 281:35]
      node exp_difference_2 = mux(_exp_difference_T_10, _exp_difference_T_12, _exp_difference_T_14) @[block_division.scala 278:35]
      node _sum_T_10 = gt(exp_buffer_0, exp_buffer_1) @[block_division.scala 284:31]
      node _sum_T_11 = dshr(man_buffer_two_complement_1, exp_difference_2) @[block_division.scala 287:15]
      node _sum_T_12 = add(man_buffer_two_complement_0, _sum_T_11) @[block_division.scala 285:46]
      node _sum_T_13 = dshr(man_buffer_two_complement_0, exp_difference_2) @[block_division.scala 290:15]
      node _sum_T_14 = add(man_buffer_two_complement_1, _sum_T_13) @[block_division.scala 288:50]
      node sum_2 = mux(_sum_T_10, _sum_T_12, _sum_T_14) @[block_division.scala 283:24]
      node _man_buffer_two_complement_0_T_27 = bits(sum_2, 6, 6) @[block_division.scala 292:50]
      node _man_buffer_two_complement_0_T_28 = eq(_man_buffer_two_complement_0_T_27, UInt<1>("h1")) @[block_division.scala 292:63]
      node _man_buffer_two_complement_0_T_29 = bits(sum_2, 5, 0) @[block_division.scala 292:82]
      node _man_buffer_two_complement_0_T_30 = not(_man_buffer_two_complement_0_T_29) @[block_division.scala 292:78]
      node _man_buffer_two_complement_0_T_31 = add(_man_buffer_two_complement_0_T_30, UInt<1>("h1")) @[block_division.scala 292:96]
      node _man_buffer_two_complement_0_T_32 = tail(_man_buffer_two_complement_0_T_31, 1) @[block_division.scala 292:96]
      node _man_buffer_two_complement_0_T_33 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 292:116]
      node _man_buffer_two_complement_0_T_34 = tail(_man_buffer_two_complement_0_T_33, 1) @[block_division.scala 292:116]
      node _man_buffer_two_complement_0_T_35 = gt(_man_buffer_two_complement_0_T_32, _man_buffer_two_complement_0_T_34) @[block_division.scala 292:103]
      node _man_buffer_two_complement_0_T_36 = not(UInt<6>("h20")) @[block_division.scala 292:124]
      node _man_buffer_two_complement_0_T_37 = sub(_man_buffer_two_complement_0_T_36, UInt<1>("h1")) @[block_division.scala 292:136]
      node _man_buffer_two_complement_0_T_38 = tail(_man_buffer_two_complement_0_T_37, 1) @[block_division.scala 292:136]
      node _man_buffer_two_complement_0_T_39 = add(_man_buffer_two_complement_0_T_38, UInt<1>("h1")) @[block_division.scala 292:143]
      node _man_buffer_two_complement_0_T_40 = tail(_man_buffer_two_complement_0_T_39, 1) @[block_division.scala 292:143]
      node _man_buffer_two_complement_0_T_41 = asUInt(sum_2) @[block_division.scala 292:154]
      node _man_buffer_two_complement_0_T_42 = mux(_man_buffer_two_complement_0_T_35, _man_buffer_two_complement_0_T_40, _man_buffer_two_complement_0_T_41) @[block_division.scala 292:75]
      node _man_buffer_two_complement_0_T_43 = bits(sum_2, 5, 0) @[block_division.scala 293:18]
      node _man_buffer_two_complement_0_T_44 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 293:45]
      node _man_buffer_two_complement_0_T_45 = tail(_man_buffer_two_complement_0_T_44, 1) @[block_division.scala 293:45]
      node _man_buffer_two_complement_0_T_46 = gt(_man_buffer_two_complement_0_T_43, _man_buffer_two_complement_0_T_45) @[block_division.scala 293:32]
      node _man_buffer_two_complement_0_T_47 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 293:63]
      node _man_buffer_two_complement_0_T_48 = tail(_man_buffer_two_complement_0_T_47, 1) @[block_division.scala 293:63]
      node _man_buffer_two_complement_0_T_49 = asUInt(sum_2) @[block_division.scala 293:74]
      node _man_buffer_two_complement_0_T_50 = mux(_man_buffer_two_complement_0_T_46, _man_buffer_two_complement_0_T_48, _man_buffer_two_complement_0_T_49) @[block_division.scala 293:14]
      node _man_buffer_two_complement_0_T_51 = mux(_man_buffer_two_complement_0_T_28, _man_buffer_two_complement_0_T_42, _man_buffer_two_complement_0_T_50) @[block_division.scala 292:46]
      node _man_buffer_two_complement_0_T_52 = asSInt(_man_buffer_two_complement_0_T_51) @[block_division.scala 293:83]
      man_buffer_two_complement_0 <= _man_buffer_two_complement_0_T_52 @[block_division.scala 292:40]
      node _T_5 = eq(v, UInt<2>("h2")) @[block_division.scala 299:15]
      when _T_5 : @[block_division.scala 299:54]
        enable <= UInt<1>("h0") @[block_division.scala 300:16]
    reg sign_man_hbfp : UInt<6>, clock with :
      reset => (reset, UInt<6>("h0")) @[block_division.scala 306:30]
    node _sign_man_hbfp_T = bits(man_buffer_two_complement_0, 5, 5) @[block_division.scala 310:33]
    node _sign_man_hbfp_T_1 = eq(_sign_man_hbfp_T, UInt<1>("h1")) @[block_division.scala 310:44]
    node _sign_man_hbfp_T_2 = bits(man_buffer_two_complement_0, 4, 0) @[block_division.scala 311:43]
    node _sign_man_hbfp_T_3 = cat(UInt<1>("h0"), _sign_man_hbfp_T_2) @[block_division.scala 311:11]
    node _sign_man_hbfp_T_4 = not(_sign_man_hbfp_T_3) @[block_division.scala 311:5]
    node _sign_man_hbfp_T_5 = add(_sign_man_hbfp_T_4, UInt<1>("h1")) @[block_division.scala 311:60]
    node _sign_man_hbfp_T_6 = tail(_sign_man_hbfp_T_5, 1) @[block_division.scala 311:60]
    node _sign_man_hbfp_T_7 = asUInt(man_buffer_two_complement_0) @[block_division.scala 312:36]
    node _sign_man_hbfp_T_8 = mux(_sign_man_hbfp_T_1, _sign_man_hbfp_T_6, _sign_man_hbfp_T_7) @[block_division.scala 309:23]
    sign_man_hbfp <= _sign_man_hbfp_T_8 @[block_division.scala 309:17]
    node _io_result_tree_T = bits(sign_man_hbfp, 5, 5) @[block_division.scala 329:34]
    node _io_result_tree_T_1 = bits(exp_buffer_0, 8, 1) @[block_division.scala 329:54]
    node _io_result_tree_T_2 = cat(_io_result_tree_T, _io_result_tree_T_1) @[block_division.scala 329:38]
    node _io_result_tree_T_3 = bits(sign_man_hbfp, 4, 0) @[block_division.scala 329:77]
    node _io_result_tree_T_4 = cat(_io_result_tree_T_2, _io_result_tree_T_3) @[block_division.scala 329:61]
    io.result_tree <= _io_result_tree_T_4 @[block_division.scala 329:18]

  module HbfpTensor :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip man_a : UInt<5>[256], flip man_b : UInt<5>[256], flip sign_a : UInt<1>[256], flip sign_b : UInt<1>[256], flip exp_a : UInt<8>[4], flip exp_b : UInt<8>[4], flip control : UInt<1>, flip control2 : UInt<1>, result : UInt<14>}

    reg exp_output_0 : UInt<9>, clock with :
      reset => (reset, UInt<9>("h0")) @[block_division.scala 194:60]
    reg exp_output_1 : UInt<9>, clock with :
      reset => (reset, UInt<9>("h0")) @[block_division.scala 194:60]
    reg exp_output_2 : UInt<9>, clock with :
      reset => (reset, UInt<9>("h0")) @[block_division.scala 194:60]
    reg exp_output_3 : UInt<9>, clock with :
      reset => (reset, UInt<9>("h0")) @[block_division.scala 194:60]
    reg acc_0 : UInt<6>, clock with :
      reset => (reset, UInt<6>("h0")) @[block_division.scala 195:53]
    reg acc_1 : UInt<6>, clock with :
      reset => (reset, UInt<6>("h0")) @[block_division.scala 195:53]
    reg acc_2 : UInt<6>, clock with :
      reset => (reset, UInt<6>("h0")) @[block_division.scala 195:53]
    reg acc_3 : UInt<6>, clock with :
      reset => (reset, UInt<6>("h0")) @[block_division.scala 195:53]
    node _exp_output_0_T = add(io.exp_a[0], io.exp_b[0]) @[block_division.scala 198:34]
    exp_output_0 <= _exp_output_0_T @[block_division.scala 198:19]
    reg dotProductRegs : UInt<5>[64], clock with :
      reset => (UInt<1>("h0"), dotProductRegs) @[block_division.scala 199:29]
    reg signs : UInt<1>[64], clock with :
      reset => (UInt<1>("h0"), signs) @[block_division.scala 200:20]
    reg two_complement : UInt<6>[64], clock with :
      reset => (UInt<1>("h0"), two_complement) @[block_division.scala 201:29]
    reg two_complement_buffer : SInt<6>[64], clock with :
      reset => (UInt<1>("h0"), two_complement_buffer) @[block_division.scala 202:36]
    reg multiplierReg : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg <= io.sign_a[0] @[block_division.scala 206:15]
    multiplierReg <= io.man_a[0] @[block_division.scala 207:21]
    node multiplication = mul(multiplierReg, io.man_b[0]) @[block_division.scala 208:42]
    node _dotProductRegs_0_T = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_0_T_1 = tail(_dotProductRegs_0_T, 1) @[block_division.scala 209:60]
    node _dotProductRegs_0_T_2 = gt(multiplication, _dotProductRegs_0_T_1) @[block_division.scala 209:47]
    node _dotProductRegs_0_T_3 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_0_T_4 = tail(_dotProductRegs_0_T_3, 1) @[block_division.scala 209:78]
    node _dotProductRegs_0_T_5 = mux(_dotProductRegs_0_T_2, _dotProductRegs_0_T_4, multiplication) @[block_division.scala 209:31]
    dotProductRegs[0] <= _dotProductRegs_0_T_5 @[block_division.scala 209:25]
    node _signs_0_T = xor(signReg, io.sign_b[0]) @[block_division.scala 210:27]
    signs[0] <= _signs_0_T @[block_division.scala 210:16]
    node _two_complement_0_T = eq(signs[0], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_0_T_1 = cat(UInt<1>("h0"), dotProductRegs[0]) @[block_division.scala 213:16]
    node _two_complement_0_T_2 = not(_two_complement_0_T_1) @[block_division.scala 213:10]
    node _two_complement_0_T_3 = add(_two_complement_0_T_2, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_0_T_4 = tail(_two_complement_0_T_3, 1) @[block_division.scala 213:38]
    node _two_complement_0_T_5 = cat(UInt<1>("h0"), dotProductRegs[0]) @[block_division.scala 214:14]
    node _two_complement_0_T_6 = mux(_two_complement_0_T, _two_complement_0_T_4, _two_complement_0_T_5) @[block_division.scala 211:31]
    two_complement[0] <= _two_complement_0_T_6 @[block_division.scala 211:25]
    node _two_complement_buffer_0_T = asSInt(two_complement[0]) @[block_division.scala 216:53]
    two_complement_buffer[0] <= _two_complement_buffer_0_T @[block_division.scala 216:32]
    reg multiplierReg_1 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_1 <= io.sign_a[1] @[block_division.scala 206:15]
    multiplierReg_1 <= io.man_a[1] @[block_division.scala 207:21]
    node multiplication_1 = mul(multiplierReg_1, io.man_b[1]) @[block_division.scala 208:42]
    node _dotProductRegs_1_T = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_1_T_1 = tail(_dotProductRegs_1_T, 1) @[block_division.scala 209:60]
    node _dotProductRegs_1_T_2 = gt(multiplication_1, _dotProductRegs_1_T_1) @[block_division.scala 209:47]
    node _dotProductRegs_1_T_3 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_1_T_4 = tail(_dotProductRegs_1_T_3, 1) @[block_division.scala 209:78]
    node _dotProductRegs_1_T_5 = mux(_dotProductRegs_1_T_2, _dotProductRegs_1_T_4, multiplication_1) @[block_division.scala 209:31]
    dotProductRegs[1] <= _dotProductRegs_1_T_5 @[block_division.scala 209:25]
    node _signs_1_T = xor(signReg_1, io.sign_b[1]) @[block_division.scala 210:27]
    signs[1] <= _signs_1_T @[block_division.scala 210:16]
    node _two_complement_1_T = eq(signs[1], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_1_T_1 = cat(UInt<1>("h0"), dotProductRegs[1]) @[block_division.scala 213:16]
    node _two_complement_1_T_2 = not(_two_complement_1_T_1) @[block_division.scala 213:10]
    node _two_complement_1_T_3 = add(_two_complement_1_T_2, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_1_T_4 = tail(_two_complement_1_T_3, 1) @[block_division.scala 213:38]
    node _two_complement_1_T_5 = cat(UInt<1>("h0"), dotProductRegs[1]) @[block_division.scala 214:14]
    node _two_complement_1_T_6 = mux(_two_complement_1_T, _two_complement_1_T_4, _two_complement_1_T_5) @[block_division.scala 211:31]
    two_complement[1] <= _two_complement_1_T_6 @[block_division.scala 211:25]
    node _two_complement_buffer_1_T = asSInt(two_complement[1]) @[block_division.scala 216:53]
    two_complement_buffer[1] <= _two_complement_buffer_1_T @[block_division.scala 216:32]
    reg multiplierReg_2 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_2 <= io.sign_a[2] @[block_division.scala 206:15]
    multiplierReg_2 <= io.man_a[2] @[block_division.scala 207:21]
    node multiplication_2 = mul(multiplierReg_2, io.man_b[2]) @[block_division.scala 208:42]
    node _dotProductRegs_2_T = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_2_T_1 = tail(_dotProductRegs_2_T, 1) @[block_division.scala 209:60]
    node _dotProductRegs_2_T_2 = gt(multiplication_2, _dotProductRegs_2_T_1) @[block_division.scala 209:47]
    node _dotProductRegs_2_T_3 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_2_T_4 = tail(_dotProductRegs_2_T_3, 1) @[block_division.scala 209:78]
    node _dotProductRegs_2_T_5 = mux(_dotProductRegs_2_T_2, _dotProductRegs_2_T_4, multiplication_2) @[block_division.scala 209:31]
    dotProductRegs[2] <= _dotProductRegs_2_T_5 @[block_division.scala 209:25]
    node _signs_2_T = xor(signReg_2, io.sign_b[2]) @[block_division.scala 210:27]
    signs[2] <= _signs_2_T @[block_division.scala 210:16]
    node _two_complement_2_T = eq(signs[2], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_2_T_1 = cat(UInt<1>("h0"), dotProductRegs[2]) @[block_division.scala 213:16]
    node _two_complement_2_T_2 = not(_two_complement_2_T_1) @[block_division.scala 213:10]
    node _two_complement_2_T_3 = add(_two_complement_2_T_2, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_2_T_4 = tail(_two_complement_2_T_3, 1) @[block_division.scala 213:38]
    node _two_complement_2_T_5 = cat(UInt<1>("h0"), dotProductRegs[2]) @[block_division.scala 214:14]
    node _two_complement_2_T_6 = mux(_two_complement_2_T, _two_complement_2_T_4, _two_complement_2_T_5) @[block_division.scala 211:31]
    two_complement[2] <= _two_complement_2_T_6 @[block_division.scala 211:25]
    node _two_complement_buffer_2_T = asSInt(two_complement[2]) @[block_division.scala 216:53]
    two_complement_buffer[2] <= _two_complement_buffer_2_T @[block_division.scala 216:32]
    reg multiplierReg_3 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_3 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_3 <= io.sign_a[3] @[block_division.scala 206:15]
    multiplierReg_3 <= io.man_a[3] @[block_division.scala 207:21]
    node multiplication_3 = mul(multiplierReg_3, io.man_b[3]) @[block_division.scala 208:42]
    node _dotProductRegs_3_T = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_3_T_1 = tail(_dotProductRegs_3_T, 1) @[block_division.scala 209:60]
    node _dotProductRegs_3_T_2 = gt(multiplication_3, _dotProductRegs_3_T_1) @[block_division.scala 209:47]
    node _dotProductRegs_3_T_3 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_3_T_4 = tail(_dotProductRegs_3_T_3, 1) @[block_division.scala 209:78]
    node _dotProductRegs_3_T_5 = mux(_dotProductRegs_3_T_2, _dotProductRegs_3_T_4, multiplication_3) @[block_division.scala 209:31]
    dotProductRegs[3] <= _dotProductRegs_3_T_5 @[block_division.scala 209:25]
    node _signs_3_T = xor(signReg_3, io.sign_b[3]) @[block_division.scala 210:27]
    signs[3] <= _signs_3_T @[block_division.scala 210:16]
    node _two_complement_3_T = eq(signs[3], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_3_T_1 = cat(UInt<1>("h0"), dotProductRegs[3]) @[block_division.scala 213:16]
    node _two_complement_3_T_2 = not(_two_complement_3_T_1) @[block_division.scala 213:10]
    node _two_complement_3_T_3 = add(_two_complement_3_T_2, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_3_T_4 = tail(_two_complement_3_T_3, 1) @[block_division.scala 213:38]
    node _two_complement_3_T_5 = cat(UInt<1>("h0"), dotProductRegs[3]) @[block_division.scala 214:14]
    node _two_complement_3_T_6 = mux(_two_complement_3_T, _two_complement_3_T_4, _two_complement_3_T_5) @[block_division.scala 211:31]
    two_complement[3] <= _two_complement_3_T_6 @[block_division.scala 211:25]
    node _two_complement_buffer_3_T = asSInt(two_complement[3]) @[block_division.scala 216:53]
    two_complement_buffer[3] <= _two_complement_buffer_3_T @[block_division.scala 216:32]
    reg multiplierReg_4 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_4 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_4 <= io.sign_a[4] @[block_division.scala 206:15]
    multiplierReg_4 <= io.man_a[4] @[block_division.scala 207:21]
    node multiplication_4 = mul(multiplierReg_4, io.man_b[4]) @[block_division.scala 208:42]
    node _dotProductRegs_4_T = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_4_T_1 = tail(_dotProductRegs_4_T, 1) @[block_division.scala 209:60]
    node _dotProductRegs_4_T_2 = gt(multiplication_4, _dotProductRegs_4_T_1) @[block_division.scala 209:47]
    node _dotProductRegs_4_T_3 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_4_T_4 = tail(_dotProductRegs_4_T_3, 1) @[block_division.scala 209:78]
    node _dotProductRegs_4_T_5 = mux(_dotProductRegs_4_T_2, _dotProductRegs_4_T_4, multiplication_4) @[block_division.scala 209:31]
    dotProductRegs[4] <= _dotProductRegs_4_T_5 @[block_division.scala 209:25]
    node _signs_4_T = xor(signReg_4, io.sign_b[4]) @[block_division.scala 210:27]
    signs[4] <= _signs_4_T @[block_division.scala 210:16]
    node _two_complement_4_T = eq(signs[4], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_4_T_1 = cat(UInt<1>("h0"), dotProductRegs[4]) @[block_division.scala 213:16]
    node _two_complement_4_T_2 = not(_two_complement_4_T_1) @[block_division.scala 213:10]
    node _two_complement_4_T_3 = add(_two_complement_4_T_2, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_4_T_4 = tail(_two_complement_4_T_3, 1) @[block_division.scala 213:38]
    node _two_complement_4_T_5 = cat(UInt<1>("h0"), dotProductRegs[4]) @[block_division.scala 214:14]
    node _two_complement_4_T_6 = mux(_two_complement_4_T, _two_complement_4_T_4, _two_complement_4_T_5) @[block_division.scala 211:31]
    two_complement[4] <= _two_complement_4_T_6 @[block_division.scala 211:25]
    node _two_complement_buffer_4_T = asSInt(two_complement[4]) @[block_division.scala 216:53]
    two_complement_buffer[4] <= _two_complement_buffer_4_T @[block_division.scala 216:32]
    reg multiplierReg_5 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_5 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_5 <= io.sign_a[5] @[block_division.scala 206:15]
    multiplierReg_5 <= io.man_a[5] @[block_division.scala 207:21]
    node multiplication_5 = mul(multiplierReg_5, io.man_b[5]) @[block_division.scala 208:42]
    node _dotProductRegs_5_T = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_5_T_1 = tail(_dotProductRegs_5_T, 1) @[block_division.scala 209:60]
    node _dotProductRegs_5_T_2 = gt(multiplication_5, _dotProductRegs_5_T_1) @[block_division.scala 209:47]
    node _dotProductRegs_5_T_3 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_5_T_4 = tail(_dotProductRegs_5_T_3, 1) @[block_division.scala 209:78]
    node _dotProductRegs_5_T_5 = mux(_dotProductRegs_5_T_2, _dotProductRegs_5_T_4, multiplication_5) @[block_division.scala 209:31]
    dotProductRegs[5] <= _dotProductRegs_5_T_5 @[block_division.scala 209:25]
    node _signs_5_T = xor(signReg_5, io.sign_b[5]) @[block_division.scala 210:27]
    signs[5] <= _signs_5_T @[block_division.scala 210:16]
    node _two_complement_5_T = eq(signs[5], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_5_T_1 = cat(UInt<1>("h0"), dotProductRegs[5]) @[block_division.scala 213:16]
    node _two_complement_5_T_2 = not(_two_complement_5_T_1) @[block_division.scala 213:10]
    node _two_complement_5_T_3 = add(_two_complement_5_T_2, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_5_T_4 = tail(_two_complement_5_T_3, 1) @[block_division.scala 213:38]
    node _two_complement_5_T_5 = cat(UInt<1>("h0"), dotProductRegs[5]) @[block_division.scala 214:14]
    node _two_complement_5_T_6 = mux(_two_complement_5_T, _two_complement_5_T_4, _two_complement_5_T_5) @[block_division.scala 211:31]
    two_complement[5] <= _two_complement_5_T_6 @[block_division.scala 211:25]
    node _two_complement_buffer_5_T = asSInt(two_complement[5]) @[block_division.scala 216:53]
    two_complement_buffer[5] <= _two_complement_buffer_5_T @[block_division.scala 216:32]
    reg multiplierReg_6 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_6 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_6 <= io.sign_a[6] @[block_division.scala 206:15]
    multiplierReg_6 <= io.man_a[6] @[block_division.scala 207:21]
    node multiplication_6 = mul(multiplierReg_6, io.man_b[6]) @[block_division.scala 208:42]
    node _dotProductRegs_6_T = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_6_T_1 = tail(_dotProductRegs_6_T, 1) @[block_division.scala 209:60]
    node _dotProductRegs_6_T_2 = gt(multiplication_6, _dotProductRegs_6_T_1) @[block_division.scala 209:47]
    node _dotProductRegs_6_T_3 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_6_T_4 = tail(_dotProductRegs_6_T_3, 1) @[block_division.scala 209:78]
    node _dotProductRegs_6_T_5 = mux(_dotProductRegs_6_T_2, _dotProductRegs_6_T_4, multiplication_6) @[block_division.scala 209:31]
    dotProductRegs[6] <= _dotProductRegs_6_T_5 @[block_division.scala 209:25]
    node _signs_6_T = xor(signReg_6, io.sign_b[6]) @[block_division.scala 210:27]
    signs[6] <= _signs_6_T @[block_division.scala 210:16]
    node _two_complement_6_T = eq(signs[6], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_6_T_1 = cat(UInt<1>("h0"), dotProductRegs[6]) @[block_division.scala 213:16]
    node _two_complement_6_T_2 = not(_two_complement_6_T_1) @[block_division.scala 213:10]
    node _two_complement_6_T_3 = add(_two_complement_6_T_2, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_6_T_4 = tail(_two_complement_6_T_3, 1) @[block_division.scala 213:38]
    node _two_complement_6_T_5 = cat(UInt<1>("h0"), dotProductRegs[6]) @[block_division.scala 214:14]
    node _two_complement_6_T_6 = mux(_two_complement_6_T, _two_complement_6_T_4, _two_complement_6_T_5) @[block_division.scala 211:31]
    two_complement[6] <= _two_complement_6_T_6 @[block_division.scala 211:25]
    node _two_complement_buffer_6_T = asSInt(two_complement[6]) @[block_division.scala 216:53]
    two_complement_buffer[6] <= _two_complement_buffer_6_T @[block_division.scala 216:32]
    reg multiplierReg_7 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_7 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_7 <= io.sign_a[7] @[block_division.scala 206:15]
    multiplierReg_7 <= io.man_a[7] @[block_division.scala 207:21]
    node multiplication_7 = mul(multiplierReg_7, io.man_b[7]) @[block_division.scala 208:42]
    node _dotProductRegs_7_T = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_7_T_1 = tail(_dotProductRegs_7_T, 1) @[block_division.scala 209:60]
    node _dotProductRegs_7_T_2 = gt(multiplication_7, _dotProductRegs_7_T_1) @[block_division.scala 209:47]
    node _dotProductRegs_7_T_3 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_7_T_4 = tail(_dotProductRegs_7_T_3, 1) @[block_division.scala 209:78]
    node _dotProductRegs_7_T_5 = mux(_dotProductRegs_7_T_2, _dotProductRegs_7_T_4, multiplication_7) @[block_division.scala 209:31]
    dotProductRegs[7] <= _dotProductRegs_7_T_5 @[block_division.scala 209:25]
    node _signs_7_T = xor(signReg_7, io.sign_b[7]) @[block_division.scala 210:27]
    signs[7] <= _signs_7_T @[block_division.scala 210:16]
    node _two_complement_7_T = eq(signs[7], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_7_T_1 = cat(UInt<1>("h0"), dotProductRegs[7]) @[block_division.scala 213:16]
    node _two_complement_7_T_2 = not(_two_complement_7_T_1) @[block_division.scala 213:10]
    node _two_complement_7_T_3 = add(_two_complement_7_T_2, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_7_T_4 = tail(_two_complement_7_T_3, 1) @[block_division.scala 213:38]
    node _two_complement_7_T_5 = cat(UInt<1>("h0"), dotProductRegs[7]) @[block_division.scala 214:14]
    node _two_complement_7_T_6 = mux(_two_complement_7_T, _two_complement_7_T_4, _two_complement_7_T_5) @[block_division.scala 211:31]
    two_complement[7] <= _two_complement_7_T_6 @[block_division.scala 211:25]
    node _two_complement_buffer_7_T = asSInt(two_complement[7]) @[block_division.scala 216:53]
    two_complement_buffer[7] <= _two_complement_buffer_7_T @[block_division.scala 216:32]
    reg multiplierReg_8 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_8 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_8 <= io.sign_a[8] @[block_division.scala 206:15]
    multiplierReg_8 <= io.man_a[8] @[block_division.scala 207:21]
    node multiplication_8 = mul(multiplierReg_8, io.man_b[8]) @[block_division.scala 208:42]
    node _dotProductRegs_8_T = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_8_T_1 = tail(_dotProductRegs_8_T, 1) @[block_division.scala 209:60]
    node _dotProductRegs_8_T_2 = gt(multiplication_8, _dotProductRegs_8_T_1) @[block_division.scala 209:47]
    node _dotProductRegs_8_T_3 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_8_T_4 = tail(_dotProductRegs_8_T_3, 1) @[block_division.scala 209:78]
    node _dotProductRegs_8_T_5 = mux(_dotProductRegs_8_T_2, _dotProductRegs_8_T_4, multiplication_8) @[block_division.scala 209:31]
    dotProductRegs[8] <= _dotProductRegs_8_T_5 @[block_division.scala 209:25]
    node _signs_8_T = xor(signReg_8, io.sign_b[8]) @[block_division.scala 210:27]
    signs[8] <= _signs_8_T @[block_division.scala 210:16]
    node _two_complement_8_T = eq(signs[8], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_8_T_1 = cat(UInt<1>("h0"), dotProductRegs[8]) @[block_division.scala 213:16]
    node _two_complement_8_T_2 = not(_two_complement_8_T_1) @[block_division.scala 213:10]
    node _two_complement_8_T_3 = add(_two_complement_8_T_2, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_8_T_4 = tail(_two_complement_8_T_3, 1) @[block_division.scala 213:38]
    node _two_complement_8_T_5 = cat(UInt<1>("h0"), dotProductRegs[8]) @[block_division.scala 214:14]
    node _two_complement_8_T_6 = mux(_two_complement_8_T, _two_complement_8_T_4, _two_complement_8_T_5) @[block_division.scala 211:31]
    two_complement[8] <= _two_complement_8_T_6 @[block_division.scala 211:25]
    node _two_complement_buffer_8_T = asSInt(two_complement[8]) @[block_division.scala 216:53]
    two_complement_buffer[8] <= _two_complement_buffer_8_T @[block_division.scala 216:32]
    reg multiplierReg_9 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_9 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_9 <= io.sign_a[9] @[block_division.scala 206:15]
    multiplierReg_9 <= io.man_a[9] @[block_division.scala 207:21]
    node multiplication_9 = mul(multiplierReg_9, io.man_b[9]) @[block_division.scala 208:42]
    node _dotProductRegs_9_T = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_9_T_1 = tail(_dotProductRegs_9_T, 1) @[block_division.scala 209:60]
    node _dotProductRegs_9_T_2 = gt(multiplication_9, _dotProductRegs_9_T_1) @[block_division.scala 209:47]
    node _dotProductRegs_9_T_3 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_9_T_4 = tail(_dotProductRegs_9_T_3, 1) @[block_division.scala 209:78]
    node _dotProductRegs_9_T_5 = mux(_dotProductRegs_9_T_2, _dotProductRegs_9_T_4, multiplication_9) @[block_division.scala 209:31]
    dotProductRegs[9] <= _dotProductRegs_9_T_5 @[block_division.scala 209:25]
    node _signs_9_T = xor(signReg_9, io.sign_b[9]) @[block_division.scala 210:27]
    signs[9] <= _signs_9_T @[block_division.scala 210:16]
    node _two_complement_9_T = eq(signs[9], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_9_T_1 = cat(UInt<1>("h0"), dotProductRegs[9]) @[block_division.scala 213:16]
    node _two_complement_9_T_2 = not(_two_complement_9_T_1) @[block_division.scala 213:10]
    node _two_complement_9_T_3 = add(_two_complement_9_T_2, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_9_T_4 = tail(_two_complement_9_T_3, 1) @[block_division.scala 213:38]
    node _two_complement_9_T_5 = cat(UInt<1>("h0"), dotProductRegs[9]) @[block_division.scala 214:14]
    node _two_complement_9_T_6 = mux(_two_complement_9_T, _two_complement_9_T_4, _two_complement_9_T_5) @[block_division.scala 211:31]
    two_complement[9] <= _two_complement_9_T_6 @[block_division.scala 211:25]
    node _two_complement_buffer_9_T = asSInt(two_complement[9]) @[block_division.scala 216:53]
    two_complement_buffer[9] <= _two_complement_buffer_9_T @[block_division.scala 216:32]
    reg multiplierReg_10 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_10 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_10 <= io.sign_a[10] @[block_division.scala 206:15]
    multiplierReg_10 <= io.man_a[10] @[block_division.scala 207:21]
    node multiplication_10 = mul(multiplierReg_10, io.man_b[10]) @[block_division.scala 208:42]
    node _dotProductRegs_10_T = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_10_T_1 = tail(_dotProductRegs_10_T, 1) @[block_division.scala 209:60]
    node _dotProductRegs_10_T_2 = gt(multiplication_10, _dotProductRegs_10_T_1) @[block_division.scala 209:47]
    node _dotProductRegs_10_T_3 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_10_T_4 = tail(_dotProductRegs_10_T_3, 1) @[block_division.scala 209:78]
    node _dotProductRegs_10_T_5 = mux(_dotProductRegs_10_T_2, _dotProductRegs_10_T_4, multiplication_10) @[block_division.scala 209:31]
    dotProductRegs[10] <= _dotProductRegs_10_T_5 @[block_division.scala 209:25]
    node _signs_10_T = xor(signReg_10, io.sign_b[10]) @[block_division.scala 210:27]
    signs[10] <= _signs_10_T @[block_division.scala 210:16]
    node _two_complement_10_T = eq(signs[10], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_10_T_1 = cat(UInt<1>("h0"), dotProductRegs[10]) @[block_division.scala 213:16]
    node _two_complement_10_T_2 = not(_two_complement_10_T_1) @[block_division.scala 213:10]
    node _two_complement_10_T_3 = add(_two_complement_10_T_2, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_10_T_4 = tail(_two_complement_10_T_3, 1) @[block_division.scala 213:38]
    node _two_complement_10_T_5 = cat(UInt<1>("h0"), dotProductRegs[10]) @[block_division.scala 214:14]
    node _two_complement_10_T_6 = mux(_two_complement_10_T, _two_complement_10_T_4, _two_complement_10_T_5) @[block_division.scala 211:31]
    two_complement[10] <= _two_complement_10_T_6 @[block_division.scala 211:25]
    node _two_complement_buffer_10_T = asSInt(two_complement[10]) @[block_division.scala 216:53]
    two_complement_buffer[10] <= _two_complement_buffer_10_T @[block_division.scala 216:32]
    reg multiplierReg_11 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_11 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_11 <= io.sign_a[11] @[block_division.scala 206:15]
    multiplierReg_11 <= io.man_a[11] @[block_division.scala 207:21]
    node multiplication_11 = mul(multiplierReg_11, io.man_b[11]) @[block_division.scala 208:42]
    node _dotProductRegs_11_T = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_11_T_1 = tail(_dotProductRegs_11_T, 1) @[block_division.scala 209:60]
    node _dotProductRegs_11_T_2 = gt(multiplication_11, _dotProductRegs_11_T_1) @[block_division.scala 209:47]
    node _dotProductRegs_11_T_3 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_11_T_4 = tail(_dotProductRegs_11_T_3, 1) @[block_division.scala 209:78]
    node _dotProductRegs_11_T_5 = mux(_dotProductRegs_11_T_2, _dotProductRegs_11_T_4, multiplication_11) @[block_division.scala 209:31]
    dotProductRegs[11] <= _dotProductRegs_11_T_5 @[block_division.scala 209:25]
    node _signs_11_T = xor(signReg_11, io.sign_b[11]) @[block_division.scala 210:27]
    signs[11] <= _signs_11_T @[block_division.scala 210:16]
    node _two_complement_11_T = eq(signs[11], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_11_T_1 = cat(UInt<1>("h0"), dotProductRegs[11]) @[block_division.scala 213:16]
    node _two_complement_11_T_2 = not(_two_complement_11_T_1) @[block_division.scala 213:10]
    node _two_complement_11_T_3 = add(_two_complement_11_T_2, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_11_T_4 = tail(_two_complement_11_T_3, 1) @[block_division.scala 213:38]
    node _two_complement_11_T_5 = cat(UInt<1>("h0"), dotProductRegs[11]) @[block_division.scala 214:14]
    node _two_complement_11_T_6 = mux(_two_complement_11_T, _two_complement_11_T_4, _two_complement_11_T_5) @[block_division.scala 211:31]
    two_complement[11] <= _two_complement_11_T_6 @[block_division.scala 211:25]
    node _two_complement_buffer_11_T = asSInt(two_complement[11]) @[block_division.scala 216:53]
    two_complement_buffer[11] <= _two_complement_buffer_11_T @[block_division.scala 216:32]
    reg multiplierReg_12 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_12 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_12 <= io.sign_a[12] @[block_division.scala 206:15]
    multiplierReg_12 <= io.man_a[12] @[block_division.scala 207:21]
    node multiplication_12 = mul(multiplierReg_12, io.man_b[12]) @[block_division.scala 208:42]
    node _dotProductRegs_12_T = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_12_T_1 = tail(_dotProductRegs_12_T, 1) @[block_division.scala 209:60]
    node _dotProductRegs_12_T_2 = gt(multiplication_12, _dotProductRegs_12_T_1) @[block_division.scala 209:47]
    node _dotProductRegs_12_T_3 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_12_T_4 = tail(_dotProductRegs_12_T_3, 1) @[block_division.scala 209:78]
    node _dotProductRegs_12_T_5 = mux(_dotProductRegs_12_T_2, _dotProductRegs_12_T_4, multiplication_12) @[block_division.scala 209:31]
    dotProductRegs[12] <= _dotProductRegs_12_T_5 @[block_division.scala 209:25]
    node _signs_12_T = xor(signReg_12, io.sign_b[12]) @[block_division.scala 210:27]
    signs[12] <= _signs_12_T @[block_division.scala 210:16]
    node _two_complement_12_T = eq(signs[12], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_12_T_1 = cat(UInt<1>("h0"), dotProductRegs[12]) @[block_division.scala 213:16]
    node _two_complement_12_T_2 = not(_two_complement_12_T_1) @[block_division.scala 213:10]
    node _two_complement_12_T_3 = add(_two_complement_12_T_2, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_12_T_4 = tail(_two_complement_12_T_3, 1) @[block_division.scala 213:38]
    node _two_complement_12_T_5 = cat(UInt<1>("h0"), dotProductRegs[12]) @[block_division.scala 214:14]
    node _two_complement_12_T_6 = mux(_two_complement_12_T, _two_complement_12_T_4, _two_complement_12_T_5) @[block_division.scala 211:31]
    two_complement[12] <= _two_complement_12_T_6 @[block_division.scala 211:25]
    node _two_complement_buffer_12_T = asSInt(two_complement[12]) @[block_division.scala 216:53]
    two_complement_buffer[12] <= _two_complement_buffer_12_T @[block_division.scala 216:32]
    reg multiplierReg_13 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_13 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_13 <= io.sign_a[13] @[block_division.scala 206:15]
    multiplierReg_13 <= io.man_a[13] @[block_division.scala 207:21]
    node multiplication_13 = mul(multiplierReg_13, io.man_b[13]) @[block_division.scala 208:42]
    node _dotProductRegs_13_T = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_13_T_1 = tail(_dotProductRegs_13_T, 1) @[block_division.scala 209:60]
    node _dotProductRegs_13_T_2 = gt(multiplication_13, _dotProductRegs_13_T_1) @[block_division.scala 209:47]
    node _dotProductRegs_13_T_3 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_13_T_4 = tail(_dotProductRegs_13_T_3, 1) @[block_division.scala 209:78]
    node _dotProductRegs_13_T_5 = mux(_dotProductRegs_13_T_2, _dotProductRegs_13_T_4, multiplication_13) @[block_division.scala 209:31]
    dotProductRegs[13] <= _dotProductRegs_13_T_5 @[block_division.scala 209:25]
    node _signs_13_T = xor(signReg_13, io.sign_b[13]) @[block_division.scala 210:27]
    signs[13] <= _signs_13_T @[block_division.scala 210:16]
    node _two_complement_13_T = eq(signs[13], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_13_T_1 = cat(UInt<1>("h0"), dotProductRegs[13]) @[block_division.scala 213:16]
    node _two_complement_13_T_2 = not(_two_complement_13_T_1) @[block_division.scala 213:10]
    node _two_complement_13_T_3 = add(_two_complement_13_T_2, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_13_T_4 = tail(_two_complement_13_T_3, 1) @[block_division.scala 213:38]
    node _two_complement_13_T_5 = cat(UInt<1>("h0"), dotProductRegs[13]) @[block_division.scala 214:14]
    node _two_complement_13_T_6 = mux(_two_complement_13_T, _two_complement_13_T_4, _two_complement_13_T_5) @[block_division.scala 211:31]
    two_complement[13] <= _two_complement_13_T_6 @[block_division.scala 211:25]
    node _two_complement_buffer_13_T = asSInt(two_complement[13]) @[block_division.scala 216:53]
    two_complement_buffer[13] <= _two_complement_buffer_13_T @[block_division.scala 216:32]
    reg multiplierReg_14 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_14 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_14 <= io.sign_a[14] @[block_division.scala 206:15]
    multiplierReg_14 <= io.man_a[14] @[block_division.scala 207:21]
    node multiplication_14 = mul(multiplierReg_14, io.man_b[14]) @[block_division.scala 208:42]
    node _dotProductRegs_14_T = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_14_T_1 = tail(_dotProductRegs_14_T, 1) @[block_division.scala 209:60]
    node _dotProductRegs_14_T_2 = gt(multiplication_14, _dotProductRegs_14_T_1) @[block_division.scala 209:47]
    node _dotProductRegs_14_T_3 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_14_T_4 = tail(_dotProductRegs_14_T_3, 1) @[block_division.scala 209:78]
    node _dotProductRegs_14_T_5 = mux(_dotProductRegs_14_T_2, _dotProductRegs_14_T_4, multiplication_14) @[block_division.scala 209:31]
    dotProductRegs[14] <= _dotProductRegs_14_T_5 @[block_division.scala 209:25]
    node _signs_14_T = xor(signReg_14, io.sign_b[14]) @[block_division.scala 210:27]
    signs[14] <= _signs_14_T @[block_division.scala 210:16]
    node _two_complement_14_T = eq(signs[14], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_14_T_1 = cat(UInt<1>("h0"), dotProductRegs[14]) @[block_division.scala 213:16]
    node _two_complement_14_T_2 = not(_two_complement_14_T_1) @[block_division.scala 213:10]
    node _two_complement_14_T_3 = add(_two_complement_14_T_2, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_14_T_4 = tail(_two_complement_14_T_3, 1) @[block_division.scala 213:38]
    node _two_complement_14_T_5 = cat(UInt<1>("h0"), dotProductRegs[14]) @[block_division.scala 214:14]
    node _two_complement_14_T_6 = mux(_two_complement_14_T, _two_complement_14_T_4, _two_complement_14_T_5) @[block_division.scala 211:31]
    two_complement[14] <= _two_complement_14_T_6 @[block_division.scala 211:25]
    node _two_complement_buffer_14_T = asSInt(two_complement[14]) @[block_division.scala 216:53]
    two_complement_buffer[14] <= _two_complement_buffer_14_T @[block_division.scala 216:32]
    reg multiplierReg_15 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_15 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_15 <= io.sign_a[15] @[block_division.scala 206:15]
    multiplierReg_15 <= io.man_a[15] @[block_division.scala 207:21]
    node multiplication_15 = mul(multiplierReg_15, io.man_b[15]) @[block_division.scala 208:42]
    node _dotProductRegs_15_T = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_15_T_1 = tail(_dotProductRegs_15_T, 1) @[block_division.scala 209:60]
    node _dotProductRegs_15_T_2 = gt(multiplication_15, _dotProductRegs_15_T_1) @[block_division.scala 209:47]
    node _dotProductRegs_15_T_3 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_15_T_4 = tail(_dotProductRegs_15_T_3, 1) @[block_division.scala 209:78]
    node _dotProductRegs_15_T_5 = mux(_dotProductRegs_15_T_2, _dotProductRegs_15_T_4, multiplication_15) @[block_division.scala 209:31]
    dotProductRegs[15] <= _dotProductRegs_15_T_5 @[block_division.scala 209:25]
    node _signs_15_T = xor(signReg_15, io.sign_b[15]) @[block_division.scala 210:27]
    signs[15] <= _signs_15_T @[block_division.scala 210:16]
    node _two_complement_15_T = eq(signs[15], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_15_T_1 = cat(UInt<1>("h0"), dotProductRegs[15]) @[block_division.scala 213:16]
    node _two_complement_15_T_2 = not(_two_complement_15_T_1) @[block_division.scala 213:10]
    node _two_complement_15_T_3 = add(_two_complement_15_T_2, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_15_T_4 = tail(_two_complement_15_T_3, 1) @[block_division.scala 213:38]
    node _two_complement_15_T_5 = cat(UInt<1>("h0"), dotProductRegs[15]) @[block_division.scala 214:14]
    node _two_complement_15_T_6 = mux(_two_complement_15_T, _two_complement_15_T_4, _two_complement_15_T_5) @[block_division.scala 211:31]
    two_complement[15] <= _two_complement_15_T_6 @[block_division.scala 211:25]
    node _two_complement_buffer_15_T = asSInt(two_complement[15]) @[block_division.scala 216:53]
    two_complement_buffer[15] <= _two_complement_buffer_15_T @[block_division.scala 216:32]
    reg multiplierReg_16 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_16 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_16 <= io.sign_a[16] @[block_division.scala 206:15]
    multiplierReg_16 <= io.man_a[16] @[block_division.scala 207:21]
    node multiplication_16 = mul(multiplierReg_16, io.man_b[16]) @[block_division.scala 208:42]
    node _dotProductRegs_16_T = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_16_T_1 = tail(_dotProductRegs_16_T, 1) @[block_division.scala 209:60]
    node _dotProductRegs_16_T_2 = gt(multiplication_16, _dotProductRegs_16_T_1) @[block_division.scala 209:47]
    node _dotProductRegs_16_T_3 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_16_T_4 = tail(_dotProductRegs_16_T_3, 1) @[block_division.scala 209:78]
    node _dotProductRegs_16_T_5 = mux(_dotProductRegs_16_T_2, _dotProductRegs_16_T_4, multiplication_16) @[block_division.scala 209:31]
    dotProductRegs[16] <= _dotProductRegs_16_T_5 @[block_division.scala 209:25]
    node _signs_16_T = xor(signReg_16, io.sign_b[16]) @[block_division.scala 210:27]
    signs[16] <= _signs_16_T @[block_division.scala 210:16]
    node _two_complement_16_T = eq(signs[16], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_16_T_1 = cat(UInt<1>("h0"), dotProductRegs[16]) @[block_division.scala 213:16]
    node _two_complement_16_T_2 = not(_two_complement_16_T_1) @[block_division.scala 213:10]
    node _two_complement_16_T_3 = add(_two_complement_16_T_2, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_16_T_4 = tail(_two_complement_16_T_3, 1) @[block_division.scala 213:38]
    node _two_complement_16_T_5 = cat(UInt<1>("h0"), dotProductRegs[16]) @[block_division.scala 214:14]
    node _two_complement_16_T_6 = mux(_two_complement_16_T, _two_complement_16_T_4, _two_complement_16_T_5) @[block_division.scala 211:31]
    two_complement[16] <= _two_complement_16_T_6 @[block_division.scala 211:25]
    node _two_complement_buffer_16_T = asSInt(two_complement[16]) @[block_division.scala 216:53]
    two_complement_buffer[16] <= _two_complement_buffer_16_T @[block_division.scala 216:32]
    reg multiplierReg_17 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_17 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_17 <= io.sign_a[17] @[block_division.scala 206:15]
    multiplierReg_17 <= io.man_a[17] @[block_division.scala 207:21]
    node multiplication_17 = mul(multiplierReg_17, io.man_b[17]) @[block_division.scala 208:42]
    node _dotProductRegs_17_T = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_17_T_1 = tail(_dotProductRegs_17_T, 1) @[block_division.scala 209:60]
    node _dotProductRegs_17_T_2 = gt(multiplication_17, _dotProductRegs_17_T_1) @[block_division.scala 209:47]
    node _dotProductRegs_17_T_3 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_17_T_4 = tail(_dotProductRegs_17_T_3, 1) @[block_division.scala 209:78]
    node _dotProductRegs_17_T_5 = mux(_dotProductRegs_17_T_2, _dotProductRegs_17_T_4, multiplication_17) @[block_division.scala 209:31]
    dotProductRegs[17] <= _dotProductRegs_17_T_5 @[block_division.scala 209:25]
    node _signs_17_T = xor(signReg_17, io.sign_b[17]) @[block_division.scala 210:27]
    signs[17] <= _signs_17_T @[block_division.scala 210:16]
    node _two_complement_17_T = eq(signs[17], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_17_T_1 = cat(UInt<1>("h0"), dotProductRegs[17]) @[block_division.scala 213:16]
    node _two_complement_17_T_2 = not(_two_complement_17_T_1) @[block_division.scala 213:10]
    node _two_complement_17_T_3 = add(_two_complement_17_T_2, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_17_T_4 = tail(_two_complement_17_T_3, 1) @[block_division.scala 213:38]
    node _two_complement_17_T_5 = cat(UInt<1>("h0"), dotProductRegs[17]) @[block_division.scala 214:14]
    node _two_complement_17_T_6 = mux(_two_complement_17_T, _two_complement_17_T_4, _two_complement_17_T_5) @[block_division.scala 211:31]
    two_complement[17] <= _two_complement_17_T_6 @[block_division.scala 211:25]
    node _two_complement_buffer_17_T = asSInt(two_complement[17]) @[block_division.scala 216:53]
    two_complement_buffer[17] <= _two_complement_buffer_17_T @[block_division.scala 216:32]
    reg multiplierReg_18 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_18 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_18 <= io.sign_a[18] @[block_division.scala 206:15]
    multiplierReg_18 <= io.man_a[18] @[block_division.scala 207:21]
    node multiplication_18 = mul(multiplierReg_18, io.man_b[18]) @[block_division.scala 208:42]
    node _dotProductRegs_18_T = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_18_T_1 = tail(_dotProductRegs_18_T, 1) @[block_division.scala 209:60]
    node _dotProductRegs_18_T_2 = gt(multiplication_18, _dotProductRegs_18_T_1) @[block_division.scala 209:47]
    node _dotProductRegs_18_T_3 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_18_T_4 = tail(_dotProductRegs_18_T_3, 1) @[block_division.scala 209:78]
    node _dotProductRegs_18_T_5 = mux(_dotProductRegs_18_T_2, _dotProductRegs_18_T_4, multiplication_18) @[block_division.scala 209:31]
    dotProductRegs[18] <= _dotProductRegs_18_T_5 @[block_division.scala 209:25]
    node _signs_18_T = xor(signReg_18, io.sign_b[18]) @[block_division.scala 210:27]
    signs[18] <= _signs_18_T @[block_division.scala 210:16]
    node _two_complement_18_T = eq(signs[18], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_18_T_1 = cat(UInt<1>("h0"), dotProductRegs[18]) @[block_division.scala 213:16]
    node _two_complement_18_T_2 = not(_two_complement_18_T_1) @[block_division.scala 213:10]
    node _two_complement_18_T_3 = add(_two_complement_18_T_2, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_18_T_4 = tail(_two_complement_18_T_3, 1) @[block_division.scala 213:38]
    node _two_complement_18_T_5 = cat(UInt<1>("h0"), dotProductRegs[18]) @[block_division.scala 214:14]
    node _two_complement_18_T_6 = mux(_two_complement_18_T, _two_complement_18_T_4, _two_complement_18_T_5) @[block_division.scala 211:31]
    two_complement[18] <= _two_complement_18_T_6 @[block_division.scala 211:25]
    node _two_complement_buffer_18_T = asSInt(two_complement[18]) @[block_division.scala 216:53]
    two_complement_buffer[18] <= _two_complement_buffer_18_T @[block_division.scala 216:32]
    reg multiplierReg_19 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_19 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_19 <= io.sign_a[19] @[block_division.scala 206:15]
    multiplierReg_19 <= io.man_a[19] @[block_division.scala 207:21]
    node multiplication_19 = mul(multiplierReg_19, io.man_b[19]) @[block_division.scala 208:42]
    node _dotProductRegs_19_T = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_19_T_1 = tail(_dotProductRegs_19_T, 1) @[block_division.scala 209:60]
    node _dotProductRegs_19_T_2 = gt(multiplication_19, _dotProductRegs_19_T_1) @[block_division.scala 209:47]
    node _dotProductRegs_19_T_3 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_19_T_4 = tail(_dotProductRegs_19_T_3, 1) @[block_division.scala 209:78]
    node _dotProductRegs_19_T_5 = mux(_dotProductRegs_19_T_2, _dotProductRegs_19_T_4, multiplication_19) @[block_division.scala 209:31]
    dotProductRegs[19] <= _dotProductRegs_19_T_5 @[block_division.scala 209:25]
    node _signs_19_T = xor(signReg_19, io.sign_b[19]) @[block_division.scala 210:27]
    signs[19] <= _signs_19_T @[block_division.scala 210:16]
    node _two_complement_19_T = eq(signs[19], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_19_T_1 = cat(UInt<1>("h0"), dotProductRegs[19]) @[block_division.scala 213:16]
    node _two_complement_19_T_2 = not(_two_complement_19_T_1) @[block_division.scala 213:10]
    node _two_complement_19_T_3 = add(_two_complement_19_T_2, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_19_T_4 = tail(_two_complement_19_T_3, 1) @[block_division.scala 213:38]
    node _two_complement_19_T_5 = cat(UInt<1>("h0"), dotProductRegs[19]) @[block_division.scala 214:14]
    node _two_complement_19_T_6 = mux(_two_complement_19_T, _two_complement_19_T_4, _two_complement_19_T_5) @[block_division.scala 211:31]
    two_complement[19] <= _two_complement_19_T_6 @[block_division.scala 211:25]
    node _two_complement_buffer_19_T = asSInt(two_complement[19]) @[block_division.scala 216:53]
    two_complement_buffer[19] <= _two_complement_buffer_19_T @[block_division.scala 216:32]
    reg multiplierReg_20 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_20 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_20 <= io.sign_a[20] @[block_division.scala 206:15]
    multiplierReg_20 <= io.man_a[20] @[block_division.scala 207:21]
    node multiplication_20 = mul(multiplierReg_20, io.man_b[20]) @[block_division.scala 208:42]
    node _dotProductRegs_20_T = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_20_T_1 = tail(_dotProductRegs_20_T, 1) @[block_division.scala 209:60]
    node _dotProductRegs_20_T_2 = gt(multiplication_20, _dotProductRegs_20_T_1) @[block_division.scala 209:47]
    node _dotProductRegs_20_T_3 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_20_T_4 = tail(_dotProductRegs_20_T_3, 1) @[block_division.scala 209:78]
    node _dotProductRegs_20_T_5 = mux(_dotProductRegs_20_T_2, _dotProductRegs_20_T_4, multiplication_20) @[block_division.scala 209:31]
    dotProductRegs[20] <= _dotProductRegs_20_T_5 @[block_division.scala 209:25]
    node _signs_20_T = xor(signReg_20, io.sign_b[20]) @[block_division.scala 210:27]
    signs[20] <= _signs_20_T @[block_division.scala 210:16]
    node _two_complement_20_T = eq(signs[20], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_20_T_1 = cat(UInt<1>("h0"), dotProductRegs[20]) @[block_division.scala 213:16]
    node _two_complement_20_T_2 = not(_two_complement_20_T_1) @[block_division.scala 213:10]
    node _two_complement_20_T_3 = add(_two_complement_20_T_2, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_20_T_4 = tail(_two_complement_20_T_3, 1) @[block_division.scala 213:38]
    node _two_complement_20_T_5 = cat(UInt<1>("h0"), dotProductRegs[20]) @[block_division.scala 214:14]
    node _two_complement_20_T_6 = mux(_two_complement_20_T, _two_complement_20_T_4, _two_complement_20_T_5) @[block_division.scala 211:31]
    two_complement[20] <= _two_complement_20_T_6 @[block_division.scala 211:25]
    node _two_complement_buffer_20_T = asSInt(two_complement[20]) @[block_division.scala 216:53]
    two_complement_buffer[20] <= _two_complement_buffer_20_T @[block_division.scala 216:32]
    reg multiplierReg_21 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_21 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_21 <= io.sign_a[21] @[block_division.scala 206:15]
    multiplierReg_21 <= io.man_a[21] @[block_division.scala 207:21]
    node multiplication_21 = mul(multiplierReg_21, io.man_b[21]) @[block_division.scala 208:42]
    node _dotProductRegs_21_T = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_21_T_1 = tail(_dotProductRegs_21_T, 1) @[block_division.scala 209:60]
    node _dotProductRegs_21_T_2 = gt(multiplication_21, _dotProductRegs_21_T_1) @[block_division.scala 209:47]
    node _dotProductRegs_21_T_3 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_21_T_4 = tail(_dotProductRegs_21_T_3, 1) @[block_division.scala 209:78]
    node _dotProductRegs_21_T_5 = mux(_dotProductRegs_21_T_2, _dotProductRegs_21_T_4, multiplication_21) @[block_division.scala 209:31]
    dotProductRegs[21] <= _dotProductRegs_21_T_5 @[block_division.scala 209:25]
    node _signs_21_T = xor(signReg_21, io.sign_b[21]) @[block_division.scala 210:27]
    signs[21] <= _signs_21_T @[block_division.scala 210:16]
    node _two_complement_21_T = eq(signs[21], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_21_T_1 = cat(UInt<1>("h0"), dotProductRegs[21]) @[block_division.scala 213:16]
    node _two_complement_21_T_2 = not(_two_complement_21_T_1) @[block_division.scala 213:10]
    node _two_complement_21_T_3 = add(_two_complement_21_T_2, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_21_T_4 = tail(_two_complement_21_T_3, 1) @[block_division.scala 213:38]
    node _two_complement_21_T_5 = cat(UInt<1>("h0"), dotProductRegs[21]) @[block_division.scala 214:14]
    node _two_complement_21_T_6 = mux(_two_complement_21_T, _two_complement_21_T_4, _two_complement_21_T_5) @[block_division.scala 211:31]
    two_complement[21] <= _two_complement_21_T_6 @[block_division.scala 211:25]
    node _two_complement_buffer_21_T = asSInt(two_complement[21]) @[block_division.scala 216:53]
    two_complement_buffer[21] <= _two_complement_buffer_21_T @[block_division.scala 216:32]
    reg multiplierReg_22 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_22 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_22 <= io.sign_a[22] @[block_division.scala 206:15]
    multiplierReg_22 <= io.man_a[22] @[block_division.scala 207:21]
    node multiplication_22 = mul(multiplierReg_22, io.man_b[22]) @[block_division.scala 208:42]
    node _dotProductRegs_22_T = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_22_T_1 = tail(_dotProductRegs_22_T, 1) @[block_division.scala 209:60]
    node _dotProductRegs_22_T_2 = gt(multiplication_22, _dotProductRegs_22_T_1) @[block_division.scala 209:47]
    node _dotProductRegs_22_T_3 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_22_T_4 = tail(_dotProductRegs_22_T_3, 1) @[block_division.scala 209:78]
    node _dotProductRegs_22_T_5 = mux(_dotProductRegs_22_T_2, _dotProductRegs_22_T_4, multiplication_22) @[block_division.scala 209:31]
    dotProductRegs[22] <= _dotProductRegs_22_T_5 @[block_division.scala 209:25]
    node _signs_22_T = xor(signReg_22, io.sign_b[22]) @[block_division.scala 210:27]
    signs[22] <= _signs_22_T @[block_division.scala 210:16]
    node _two_complement_22_T = eq(signs[22], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_22_T_1 = cat(UInt<1>("h0"), dotProductRegs[22]) @[block_division.scala 213:16]
    node _two_complement_22_T_2 = not(_two_complement_22_T_1) @[block_division.scala 213:10]
    node _two_complement_22_T_3 = add(_two_complement_22_T_2, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_22_T_4 = tail(_two_complement_22_T_3, 1) @[block_division.scala 213:38]
    node _two_complement_22_T_5 = cat(UInt<1>("h0"), dotProductRegs[22]) @[block_division.scala 214:14]
    node _two_complement_22_T_6 = mux(_two_complement_22_T, _two_complement_22_T_4, _two_complement_22_T_5) @[block_division.scala 211:31]
    two_complement[22] <= _two_complement_22_T_6 @[block_division.scala 211:25]
    node _two_complement_buffer_22_T = asSInt(two_complement[22]) @[block_division.scala 216:53]
    two_complement_buffer[22] <= _two_complement_buffer_22_T @[block_division.scala 216:32]
    reg multiplierReg_23 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_23 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_23 <= io.sign_a[23] @[block_division.scala 206:15]
    multiplierReg_23 <= io.man_a[23] @[block_division.scala 207:21]
    node multiplication_23 = mul(multiplierReg_23, io.man_b[23]) @[block_division.scala 208:42]
    node _dotProductRegs_23_T = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_23_T_1 = tail(_dotProductRegs_23_T, 1) @[block_division.scala 209:60]
    node _dotProductRegs_23_T_2 = gt(multiplication_23, _dotProductRegs_23_T_1) @[block_division.scala 209:47]
    node _dotProductRegs_23_T_3 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_23_T_4 = tail(_dotProductRegs_23_T_3, 1) @[block_division.scala 209:78]
    node _dotProductRegs_23_T_5 = mux(_dotProductRegs_23_T_2, _dotProductRegs_23_T_4, multiplication_23) @[block_division.scala 209:31]
    dotProductRegs[23] <= _dotProductRegs_23_T_5 @[block_division.scala 209:25]
    node _signs_23_T = xor(signReg_23, io.sign_b[23]) @[block_division.scala 210:27]
    signs[23] <= _signs_23_T @[block_division.scala 210:16]
    node _two_complement_23_T = eq(signs[23], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_23_T_1 = cat(UInt<1>("h0"), dotProductRegs[23]) @[block_division.scala 213:16]
    node _two_complement_23_T_2 = not(_two_complement_23_T_1) @[block_division.scala 213:10]
    node _two_complement_23_T_3 = add(_two_complement_23_T_2, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_23_T_4 = tail(_two_complement_23_T_3, 1) @[block_division.scala 213:38]
    node _two_complement_23_T_5 = cat(UInt<1>("h0"), dotProductRegs[23]) @[block_division.scala 214:14]
    node _two_complement_23_T_6 = mux(_two_complement_23_T, _two_complement_23_T_4, _two_complement_23_T_5) @[block_division.scala 211:31]
    two_complement[23] <= _two_complement_23_T_6 @[block_division.scala 211:25]
    node _two_complement_buffer_23_T = asSInt(two_complement[23]) @[block_division.scala 216:53]
    two_complement_buffer[23] <= _two_complement_buffer_23_T @[block_division.scala 216:32]
    reg multiplierReg_24 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_24 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_24 <= io.sign_a[24] @[block_division.scala 206:15]
    multiplierReg_24 <= io.man_a[24] @[block_division.scala 207:21]
    node multiplication_24 = mul(multiplierReg_24, io.man_b[24]) @[block_division.scala 208:42]
    node _dotProductRegs_24_T = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_24_T_1 = tail(_dotProductRegs_24_T, 1) @[block_division.scala 209:60]
    node _dotProductRegs_24_T_2 = gt(multiplication_24, _dotProductRegs_24_T_1) @[block_division.scala 209:47]
    node _dotProductRegs_24_T_3 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_24_T_4 = tail(_dotProductRegs_24_T_3, 1) @[block_division.scala 209:78]
    node _dotProductRegs_24_T_5 = mux(_dotProductRegs_24_T_2, _dotProductRegs_24_T_4, multiplication_24) @[block_division.scala 209:31]
    dotProductRegs[24] <= _dotProductRegs_24_T_5 @[block_division.scala 209:25]
    node _signs_24_T = xor(signReg_24, io.sign_b[24]) @[block_division.scala 210:27]
    signs[24] <= _signs_24_T @[block_division.scala 210:16]
    node _two_complement_24_T = eq(signs[24], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_24_T_1 = cat(UInt<1>("h0"), dotProductRegs[24]) @[block_division.scala 213:16]
    node _two_complement_24_T_2 = not(_two_complement_24_T_1) @[block_division.scala 213:10]
    node _two_complement_24_T_3 = add(_two_complement_24_T_2, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_24_T_4 = tail(_two_complement_24_T_3, 1) @[block_division.scala 213:38]
    node _two_complement_24_T_5 = cat(UInt<1>("h0"), dotProductRegs[24]) @[block_division.scala 214:14]
    node _two_complement_24_T_6 = mux(_two_complement_24_T, _two_complement_24_T_4, _two_complement_24_T_5) @[block_division.scala 211:31]
    two_complement[24] <= _two_complement_24_T_6 @[block_division.scala 211:25]
    node _two_complement_buffer_24_T = asSInt(two_complement[24]) @[block_division.scala 216:53]
    two_complement_buffer[24] <= _two_complement_buffer_24_T @[block_division.scala 216:32]
    reg multiplierReg_25 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_25 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_25 <= io.sign_a[25] @[block_division.scala 206:15]
    multiplierReg_25 <= io.man_a[25] @[block_division.scala 207:21]
    node multiplication_25 = mul(multiplierReg_25, io.man_b[25]) @[block_division.scala 208:42]
    node _dotProductRegs_25_T = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_25_T_1 = tail(_dotProductRegs_25_T, 1) @[block_division.scala 209:60]
    node _dotProductRegs_25_T_2 = gt(multiplication_25, _dotProductRegs_25_T_1) @[block_division.scala 209:47]
    node _dotProductRegs_25_T_3 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_25_T_4 = tail(_dotProductRegs_25_T_3, 1) @[block_division.scala 209:78]
    node _dotProductRegs_25_T_5 = mux(_dotProductRegs_25_T_2, _dotProductRegs_25_T_4, multiplication_25) @[block_division.scala 209:31]
    dotProductRegs[25] <= _dotProductRegs_25_T_5 @[block_division.scala 209:25]
    node _signs_25_T = xor(signReg_25, io.sign_b[25]) @[block_division.scala 210:27]
    signs[25] <= _signs_25_T @[block_division.scala 210:16]
    node _two_complement_25_T = eq(signs[25], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_25_T_1 = cat(UInt<1>("h0"), dotProductRegs[25]) @[block_division.scala 213:16]
    node _two_complement_25_T_2 = not(_two_complement_25_T_1) @[block_division.scala 213:10]
    node _two_complement_25_T_3 = add(_two_complement_25_T_2, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_25_T_4 = tail(_two_complement_25_T_3, 1) @[block_division.scala 213:38]
    node _two_complement_25_T_5 = cat(UInt<1>("h0"), dotProductRegs[25]) @[block_division.scala 214:14]
    node _two_complement_25_T_6 = mux(_two_complement_25_T, _two_complement_25_T_4, _two_complement_25_T_5) @[block_division.scala 211:31]
    two_complement[25] <= _two_complement_25_T_6 @[block_division.scala 211:25]
    node _two_complement_buffer_25_T = asSInt(two_complement[25]) @[block_division.scala 216:53]
    two_complement_buffer[25] <= _two_complement_buffer_25_T @[block_division.scala 216:32]
    reg multiplierReg_26 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_26 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_26 <= io.sign_a[26] @[block_division.scala 206:15]
    multiplierReg_26 <= io.man_a[26] @[block_division.scala 207:21]
    node multiplication_26 = mul(multiplierReg_26, io.man_b[26]) @[block_division.scala 208:42]
    node _dotProductRegs_26_T = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_26_T_1 = tail(_dotProductRegs_26_T, 1) @[block_division.scala 209:60]
    node _dotProductRegs_26_T_2 = gt(multiplication_26, _dotProductRegs_26_T_1) @[block_division.scala 209:47]
    node _dotProductRegs_26_T_3 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_26_T_4 = tail(_dotProductRegs_26_T_3, 1) @[block_division.scala 209:78]
    node _dotProductRegs_26_T_5 = mux(_dotProductRegs_26_T_2, _dotProductRegs_26_T_4, multiplication_26) @[block_division.scala 209:31]
    dotProductRegs[26] <= _dotProductRegs_26_T_5 @[block_division.scala 209:25]
    node _signs_26_T = xor(signReg_26, io.sign_b[26]) @[block_division.scala 210:27]
    signs[26] <= _signs_26_T @[block_division.scala 210:16]
    node _two_complement_26_T = eq(signs[26], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_26_T_1 = cat(UInt<1>("h0"), dotProductRegs[26]) @[block_division.scala 213:16]
    node _two_complement_26_T_2 = not(_two_complement_26_T_1) @[block_division.scala 213:10]
    node _two_complement_26_T_3 = add(_two_complement_26_T_2, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_26_T_4 = tail(_two_complement_26_T_3, 1) @[block_division.scala 213:38]
    node _two_complement_26_T_5 = cat(UInt<1>("h0"), dotProductRegs[26]) @[block_division.scala 214:14]
    node _two_complement_26_T_6 = mux(_two_complement_26_T, _two_complement_26_T_4, _two_complement_26_T_5) @[block_division.scala 211:31]
    two_complement[26] <= _two_complement_26_T_6 @[block_division.scala 211:25]
    node _two_complement_buffer_26_T = asSInt(two_complement[26]) @[block_division.scala 216:53]
    two_complement_buffer[26] <= _two_complement_buffer_26_T @[block_division.scala 216:32]
    reg multiplierReg_27 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_27 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_27 <= io.sign_a[27] @[block_division.scala 206:15]
    multiplierReg_27 <= io.man_a[27] @[block_division.scala 207:21]
    node multiplication_27 = mul(multiplierReg_27, io.man_b[27]) @[block_division.scala 208:42]
    node _dotProductRegs_27_T = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_27_T_1 = tail(_dotProductRegs_27_T, 1) @[block_division.scala 209:60]
    node _dotProductRegs_27_T_2 = gt(multiplication_27, _dotProductRegs_27_T_1) @[block_division.scala 209:47]
    node _dotProductRegs_27_T_3 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_27_T_4 = tail(_dotProductRegs_27_T_3, 1) @[block_division.scala 209:78]
    node _dotProductRegs_27_T_5 = mux(_dotProductRegs_27_T_2, _dotProductRegs_27_T_4, multiplication_27) @[block_division.scala 209:31]
    dotProductRegs[27] <= _dotProductRegs_27_T_5 @[block_division.scala 209:25]
    node _signs_27_T = xor(signReg_27, io.sign_b[27]) @[block_division.scala 210:27]
    signs[27] <= _signs_27_T @[block_division.scala 210:16]
    node _two_complement_27_T = eq(signs[27], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_27_T_1 = cat(UInt<1>("h0"), dotProductRegs[27]) @[block_division.scala 213:16]
    node _two_complement_27_T_2 = not(_two_complement_27_T_1) @[block_division.scala 213:10]
    node _two_complement_27_T_3 = add(_two_complement_27_T_2, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_27_T_4 = tail(_two_complement_27_T_3, 1) @[block_division.scala 213:38]
    node _two_complement_27_T_5 = cat(UInt<1>("h0"), dotProductRegs[27]) @[block_division.scala 214:14]
    node _two_complement_27_T_6 = mux(_two_complement_27_T, _two_complement_27_T_4, _two_complement_27_T_5) @[block_division.scala 211:31]
    two_complement[27] <= _two_complement_27_T_6 @[block_division.scala 211:25]
    node _two_complement_buffer_27_T = asSInt(two_complement[27]) @[block_division.scala 216:53]
    two_complement_buffer[27] <= _two_complement_buffer_27_T @[block_division.scala 216:32]
    reg multiplierReg_28 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_28 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_28 <= io.sign_a[28] @[block_division.scala 206:15]
    multiplierReg_28 <= io.man_a[28] @[block_division.scala 207:21]
    node multiplication_28 = mul(multiplierReg_28, io.man_b[28]) @[block_division.scala 208:42]
    node _dotProductRegs_28_T = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_28_T_1 = tail(_dotProductRegs_28_T, 1) @[block_division.scala 209:60]
    node _dotProductRegs_28_T_2 = gt(multiplication_28, _dotProductRegs_28_T_1) @[block_division.scala 209:47]
    node _dotProductRegs_28_T_3 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_28_T_4 = tail(_dotProductRegs_28_T_3, 1) @[block_division.scala 209:78]
    node _dotProductRegs_28_T_5 = mux(_dotProductRegs_28_T_2, _dotProductRegs_28_T_4, multiplication_28) @[block_division.scala 209:31]
    dotProductRegs[28] <= _dotProductRegs_28_T_5 @[block_division.scala 209:25]
    node _signs_28_T = xor(signReg_28, io.sign_b[28]) @[block_division.scala 210:27]
    signs[28] <= _signs_28_T @[block_division.scala 210:16]
    node _two_complement_28_T = eq(signs[28], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_28_T_1 = cat(UInt<1>("h0"), dotProductRegs[28]) @[block_division.scala 213:16]
    node _two_complement_28_T_2 = not(_two_complement_28_T_1) @[block_division.scala 213:10]
    node _two_complement_28_T_3 = add(_two_complement_28_T_2, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_28_T_4 = tail(_two_complement_28_T_3, 1) @[block_division.scala 213:38]
    node _two_complement_28_T_5 = cat(UInt<1>("h0"), dotProductRegs[28]) @[block_division.scala 214:14]
    node _two_complement_28_T_6 = mux(_two_complement_28_T, _two_complement_28_T_4, _two_complement_28_T_5) @[block_division.scala 211:31]
    two_complement[28] <= _two_complement_28_T_6 @[block_division.scala 211:25]
    node _two_complement_buffer_28_T = asSInt(two_complement[28]) @[block_division.scala 216:53]
    two_complement_buffer[28] <= _two_complement_buffer_28_T @[block_division.scala 216:32]
    reg multiplierReg_29 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_29 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_29 <= io.sign_a[29] @[block_division.scala 206:15]
    multiplierReg_29 <= io.man_a[29] @[block_division.scala 207:21]
    node multiplication_29 = mul(multiplierReg_29, io.man_b[29]) @[block_division.scala 208:42]
    node _dotProductRegs_29_T = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_29_T_1 = tail(_dotProductRegs_29_T, 1) @[block_division.scala 209:60]
    node _dotProductRegs_29_T_2 = gt(multiplication_29, _dotProductRegs_29_T_1) @[block_division.scala 209:47]
    node _dotProductRegs_29_T_3 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_29_T_4 = tail(_dotProductRegs_29_T_3, 1) @[block_division.scala 209:78]
    node _dotProductRegs_29_T_5 = mux(_dotProductRegs_29_T_2, _dotProductRegs_29_T_4, multiplication_29) @[block_division.scala 209:31]
    dotProductRegs[29] <= _dotProductRegs_29_T_5 @[block_division.scala 209:25]
    node _signs_29_T = xor(signReg_29, io.sign_b[29]) @[block_division.scala 210:27]
    signs[29] <= _signs_29_T @[block_division.scala 210:16]
    node _two_complement_29_T = eq(signs[29], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_29_T_1 = cat(UInt<1>("h0"), dotProductRegs[29]) @[block_division.scala 213:16]
    node _two_complement_29_T_2 = not(_two_complement_29_T_1) @[block_division.scala 213:10]
    node _two_complement_29_T_3 = add(_two_complement_29_T_2, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_29_T_4 = tail(_two_complement_29_T_3, 1) @[block_division.scala 213:38]
    node _two_complement_29_T_5 = cat(UInt<1>("h0"), dotProductRegs[29]) @[block_division.scala 214:14]
    node _two_complement_29_T_6 = mux(_two_complement_29_T, _two_complement_29_T_4, _two_complement_29_T_5) @[block_division.scala 211:31]
    two_complement[29] <= _two_complement_29_T_6 @[block_division.scala 211:25]
    node _two_complement_buffer_29_T = asSInt(two_complement[29]) @[block_division.scala 216:53]
    two_complement_buffer[29] <= _two_complement_buffer_29_T @[block_division.scala 216:32]
    reg multiplierReg_30 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_30 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_30 <= io.sign_a[30] @[block_division.scala 206:15]
    multiplierReg_30 <= io.man_a[30] @[block_division.scala 207:21]
    node multiplication_30 = mul(multiplierReg_30, io.man_b[30]) @[block_division.scala 208:42]
    node _dotProductRegs_30_T = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_30_T_1 = tail(_dotProductRegs_30_T, 1) @[block_division.scala 209:60]
    node _dotProductRegs_30_T_2 = gt(multiplication_30, _dotProductRegs_30_T_1) @[block_division.scala 209:47]
    node _dotProductRegs_30_T_3 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_30_T_4 = tail(_dotProductRegs_30_T_3, 1) @[block_division.scala 209:78]
    node _dotProductRegs_30_T_5 = mux(_dotProductRegs_30_T_2, _dotProductRegs_30_T_4, multiplication_30) @[block_division.scala 209:31]
    dotProductRegs[30] <= _dotProductRegs_30_T_5 @[block_division.scala 209:25]
    node _signs_30_T = xor(signReg_30, io.sign_b[30]) @[block_division.scala 210:27]
    signs[30] <= _signs_30_T @[block_division.scala 210:16]
    node _two_complement_30_T = eq(signs[30], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_30_T_1 = cat(UInt<1>("h0"), dotProductRegs[30]) @[block_division.scala 213:16]
    node _two_complement_30_T_2 = not(_two_complement_30_T_1) @[block_division.scala 213:10]
    node _two_complement_30_T_3 = add(_two_complement_30_T_2, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_30_T_4 = tail(_two_complement_30_T_3, 1) @[block_division.scala 213:38]
    node _two_complement_30_T_5 = cat(UInt<1>("h0"), dotProductRegs[30]) @[block_division.scala 214:14]
    node _two_complement_30_T_6 = mux(_two_complement_30_T, _two_complement_30_T_4, _two_complement_30_T_5) @[block_division.scala 211:31]
    two_complement[30] <= _two_complement_30_T_6 @[block_division.scala 211:25]
    node _two_complement_buffer_30_T = asSInt(two_complement[30]) @[block_division.scala 216:53]
    two_complement_buffer[30] <= _two_complement_buffer_30_T @[block_division.scala 216:32]
    reg multiplierReg_31 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_31 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_31 <= io.sign_a[31] @[block_division.scala 206:15]
    multiplierReg_31 <= io.man_a[31] @[block_division.scala 207:21]
    node multiplication_31 = mul(multiplierReg_31, io.man_b[31]) @[block_division.scala 208:42]
    node _dotProductRegs_31_T = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_31_T_1 = tail(_dotProductRegs_31_T, 1) @[block_division.scala 209:60]
    node _dotProductRegs_31_T_2 = gt(multiplication_31, _dotProductRegs_31_T_1) @[block_division.scala 209:47]
    node _dotProductRegs_31_T_3 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_31_T_4 = tail(_dotProductRegs_31_T_3, 1) @[block_division.scala 209:78]
    node _dotProductRegs_31_T_5 = mux(_dotProductRegs_31_T_2, _dotProductRegs_31_T_4, multiplication_31) @[block_division.scala 209:31]
    dotProductRegs[31] <= _dotProductRegs_31_T_5 @[block_division.scala 209:25]
    node _signs_31_T = xor(signReg_31, io.sign_b[31]) @[block_division.scala 210:27]
    signs[31] <= _signs_31_T @[block_division.scala 210:16]
    node _two_complement_31_T = eq(signs[31], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_31_T_1 = cat(UInt<1>("h0"), dotProductRegs[31]) @[block_division.scala 213:16]
    node _two_complement_31_T_2 = not(_two_complement_31_T_1) @[block_division.scala 213:10]
    node _two_complement_31_T_3 = add(_two_complement_31_T_2, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_31_T_4 = tail(_two_complement_31_T_3, 1) @[block_division.scala 213:38]
    node _two_complement_31_T_5 = cat(UInt<1>("h0"), dotProductRegs[31]) @[block_division.scala 214:14]
    node _two_complement_31_T_6 = mux(_two_complement_31_T, _two_complement_31_T_4, _two_complement_31_T_5) @[block_division.scala 211:31]
    two_complement[31] <= _two_complement_31_T_6 @[block_division.scala 211:25]
    node _two_complement_buffer_31_T = asSInt(two_complement[31]) @[block_division.scala 216:53]
    two_complement_buffer[31] <= _two_complement_buffer_31_T @[block_division.scala 216:32]
    reg multiplierReg_32 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_32 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_32 <= io.sign_a[32] @[block_division.scala 206:15]
    multiplierReg_32 <= io.man_a[32] @[block_division.scala 207:21]
    node multiplication_32 = mul(multiplierReg_32, io.man_b[32]) @[block_division.scala 208:42]
    node _dotProductRegs_32_T = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_32_T_1 = tail(_dotProductRegs_32_T, 1) @[block_division.scala 209:60]
    node _dotProductRegs_32_T_2 = gt(multiplication_32, _dotProductRegs_32_T_1) @[block_division.scala 209:47]
    node _dotProductRegs_32_T_3 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_32_T_4 = tail(_dotProductRegs_32_T_3, 1) @[block_division.scala 209:78]
    node _dotProductRegs_32_T_5 = mux(_dotProductRegs_32_T_2, _dotProductRegs_32_T_4, multiplication_32) @[block_division.scala 209:31]
    dotProductRegs[32] <= _dotProductRegs_32_T_5 @[block_division.scala 209:25]
    node _signs_32_T = xor(signReg_32, io.sign_b[32]) @[block_division.scala 210:27]
    signs[32] <= _signs_32_T @[block_division.scala 210:16]
    node _two_complement_32_T = eq(signs[32], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_32_T_1 = cat(UInt<1>("h0"), dotProductRegs[32]) @[block_division.scala 213:16]
    node _two_complement_32_T_2 = not(_two_complement_32_T_1) @[block_division.scala 213:10]
    node _two_complement_32_T_3 = add(_two_complement_32_T_2, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_32_T_4 = tail(_two_complement_32_T_3, 1) @[block_division.scala 213:38]
    node _two_complement_32_T_5 = cat(UInt<1>("h0"), dotProductRegs[32]) @[block_division.scala 214:14]
    node _two_complement_32_T_6 = mux(_two_complement_32_T, _two_complement_32_T_4, _two_complement_32_T_5) @[block_division.scala 211:31]
    two_complement[32] <= _two_complement_32_T_6 @[block_division.scala 211:25]
    node _two_complement_buffer_32_T = asSInt(two_complement[32]) @[block_division.scala 216:53]
    two_complement_buffer[32] <= _two_complement_buffer_32_T @[block_division.scala 216:32]
    reg multiplierReg_33 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_33 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_33 <= io.sign_a[33] @[block_division.scala 206:15]
    multiplierReg_33 <= io.man_a[33] @[block_division.scala 207:21]
    node multiplication_33 = mul(multiplierReg_33, io.man_b[33]) @[block_division.scala 208:42]
    node _dotProductRegs_33_T = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_33_T_1 = tail(_dotProductRegs_33_T, 1) @[block_division.scala 209:60]
    node _dotProductRegs_33_T_2 = gt(multiplication_33, _dotProductRegs_33_T_1) @[block_division.scala 209:47]
    node _dotProductRegs_33_T_3 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_33_T_4 = tail(_dotProductRegs_33_T_3, 1) @[block_division.scala 209:78]
    node _dotProductRegs_33_T_5 = mux(_dotProductRegs_33_T_2, _dotProductRegs_33_T_4, multiplication_33) @[block_division.scala 209:31]
    dotProductRegs[33] <= _dotProductRegs_33_T_5 @[block_division.scala 209:25]
    node _signs_33_T = xor(signReg_33, io.sign_b[33]) @[block_division.scala 210:27]
    signs[33] <= _signs_33_T @[block_division.scala 210:16]
    node _two_complement_33_T = eq(signs[33], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_33_T_1 = cat(UInt<1>("h0"), dotProductRegs[33]) @[block_division.scala 213:16]
    node _two_complement_33_T_2 = not(_two_complement_33_T_1) @[block_division.scala 213:10]
    node _two_complement_33_T_3 = add(_two_complement_33_T_2, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_33_T_4 = tail(_two_complement_33_T_3, 1) @[block_division.scala 213:38]
    node _two_complement_33_T_5 = cat(UInt<1>("h0"), dotProductRegs[33]) @[block_division.scala 214:14]
    node _two_complement_33_T_6 = mux(_two_complement_33_T, _two_complement_33_T_4, _two_complement_33_T_5) @[block_division.scala 211:31]
    two_complement[33] <= _two_complement_33_T_6 @[block_division.scala 211:25]
    node _two_complement_buffer_33_T = asSInt(two_complement[33]) @[block_division.scala 216:53]
    two_complement_buffer[33] <= _two_complement_buffer_33_T @[block_division.scala 216:32]
    reg multiplierReg_34 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_34 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_34 <= io.sign_a[34] @[block_division.scala 206:15]
    multiplierReg_34 <= io.man_a[34] @[block_division.scala 207:21]
    node multiplication_34 = mul(multiplierReg_34, io.man_b[34]) @[block_division.scala 208:42]
    node _dotProductRegs_34_T = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_34_T_1 = tail(_dotProductRegs_34_T, 1) @[block_division.scala 209:60]
    node _dotProductRegs_34_T_2 = gt(multiplication_34, _dotProductRegs_34_T_1) @[block_division.scala 209:47]
    node _dotProductRegs_34_T_3 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_34_T_4 = tail(_dotProductRegs_34_T_3, 1) @[block_division.scala 209:78]
    node _dotProductRegs_34_T_5 = mux(_dotProductRegs_34_T_2, _dotProductRegs_34_T_4, multiplication_34) @[block_division.scala 209:31]
    dotProductRegs[34] <= _dotProductRegs_34_T_5 @[block_division.scala 209:25]
    node _signs_34_T = xor(signReg_34, io.sign_b[34]) @[block_division.scala 210:27]
    signs[34] <= _signs_34_T @[block_division.scala 210:16]
    node _two_complement_34_T = eq(signs[34], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_34_T_1 = cat(UInt<1>("h0"), dotProductRegs[34]) @[block_division.scala 213:16]
    node _two_complement_34_T_2 = not(_two_complement_34_T_1) @[block_division.scala 213:10]
    node _two_complement_34_T_3 = add(_two_complement_34_T_2, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_34_T_4 = tail(_two_complement_34_T_3, 1) @[block_division.scala 213:38]
    node _two_complement_34_T_5 = cat(UInt<1>("h0"), dotProductRegs[34]) @[block_division.scala 214:14]
    node _two_complement_34_T_6 = mux(_two_complement_34_T, _two_complement_34_T_4, _two_complement_34_T_5) @[block_division.scala 211:31]
    two_complement[34] <= _two_complement_34_T_6 @[block_division.scala 211:25]
    node _two_complement_buffer_34_T = asSInt(two_complement[34]) @[block_division.scala 216:53]
    two_complement_buffer[34] <= _two_complement_buffer_34_T @[block_division.scala 216:32]
    reg multiplierReg_35 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_35 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_35 <= io.sign_a[35] @[block_division.scala 206:15]
    multiplierReg_35 <= io.man_a[35] @[block_division.scala 207:21]
    node multiplication_35 = mul(multiplierReg_35, io.man_b[35]) @[block_division.scala 208:42]
    node _dotProductRegs_35_T = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_35_T_1 = tail(_dotProductRegs_35_T, 1) @[block_division.scala 209:60]
    node _dotProductRegs_35_T_2 = gt(multiplication_35, _dotProductRegs_35_T_1) @[block_division.scala 209:47]
    node _dotProductRegs_35_T_3 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_35_T_4 = tail(_dotProductRegs_35_T_3, 1) @[block_division.scala 209:78]
    node _dotProductRegs_35_T_5 = mux(_dotProductRegs_35_T_2, _dotProductRegs_35_T_4, multiplication_35) @[block_division.scala 209:31]
    dotProductRegs[35] <= _dotProductRegs_35_T_5 @[block_division.scala 209:25]
    node _signs_35_T = xor(signReg_35, io.sign_b[35]) @[block_division.scala 210:27]
    signs[35] <= _signs_35_T @[block_division.scala 210:16]
    node _two_complement_35_T = eq(signs[35], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_35_T_1 = cat(UInt<1>("h0"), dotProductRegs[35]) @[block_division.scala 213:16]
    node _two_complement_35_T_2 = not(_two_complement_35_T_1) @[block_division.scala 213:10]
    node _two_complement_35_T_3 = add(_two_complement_35_T_2, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_35_T_4 = tail(_two_complement_35_T_3, 1) @[block_division.scala 213:38]
    node _two_complement_35_T_5 = cat(UInt<1>("h0"), dotProductRegs[35]) @[block_division.scala 214:14]
    node _two_complement_35_T_6 = mux(_two_complement_35_T, _two_complement_35_T_4, _two_complement_35_T_5) @[block_division.scala 211:31]
    two_complement[35] <= _two_complement_35_T_6 @[block_division.scala 211:25]
    node _two_complement_buffer_35_T = asSInt(two_complement[35]) @[block_division.scala 216:53]
    two_complement_buffer[35] <= _two_complement_buffer_35_T @[block_division.scala 216:32]
    reg multiplierReg_36 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_36 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_36 <= io.sign_a[36] @[block_division.scala 206:15]
    multiplierReg_36 <= io.man_a[36] @[block_division.scala 207:21]
    node multiplication_36 = mul(multiplierReg_36, io.man_b[36]) @[block_division.scala 208:42]
    node _dotProductRegs_36_T = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_36_T_1 = tail(_dotProductRegs_36_T, 1) @[block_division.scala 209:60]
    node _dotProductRegs_36_T_2 = gt(multiplication_36, _dotProductRegs_36_T_1) @[block_division.scala 209:47]
    node _dotProductRegs_36_T_3 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_36_T_4 = tail(_dotProductRegs_36_T_3, 1) @[block_division.scala 209:78]
    node _dotProductRegs_36_T_5 = mux(_dotProductRegs_36_T_2, _dotProductRegs_36_T_4, multiplication_36) @[block_division.scala 209:31]
    dotProductRegs[36] <= _dotProductRegs_36_T_5 @[block_division.scala 209:25]
    node _signs_36_T = xor(signReg_36, io.sign_b[36]) @[block_division.scala 210:27]
    signs[36] <= _signs_36_T @[block_division.scala 210:16]
    node _two_complement_36_T = eq(signs[36], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_36_T_1 = cat(UInt<1>("h0"), dotProductRegs[36]) @[block_division.scala 213:16]
    node _two_complement_36_T_2 = not(_two_complement_36_T_1) @[block_division.scala 213:10]
    node _two_complement_36_T_3 = add(_two_complement_36_T_2, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_36_T_4 = tail(_two_complement_36_T_3, 1) @[block_division.scala 213:38]
    node _two_complement_36_T_5 = cat(UInt<1>("h0"), dotProductRegs[36]) @[block_division.scala 214:14]
    node _two_complement_36_T_6 = mux(_two_complement_36_T, _two_complement_36_T_4, _two_complement_36_T_5) @[block_division.scala 211:31]
    two_complement[36] <= _two_complement_36_T_6 @[block_division.scala 211:25]
    node _two_complement_buffer_36_T = asSInt(two_complement[36]) @[block_division.scala 216:53]
    two_complement_buffer[36] <= _two_complement_buffer_36_T @[block_division.scala 216:32]
    reg multiplierReg_37 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_37 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_37 <= io.sign_a[37] @[block_division.scala 206:15]
    multiplierReg_37 <= io.man_a[37] @[block_division.scala 207:21]
    node multiplication_37 = mul(multiplierReg_37, io.man_b[37]) @[block_division.scala 208:42]
    node _dotProductRegs_37_T = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_37_T_1 = tail(_dotProductRegs_37_T, 1) @[block_division.scala 209:60]
    node _dotProductRegs_37_T_2 = gt(multiplication_37, _dotProductRegs_37_T_1) @[block_division.scala 209:47]
    node _dotProductRegs_37_T_3 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_37_T_4 = tail(_dotProductRegs_37_T_3, 1) @[block_division.scala 209:78]
    node _dotProductRegs_37_T_5 = mux(_dotProductRegs_37_T_2, _dotProductRegs_37_T_4, multiplication_37) @[block_division.scala 209:31]
    dotProductRegs[37] <= _dotProductRegs_37_T_5 @[block_division.scala 209:25]
    node _signs_37_T = xor(signReg_37, io.sign_b[37]) @[block_division.scala 210:27]
    signs[37] <= _signs_37_T @[block_division.scala 210:16]
    node _two_complement_37_T = eq(signs[37], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_37_T_1 = cat(UInt<1>("h0"), dotProductRegs[37]) @[block_division.scala 213:16]
    node _two_complement_37_T_2 = not(_two_complement_37_T_1) @[block_division.scala 213:10]
    node _two_complement_37_T_3 = add(_two_complement_37_T_2, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_37_T_4 = tail(_two_complement_37_T_3, 1) @[block_division.scala 213:38]
    node _two_complement_37_T_5 = cat(UInt<1>("h0"), dotProductRegs[37]) @[block_division.scala 214:14]
    node _two_complement_37_T_6 = mux(_two_complement_37_T, _two_complement_37_T_4, _two_complement_37_T_5) @[block_division.scala 211:31]
    two_complement[37] <= _two_complement_37_T_6 @[block_division.scala 211:25]
    node _two_complement_buffer_37_T = asSInt(two_complement[37]) @[block_division.scala 216:53]
    two_complement_buffer[37] <= _two_complement_buffer_37_T @[block_division.scala 216:32]
    reg multiplierReg_38 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_38 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_38 <= io.sign_a[38] @[block_division.scala 206:15]
    multiplierReg_38 <= io.man_a[38] @[block_division.scala 207:21]
    node multiplication_38 = mul(multiplierReg_38, io.man_b[38]) @[block_division.scala 208:42]
    node _dotProductRegs_38_T = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_38_T_1 = tail(_dotProductRegs_38_T, 1) @[block_division.scala 209:60]
    node _dotProductRegs_38_T_2 = gt(multiplication_38, _dotProductRegs_38_T_1) @[block_division.scala 209:47]
    node _dotProductRegs_38_T_3 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_38_T_4 = tail(_dotProductRegs_38_T_3, 1) @[block_division.scala 209:78]
    node _dotProductRegs_38_T_5 = mux(_dotProductRegs_38_T_2, _dotProductRegs_38_T_4, multiplication_38) @[block_division.scala 209:31]
    dotProductRegs[38] <= _dotProductRegs_38_T_5 @[block_division.scala 209:25]
    node _signs_38_T = xor(signReg_38, io.sign_b[38]) @[block_division.scala 210:27]
    signs[38] <= _signs_38_T @[block_division.scala 210:16]
    node _two_complement_38_T = eq(signs[38], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_38_T_1 = cat(UInt<1>("h0"), dotProductRegs[38]) @[block_division.scala 213:16]
    node _two_complement_38_T_2 = not(_two_complement_38_T_1) @[block_division.scala 213:10]
    node _two_complement_38_T_3 = add(_two_complement_38_T_2, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_38_T_4 = tail(_two_complement_38_T_3, 1) @[block_division.scala 213:38]
    node _two_complement_38_T_5 = cat(UInt<1>("h0"), dotProductRegs[38]) @[block_division.scala 214:14]
    node _two_complement_38_T_6 = mux(_two_complement_38_T, _two_complement_38_T_4, _two_complement_38_T_5) @[block_division.scala 211:31]
    two_complement[38] <= _two_complement_38_T_6 @[block_division.scala 211:25]
    node _two_complement_buffer_38_T = asSInt(two_complement[38]) @[block_division.scala 216:53]
    two_complement_buffer[38] <= _two_complement_buffer_38_T @[block_division.scala 216:32]
    reg multiplierReg_39 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_39 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_39 <= io.sign_a[39] @[block_division.scala 206:15]
    multiplierReg_39 <= io.man_a[39] @[block_division.scala 207:21]
    node multiplication_39 = mul(multiplierReg_39, io.man_b[39]) @[block_division.scala 208:42]
    node _dotProductRegs_39_T = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_39_T_1 = tail(_dotProductRegs_39_T, 1) @[block_division.scala 209:60]
    node _dotProductRegs_39_T_2 = gt(multiplication_39, _dotProductRegs_39_T_1) @[block_division.scala 209:47]
    node _dotProductRegs_39_T_3 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_39_T_4 = tail(_dotProductRegs_39_T_3, 1) @[block_division.scala 209:78]
    node _dotProductRegs_39_T_5 = mux(_dotProductRegs_39_T_2, _dotProductRegs_39_T_4, multiplication_39) @[block_division.scala 209:31]
    dotProductRegs[39] <= _dotProductRegs_39_T_5 @[block_division.scala 209:25]
    node _signs_39_T = xor(signReg_39, io.sign_b[39]) @[block_division.scala 210:27]
    signs[39] <= _signs_39_T @[block_division.scala 210:16]
    node _two_complement_39_T = eq(signs[39], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_39_T_1 = cat(UInt<1>("h0"), dotProductRegs[39]) @[block_division.scala 213:16]
    node _two_complement_39_T_2 = not(_two_complement_39_T_1) @[block_division.scala 213:10]
    node _two_complement_39_T_3 = add(_two_complement_39_T_2, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_39_T_4 = tail(_two_complement_39_T_3, 1) @[block_division.scala 213:38]
    node _two_complement_39_T_5 = cat(UInt<1>("h0"), dotProductRegs[39]) @[block_division.scala 214:14]
    node _two_complement_39_T_6 = mux(_two_complement_39_T, _two_complement_39_T_4, _two_complement_39_T_5) @[block_division.scala 211:31]
    two_complement[39] <= _two_complement_39_T_6 @[block_division.scala 211:25]
    node _two_complement_buffer_39_T = asSInt(two_complement[39]) @[block_division.scala 216:53]
    two_complement_buffer[39] <= _two_complement_buffer_39_T @[block_division.scala 216:32]
    reg multiplierReg_40 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_40 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_40 <= io.sign_a[40] @[block_division.scala 206:15]
    multiplierReg_40 <= io.man_a[40] @[block_division.scala 207:21]
    node multiplication_40 = mul(multiplierReg_40, io.man_b[40]) @[block_division.scala 208:42]
    node _dotProductRegs_40_T = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_40_T_1 = tail(_dotProductRegs_40_T, 1) @[block_division.scala 209:60]
    node _dotProductRegs_40_T_2 = gt(multiplication_40, _dotProductRegs_40_T_1) @[block_division.scala 209:47]
    node _dotProductRegs_40_T_3 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_40_T_4 = tail(_dotProductRegs_40_T_3, 1) @[block_division.scala 209:78]
    node _dotProductRegs_40_T_5 = mux(_dotProductRegs_40_T_2, _dotProductRegs_40_T_4, multiplication_40) @[block_division.scala 209:31]
    dotProductRegs[40] <= _dotProductRegs_40_T_5 @[block_division.scala 209:25]
    node _signs_40_T = xor(signReg_40, io.sign_b[40]) @[block_division.scala 210:27]
    signs[40] <= _signs_40_T @[block_division.scala 210:16]
    node _two_complement_40_T = eq(signs[40], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_40_T_1 = cat(UInt<1>("h0"), dotProductRegs[40]) @[block_division.scala 213:16]
    node _two_complement_40_T_2 = not(_two_complement_40_T_1) @[block_division.scala 213:10]
    node _two_complement_40_T_3 = add(_two_complement_40_T_2, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_40_T_4 = tail(_two_complement_40_T_3, 1) @[block_division.scala 213:38]
    node _two_complement_40_T_5 = cat(UInt<1>("h0"), dotProductRegs[40]) @[block_division.scala 214:14]
    node _two_complement_40_T_6 = mux(_two_complement_40_T, _two_complement_40_T_4, _two_complement_40_T_5) @[block_division.scala 211:31]
    two_complement[40] <= _two_complement_40_T_6 @[block_division.scala 211:25]
    node _two_complement_buffer_40_T = asSInt(two_complement[40]) @[block_division.scala 216:53]
    two_complement_buffer[40] <= _two_complement_buffer_40_T @[block_division.scala 216:32]
    reg multiplierReg_41 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_41 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_41 <= io.sign_a[41] @[block_division.scala 206:15]
    multiplierReg_41 <= io.man_a[41] @[block_division.scala 207:21]
    node multiplication_41 = mul(multiplierReg_41, io.man_b[41]) @[block_division.scala 208:42]
    node _dotProductRegs_41_T = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_41_T_1 = tail(_dotProductRegs_41_T, 1) @[block_division.scala 209:60]
    node _dotProductRegs_41_T_2 = gt(multiplication_41, _dotProductRegs_41_T_1) @[block_division.scala 209:47]
    node _dotProductRegs_41_T_3 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_41_T_4 = tail(_dotProductRegs_41_T_3, 1) @[block_division.scala 209:78]
    node _dotProductRegs_41_T_5 = mux(_dotProductRegs_41_T_2, _dotProductRegs_41_T_4, multiplication_41) @[block_division.scala 209:31]
    dotProductRegs[41] <= _dotProductRegs_41_T_5 @[block_division.scala 209:25]
    node _signs_41_T = xor(signReg_41, io.sign_b[41]) @[block_division.scala 210:27]
    signs[41] <= _signs_41_T @[block_division.scala 210:16]
    node _two_complement_41_T = eq(signs[41], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_41_T_1 = cat(UInt<1>("h0"), dotProductRegs[41]) @[block_division.scala 213:16]
    node _two_complement_41_T_2 = not(_two_complement_41_T_1) @[block_division.scala 213:10]
    node _two_complement_41_T_3 = add(_two_complement_41_T_2, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_41_T_4 = tail(_two_complement_41_T_3, 1) @[block_division.scala 213:38]
    node _two_complement_41_T_5 = cat(UInt<1>("h0"), dotProductRegs[41]) @[block_division.scala 214:14]
    node _two_complement_41_T_6 = mux(_two_complement_41_T, _two_complement_41_T_4, _two_complement_41_T_5) @[block_division.scala 211:31]
    two_complement[41] <= _two_complement_41_T_6 @[block_division.scala 211:25]
    node _two_complement_buffer_41_T = asSInt(two_complement[41]) @[block_division.scala 216:53]
    two_complement_buffer[41] <= _two_complement_buffer_41_T @[block_division.scala 216:32]
    reg multiplierReg_42 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_42 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_42 <= io.sign_a[42] @[block_division.scala 206:15]
    multiplierReg_42 <= io.man_a[42] @[block_division.scala 207:21]
    node multiplication_42 = mul(multiplierReg_42, io.man_b[42]) @[block_division.scala 208:42]
    node _dotProductRegs_42_T = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_42_T_1 = tail(_dotProductRegs_42_T, 1) @[block_division.scala 209:60]
    node _dotProductRegs_42_T_2 = gt(multiplication_42, _dotProductRegs_42_T_1) @[block_division.scala 209:47]
    node _dotProductRegs_42_T_3 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_42_T_4 = tail(_dotProductRegs_42_T_3, 1) @[block_division.scala 209:78]
    node _dotProductRegs_42_T_5 = mux(_dotProductRegs_42_T_2, _dotProductRegs_42_T_4, multiplication_42) @[block_division.scala 209:31]
    dotProductRegs[42] <= _dotProductRegs_42_T_5 @[block_division.scala 209:25]
    node _signs_42_T = xor(signReg_42, io.sign_b[42]) @[block_division.scala 210:27]
    signs[42] <= _signs_42_T @[block_division.scala 210:16]
    node _two_complement_42_T = eq(signs[42], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_42_T_1 = cat(UInt<1>("h0"), dotProductRegs[42]) @[block_division.scala 213:16]
    node _two_complement_42_T_2 = not(_two_complement_42_T_1) @[block_division.scala 213:10]
    node _two_complement_42_T_3 = add(_two_complement_42_T_2, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_42_T_4 = tail(_two_complement_42_T_3, 1) @[block_division.scala 213:38]
    node _two_complement_42_T_5 = cat(UInt<1>("h0"), dotProductRegs[42]) @[block_division.scala 214:14]
    node _two_complement_42_T_6 = mux(_two_complement_42_T, _two_complement_42_T_4, _two_complement_42_T_5) @[block_division.scala 211:31]
    two_complement[42] <= _two_complement_42_T_6 @[block_division.scala 211:25]
    node _two_complement_buffer_42_T = asSInt(two_complement[42]) @[block_division.scala 216:53]
    two_complement_buffer[42] <= _two_complement_buffer_42_T @[block_division.scala 216:32]
    reg multiplierReg_43 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_43 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_43 <= io.sign_a[43] @[block_division.scala 206:15]
    multiplierReg_43 <= io.man_a[43] @[block_division.scala 207:21]
    node multiplication_43 = mul(multiplierReg_43, io.man_b[43]) @[block_division.scala 208:42]
    node _dotProductRegs_43_T = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_43_T_1 = tail(_dotProductRegs_43_T, 1) @[block_division.scala 209:60]
    node _dotProductRegs_43_T_2 = gt(multiplication_43, _dotProductRegs_43_T_1) @[block_division.scala 209:47]
    node _dotProductRegs_43_T_3 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_43_T_4 = tail(_dotProductRegs_43_T_3, 1) @[block_division.scala 209:78]
    node _dotProductRegs_43_T_5 = mux(_dotProductRegs_43_T_2, _dotProductRegs_43_T_4, multiplication_43) @[block_division.scala 209:31]
    dotProductRegs[43] <= _dotProductRegs_43_T_5 @[block_division.scala 209:25]
    node _signs_43_T = xor(signReg_43, io.sign_b[43]) @[block_division.scala 210:27]
    signs[43] <= _signs_43_T @[block_division.scala 210:16]
    node _two_complement_43_T = eq(signs[43], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_43_T_1 = cat(UInt<1>("h0"), dotProductRegs[43]) @[block_division.scala 213:16]
    node _two_complement_43_T_2 = not(_two_complement_43_T_1) @[block_division.scala 213:10]
    node _two_complement_43_T_3 = add(_two_complement_43_T_2, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_43_T_4 = tail(_two_complement_43_T_3, 1) @[block_division.scala 213:38]
    node _two_complement_43_T_5 = cat(UInt<1>("h0"), dotProductRegs[43]) @[block_division.scala 214:14]
    node _two_complement_43_T_6 = mux(_two_complement_43_T, _two_complement_43_T_4, _two_complement_43_T_5) @[block_division.scala 211:31]
    two_complement[43] <= _two_complement_43_T_6 @[block_division.scala 211:25]
    node _two_complement_buffer_43_T = asSInt(two_complement[43]) @[block_division.scala 216:53]
    two_complement_buffer[43] <= _two_complement_buffer_43_T @[block_division.scala 216:32]
    reg multiplierReg_44 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_44 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_44 <= io.sign_a[44] @[block_division.scala 206:15]
    multiplierReg_44 <= io.man_a[44] @[block_division.scala 207:21]
    node multiplication_44 = mul(multiplierReg_44, io.man_b[44]) @[block_division.scala 208:42]
    node _dotProductRegs_44_T = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_44_T_1 = tail(_dotProductRegs_44_T, 1) @[block_division.scala 209:60]
    node _dotProductRegs_44_T_2 = gt(multiplication_44, _dotProductRegs_44_T_1) @[block_division.scala 209:47]
    node _dotProductRegs_44_T_3 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_44_T_4 = tail(_dotProductRegs_44_T_3, 1) @[block_division.scala 209:78]
    node _dotProductRegs_44_T_5 = mux(_dotProductRegs_44_T_2, _dotProductRegs_44_T_4, multiplication_44) @[block_division.scala 209:31]
    dotProductRegs[44] <= _dotProductRegs_44_T_5 @[block_division.scala 209:25]
    node _signs_44_T = xor(signReg_44, io.sign_b[44]) @[block_division.scala 210:27]
    signs[44] <= _signs_44_T @[block_division.scala 210:16]
    node _two_complement_44_T = eq(signs[44], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_44_T_1 = cat(UInt<1>("h0"), dotProductRegs[44]) @[block_division.scala 213:16]
    node _two_complement_44_T_2 = not(_two_complement_44_T_1) @[block_division.scala 213:10]
    node _two_complement_44_T_3 = add(_two_complement_44_T_2, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_44_T_4 = tail(_two_complement_44_T_3, 1) @[block_division.scala 213:38]
    node _two_complement_44_T_5 = cat(UInt<1>("h0"), dotProductRegs[44]) @[block_division.scala 214:14]
    node _two_complement_44_T_6 = mux(_two_complement_44_T, _two_complement_44_T_4, _two_complement_44_T_5) @[block_division.scala 211:31]
    two_complement[44] <= _two_complement_44_T_6 @[block_division.scala 211:25]
    node _two_complement_buffer_44_T = asSInt(two_complement[44]) @[block_division.scala 216:53]
    two_complement_buffer[44] <= _two_complement_buffer_44_T @[block_division.scala 216:32]
    reg multiplierReg_45 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_45 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_45 <= io.sign_a[45] @[block_division.scala 206:15]
    multiplierReg_45 <= io.man_a[45] @[block_division.scala 207:21]
    node multiplication_45 = mul(multiplierReg_45, io.man_b[45]) @[block_division.scala 208:42]
    node _dotProductRegs_45_T = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_45_T_1 = tail(_dotProductRegs_45_T, 1) @[block_division.scala 209:60]
    node _dotProductRegs_45_T_2 = gt(multiplication_45, _dotProductRegs_45_T_1) @[block_division.scala 209:47]
    node _dotProductRegs_45_T_3 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_45_T_4 = tail(_dotProductRegs_45_T_3, 1) @[block_division.scala 209:78]
    node _dotProductRegs_45_T_5 = mux(_dotProductRegs_45_T_2, _dotProductRegs_45_T_4, multiplication_45) @[block_division.scala 209:31]
    dotProductRegs[45] <= _dotProductRegs_45_T_5 @[block_division.scala 209:25]
    node _signs_45_T = xor(signReg_45, io.sign_b[45]) @[block_division.scala 210:27]
    signs[45] <= _signs_45_T @[block_division.scala 210:16]
    node _two_complement_45_T = eq(signs[45], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_45_T_1 = cat(UInt<1>("h0"), dotProductRegs[45]) @[block_division.scala 213:16]
    node _two_complement_45_T_2 = not(_two_complement_45_T_1) @[block_division.scala 213:10]
    node _two_complement_45_T_3 = add(_two_complement_45_T_2, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_45_T_4 = tail(_two_complement_45_T_3, 1) @[block_division.scala 213:38]
    node _two_complement_45_T_5 = cat(UInt<1>("h0"), dotProductRegs[45]) @[block_division.scala 214:14]
    node _two_complement_45_T_6 = mux(_two_complement_45_T, _two_complement_45_T_4, _two_complement_45_T_5) @[block_division.scala 211:31]
    two_complement[45] <= _two_complement_45_T_6 @[block_division.scala 211:25]
    node _two_complement_buffer_45_T = asSInt(two_complement[45]) @[block_division.scala 216:53]
    two_complement_buffer[45] <= _two_complement_buffer_45_T @[block_division.scala 216:32]
    reg multiplierReg_46 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_46 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_46 <= io.sign_a[46] @[block_division.scala 206:15]
    multiplierReg_46 <= io.man_a[46] @[block_division.scala 207:21]
    node multiplication_46 = mul(multiplierReg_46, io.man_b[46]) @[block_division.scala 208:42]
    node _dotProductRegs_46_T = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_46_T_1 = tail(_dotProductRegs_46_T, 1) @[block_division.scala 209:60]
    node _dotProductRegs_46_T_2 = gt(multiplication_46, _dotProductRegs_46_T_1) @[block_division.scala 209:47]
    node _dotProductRegs_46_T_3 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_46_T_4 = tail(_dotProductRegs_46_T_3, 1) @[block_division.scala 209:78]
    node _dotProductRegs_46_T_5 = mux(_dotProductRegs_46_T_2, _dotProductRegs_46_T_4, multiplication_46) @[block_division.scala 209:31]
    dotProductRegs[46] <= _dotProductRegs_46_T_5 @[block_division.scala 209:25]
    node _signs_46_T = xor(signReg_46, io.sign_b[46]) @[block_division.scala 210:27]
    signs[46] <= _signs_46_T @[block_division.scala 210:16]
    node _two_complement_46_T = eq(signs[46], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_46_T_1 = cat(UInt<1>("h0"), dotProductRegs[46]) @[block_division.scala 213:16]
    node _two_complement_46_T_2 = not(_two_complement_46_T_1) @[block_division.scala 213:10]
    node _two_complement_46_T_3 = add(_two_complement_46_T_2, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_46_T_4 = tail(_two_complement_46_T_3, 1) @[block_division.scala 213:38]
    node _two_complement_46_T_5 = cat(UInt<1>("h0"), dotProductRegs[46]) @[block_division.scala 214:14]
    node _two_complement_46_T_6 = mux(_two_complement_46_T, _two_complement_46_T_4, _two_complement_46_T_5) @[block_division.scala 211:31]
    two_complement[46] <= _two_complement_46_T_6 @[block_division.scala 211:25]
    node _two_complement_buffer_46_T = asSInt(two_complement[46]) @[block_division.scala 216:53]
    two_complement_buffer[46] <= _two_complement_buffer_46_T @[block_division.scala 216:32]
    reg multiplierReg_47 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_47 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_47 <= io.sign_a[47] @[block_division.scala 206:15]
    multiplierReg_47 <= io.man_a[47] @[block_division.scala 207:21]
    node multiplication_47 = mul(multiplierReg_47, io.man_b[47]) @[block_division.scala 208:42]
    node _dotProductRegs_47_T = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_47_T_1 = tail(_dotProductRegs_47_T, 1) @[block_division.scala 209:60]
    node _dotProductRegs_47_T_2 = gt(multiplication_47, _dotProductRegs_47_T_1) @[block_division.scala 209:47]
    node _dotProductRegs_47_T_3 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_47_T_4 = tail(_dotProductRegs_47_T_3, 1) @[block_division.scala 209:78]
    node _dotProductRegs_47_T_5 = mux(_dotProductRegs_47_T_2, _dotProductRegs_47_T_4, multiplication_47) @[block_division.scala 209:31]
    dotProductRegs[47] <= _dotProductRegs_47_T_5 @[block_division.scala 209:25]
    node _signs_47_T = xor(signReg_47, io.sign_b[47]) @[block_division.scala 210:27]
    signs[47] <= _signs_47_T @[block_division.scala 210:16]
    node _two_complement_47_T = eq(signs[47], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_47_T_1 = cat(UInt<1>("h0"), dotProductRegs[47]) @[block_division.scala 213:16]
    node _two_complement_47_T_2 = not(_two_complement_47_T_1) @[block_division.scala 213:10]
    node _two_complement_47_T_3 = add(_two_complement_47_T_2, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_47_T_4 = tail(_two_complement_47_T_3, 1) @[block_division.scala 213:38]
    node _two_complement_47_T_5 = cat(UInt<1>("h0"), dotProductRegs[47]) @[block_division.scala 214:14]
    node _two_complement_47_T_6 = mux(_two_complement_47_T, _two_complement_47_T_4, _two_complement_47_T_5) @[block_division.scala 211:31]
    two_complement[47] <= _two_complement_47_T_6 @[block_division.scala 211:25]
    node _two_complement_buffer_47_T = asSInt(two_complement[47]) @[block_division.scala 216:53]
    two_complement_buffer[47] <= _two_complement_buffer_47_T @[block_division.scala 216:32]
    reg multiplierReg_48 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_48 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_48 <= io.sign_a[48] @[block_division.scala 206:15]
    multiplierReg_48 <= io.man_a[48] @[block_division.scala 207:21]
    node multiplication_48 = mul(multiplierReg_48, io.man_b[48]) @[block_division.scala 208:42]
    node _dotProductRegs_48_T = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_48_T_1 = tail(_dotProductRegs_48_T, 1) @[block_division.scala 209:60]
    node _dotProductRegs_48_T_2 = gt(multiplication_48, _dotProductRegs_48_T_1) @[block_division.scala 209:47]
    node _dotProductRegs_48_T_3 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_48_T_4 = tail(_dotProductRegs_48_T_3, 1) @[block_division.scala 209:78]
    node _dotProductRegs_48_T_5 = mux(_dotProductRegs_48_T_2, _dotProductRegs_48_T_4, multiplication_48) @[block_division.scala 209:31]
    dotProductRegs[48] <= _dotProductRegs_48_T_5 @[block_division.scala 209:25]
    node _signs_48_T = xor(signReg_48, io.sign_b[48]) @[block_division.scala 210:27]
    signs[48] <= _signs_48_T @[block_division.scala 210:16]
    node _two_complement_48_T = eq(signs[48], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_48_T_1 = cat(UInt<1>("h0"), dotProductRegs[48]) @[block_division.scala 213:16]
    node _two_complement_48_T_2 = not(_two_complement_48_T_1) @[block_division.scala 213:10]
    node _two_complement_48_T_3 = add(_two_complement_48_T_2, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_48_T_4 = tail(_two_complement_48_T_3, 1) @[block_division.scala 213:38]
    node _two_complement_48_T_5 = cat(UInt<1>("h0"), dotProductRegs[48]) @[block_division.scala 214:14]
    node _two_complement_48_T_6 = mux(_two_complement_48_T, _two_complement_48_T_4, _two_complement_48_T_5) @[block_division.scala 211:31]
    two_complement[48] <= _two_complement_48_T_6 @[block_division.scala 211:25]
    node _two_complement_buffer_48_T = asSInt(two_complement[48]) @[block_division.scala 216:53]
    two_complement_buffer[48] <= _two_complement_buffer_48_T @[block_division.scala 216:32]
    reg multiplierReg_49 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_49 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_49 <= io.sign_a[49] @[block_division.scala 206:15]
    multiplierReg_49 <= io.man_a[49] @[block_division.scala 207:21]
    node multiplication_49 = mul(multiplierReg_49, io.man_b[49]) @[block_division.scala 208:42]
    node _dotProductRegs_49_T = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_49_T_1 = tail(_dotProductRegs_49_T, 1) @[block_division.scala 209:60]
    node _dotProductRegs_49_T_2 = gt(multiplication_49, _dotProductRegs_49_T_1) @[block_division.scala 209:47]
    node _dotProductRegs_49_T_3 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_49_T_4 = tail(_dotProductRegs_49_T_3, 1) @[block_division.scala 209:78]
    node _dotProductRegs_49_T_5 = mux(_dotProductRegs_49_T_2, _dotProductRegs_49_T_4, multiplication_49) @[block_division.scala 209:31]
    dotProductRegs[49] <= _dotProductRegs_49_T_5 @[block_division.scala 209:25]
    node _signs_49_T = xor(signReg_49, io.sign_b[49]) @[block_division.scala 210:27]
    signs[49] <= _signs_49_T @[block_division.scala 210:16]
    node _two_complement_49_T = eq(signs[49], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_49_T_1 = cat(UInt<1>("h0"), dotProductRegs[49]) @[block_division.scala 213:16]
    node _two_complement_49_T_2 = not(_two_complement_49_T_1) @[block_division.scala 213:10]
    node _two_complement_49_T_3 = add(_two_complement_49_T_2, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_49_T_4 = tail(_two_complement_49_T_3, 1) @[block_division.scala 213:38]
    node _two_complement_49_T_5 = cat(UInt<1>("h0"), dotProductRegs[49]) @[block_division.scala 214:14]
    node _two_complement_49_T_6 = mux(_two_complement_49_T, _two_complement_49_T_4, _two_complement_49_T_5) @[block_division.scala 211:31]
    two_complement[49] <= _two_complement_49_T_6 @[block_division.scala 211:25]
    node _two_complement_buffer_49_T = asSInt(two_complement[49]) @[block_division.scala 216:53]
    two_complement_buffer[49] <= _two_complement_buffer_49_T @[block_division.scala 216:32]
    reg multiplierReg_50 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_50 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_50 <= io.sign_a[50] @[block_division.scala 206:15]
    multiplierReg_50 <= io.man_a[50] @[block_division.scala 207:21]
    node multiplication_50 = mul(multiplierReg_50, io.man_b[50]) @[block_division.scala 208:42]
    node _dotProductRegs_50_T = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_50_T_1 = tail(_dotProductRegs_50_T, 1) @[block_division.scala 209:60]
    node _dotProductRegs_50_T_2 = gt(multiplication_50, _dotProductRegs_50_T_1) @[block_division.scala 209:47]
    node _dotProductRegs_50_T_3 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_50_T_4 = tail(_dotProductRegs_50_T_3, 1) @[block_division.scala 209:78]
    node _dotProductRegs_50_T_5 = mux(_dotProductRegs_50_T_2, _dotProductRegs_50_T_4, multiplication_50) @[block_division.scala 209:31]
    dotProductRegs[50] <= _dotProductRegs_50_T_5 @[block_division.scala 209:25]
    node _signs_50_T = xor(signReg_50, io.sign_b[50]) @[block_division.scala 210:27]
    signs[50] <= _signs_50_T @[block_division.scala 210:16]
    node _two_complement_50_T = eq(signs[50], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_50_T_1 = cat(UInt<1>("h0"), dotProductRegs[50]) @[block_division.scala 213:16]
    node _two_complement_50_T_2 = not(_two_complement_50_T_1) @[block_division.scala 213:10]
    node _two_complement_50_T_3 = add(_two_complement_50_T_2, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_50_T_4 = tail(_two_complement_50_T_3, 1) @[block_division.scala 213:38]
    node _two_complement_50_T_5 = cat(UInt<1>("h0"), dotProductRegs[50]) @[block_division.scala 214:14]
    node _two_complement_50_T_6 = mux(_two_complement_50_T, _two_complement_50_T_4, _two_complement_50_T_5) @[block_division.scala 211:31]
    two_complement[50] <= _two_complement_50_T_6 @[block_division.scala 211:25]
    node _two_complement_buffer_50_T = asSInt(two_complement[50]) @[block_division.scala 216:53]
    two_complement_buffer[50] <= _two_complement_buffer_50_T @[block_division.scala 216:32]
    reg multiplierReg_51 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_51 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_51 <= io.sign_a[51] @[block_division.scala 206:15]
    multiplierReg_51 <= io.man_a[51] @[block_division.scala 207:21]
    node multiplication_51 = mul(multiplierReg_51, io.man_b[51]) @[block_division.scala 208:42]
    node _dotProductRegs_51_T = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_51_T_1 = tail(_dotProductRegs_51_T, 1) @[block_division.scala 209:60]
    node _dotProductRegs_51_T_2 = gt(multiplication_51, _dotProductRegs_51_T_1) @[block_division.scala 209:47]
    node _dotProductRegs_51_T_3 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_51_T_4 = tail(_dotProductRegs_51_T_3, 1) @[block_division.scala 209:78]
    node _dotProductRegs_51_T_5 = mux(_dotProductRegs_51_T_2, _dotProductRegs_51_T_4, multiplication_51) @[block_division.scala 209:31]
    dotProductRegs[51] <= _dotProductRegs_51_T_5 @[block_division.scala 209:25]
    node _signs_51_T = xor(signReg_51, io.sign_b[51]) @[block_division.scala 210:27]
    signs[51] <= _signs_51_T @[block_division.scala 210:16]
    node _two_complement_51_T = eq(signs[51], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_51_T_1 = cat(UInt<1>("h0"), dotProductRegs[51]) @[block_division.scala 213:16]
    node _two_complement_51_T_2 = not(_two_complement_51_T_1) @[block_division.scala 213:10]
    node _two_complement_51_T_3 = add(_two_complement_51_T_2, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_51_T_4 = tail(_two_complement_51_T_3, 1) @[block_division.scala 213:38]
    node _two_complement_51_T_5 = cat(UInt<1>("h0"), dotProductRegs[51]) @[block_division.scala 214:14]
    node _two_complement_51_T_6 = mux(_two_complement_51_T, _two_complement_51_T_4, _two_complement_51_T_5) @[block_division.scala 211:31]
    two_complement[51] <= _two_complement_51_T_6 @[block_division.scala 211:25]
    node _two_complement_buffer_51_T = asSInt(two_complement[51]) @[block_division.scala 216:53]
    two_complement_buffer[51] <= _two_complement_buffer_51_T @[block_division.scala 216:32]
    reg multiplierReg_52 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_52 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_52 <= io.sign_a[52] @[block_division.scala 206:15]
    multiplierReg_52 <= io.man_a[52] @[block_division.scala 207:21]
    node multiplication_52 = mul(multiplierReg_52, io.man_b[52]) @[block_division.scala 208:42]
    node _dotProductRegs_52_T = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_52_T_1 = tail(_dotProductRegs_52_T, 1) @[block_division.scala 209:60]
    node _dotProductRegs_52_T_2 = gt(multiplication_52, _dotProductRegs_52_T_1) @[block_division.scala 209:47]
    node _dotProductRegs_52_T_3 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_52_T_4 = tail(_dotProductRegs_52_T_3, 1) @[block_division.scala 209:78]
    node _dotProductRegs_52_T_5 = mux(_dotProductRegs_52_T_2, _dotProductRegs_52_T_4, multiplication_52) @[block_division.scala 209:31]
    dotProductRegs[52] <= _dotProductRegs_52_T_5 @[block_division.scala 209:25]
    node _signs_52_T = xor(signReg_52, io.sign_b[52]) @[block_division.scala 210:27]
    signs[52] <= _signs_52_T @[block_division.scala 210:16]
    node _two_complement_52_T = eq(signs[52], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_52_T_1 = cat(UInt<1>("h0"), dotProductRegs[52]) @[block_division.scala 213:16]
    node _two_complement_52_T_2 = not(_two_complement_52_T_1) @[block_division.scala 213:10]
    node _two_complement_52_T_3 = add(_two_complement_52_T_2, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_52_T_4 = tail(_two_complement_52_T_3, 1) @[block_division.scala 213:38]
    node _two_complement_52_T_5 = cat(UInt<1>("h0"), dotProductRegs[52]) @[block_division.scala 214:14]
    node _two_complement_52_T_6 = mux(_two_complement_52_T, _two_complement_52_T_4, _two_complement_52_T_5) @[block_division.scala 211:31]
    two_complement[52] <= _two_complement_52_T_6 @[block_division.scala 211:25]
    node _two_complement_buffer_52_T = asSInt(two_complement[52]) @[block_division.scala 216:53]
    two_complement_buffer[52] <= _two_complement_buffer_52_T @[block_division.scala 216:32]
    reg multiplierReg_53 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_53 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_53 <= io.sign_a[53] @[block_division.scala 206:15]
    multiplierReg_53 <= io.man_a[53] @[block_division.scala 207:21]
    node multiplication_53 = mul(multiplierReg_53, io.man_b[53]) @[block_division.scala 208:42]
    node _dotProductRegs_53_T = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_53_T_1 = tail(_dotProductRegs_53_T, 1) @[block_division.scala 209:60]
    node _dotProductRegs_53_T_2 = gt(multiplication_53, _dotProductRegs_53_T_1) @[block_division.scala 209:47]
    node _dotProductRegs_53_T_3 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_53_T_4 = tail(_dotProductRegs_53_T_3, 1) @[block_division.scala 209:78]
    node _dotProductRegs_53_T_5 = mux(_dotProductRegs_53_T_2, _dotProductRegs_53_T_4, multiplication_53) @[block_division.scala 209:31]
    dotProductRegs[53] <= _dotProductRegs_53_T_5 @[block_division.scala 209:25]
    node _signs_53_T = xor(signReg_53, io.sign_b[53]) @[block_division.scala 210:27]
    signs[53] <= _signs_53_T @[block_division.scala 210:16]
    node _two_complement_53_T = eq(signs[53], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_53_T_1 = cat(UInt<1>("h0"), dotProductRegs[53]) @[block_division.scala 213:16]
    node _two_complement_53_T_2 = not(_two_complement_53_T_1) @[block_division.scala 213:10]
    node _two_complement_53_T_3 = add(_two_complement_53_T_2, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_53_T_4 = tail(_two_complement_53_T_3, 1) @[block_division.scala 213:38]
    node _two_complement_53_T_5 = cat(UInt<1>("h0"), dotProductRegs[53]) @[block_division.scala 214:14]
    node _two_complement_53_T_6 = mux(_two_complement_53_T, _two_complement_53_T_4, _two_complement_53_T_5) @[block_division.scala 211:31]
    two_complement[53] <= _two_complement_53_T_6 @[block_division.scala 211:25]
    node _two_complement_buffer_53_T = asSInt(two_complement[53]) @[block_division.scala 216:53]
    two_complement_buffer[53] <= _two_complement_buffer_53_T @[block_division.scala 216:32]
    reg multiplierReg_54 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_54 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_54 <= io.sign_a[54] @[block_division.scala 206:15]
    multiplierReg_54 <= io.man_a[54] @[block_division.scala 207:21]
    node multiplication_54 = mul(multiplierReg_54, io.man_b[54]) @[block_division.scala 208:42]
    node _dotProductRegs_54_T = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_54_T_1 = tail(_dotProductRegs_54_T, 1) @[block_division.scala 209:60]
    node _dotProductRegs_54_T_2 = gt(multiplication_54, _dotProductRegs_54_T_1) @[block_division.scala 209:47]
    node _dotProductRegs_54_T_3 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_54_T_4 = tail(_dotProductRegs_54_T_3, 1) @[block_division.scala 209:78]
    node _dotProductRegs_54_T_5 = mux(_dotProductRegs_54_T_2, _dotProductRegs_54_T_4, multiplication_54) @[block_division.scala 209:31]
    dotProductRegs[54] <= _dotProductRegs_54_T_5 @[block_division.scala 209:25]
    node _signs_54_T = xor(signReg_54, io.sign_b[54]) @[block_division.scala 210:27]
    signs[54] <= _signs_54_T @[block_division.scala 210:16]
    node _two_complement_54_T = eq(signs[54], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_54_T_1 = cat(UInt<1>("h0"), dotProductRegs[54]) @[block_division.scala 213:16]
    node _two_complement_54_T_2 = not(_two_complement_54_T_1) @[block_division.scala 213:10]
    node _two_complement_54_T_3 = add(_two_complement_54_T_2, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_54_T_4 = tail(_two_complement_54_T_3, 1) @[block_division.scala 213:38]
    node _two_complement_54_T_5 = cat(UInt<1>("h0"), dotProductRegs[54]) @[block_division.scala 214:14]
    node _two_complement_54_T_6 = mux(_two_complement_54_T, _two_complement_54_T_4, _two_complement_54_T_5) @[block_division.scala 211:31]
    two_complement[54] <= _two_complement_54_T_6 @[block_division.scala 211:25]
    node _two_complement_buffer_54_T = asSInt(two_complement[54]) @[block_division.scala 216:53]
    two_complement_buffer[54] <= _two_complement_buffer_54_T @[block_division.scala 216:32]
    reg multiplierReg_55 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_55 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_55 <= io.sign_a[55] @[block_division.scala 206:15]
    multiplierReg_55 <= io.man_a[55] @[block_division.scala 207:21]
    node multiplication_55 = mul(multiplierReg_55, io.man_b[55]) @[block_division.scala 208:42]
    node _dotProductRegs_55_T = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_55_T_1 = tail(_dotProductRegs_55_T, 1) @[block_division.scala 209:60]
    node _dotProductRegs_55_T_2 = gt(multiplication_55, _dotProductRegs_55_T_1) @[block_division.scala 209:47]
    node _dotProductRegs_55_T_3 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_55_T_4 = tail(_dotProductRegs_55_T_3, 1) @[block_division.scala 209:78]
    node _dotProductRegs_55_T_5 = mux(_dotProductRegs_55_T_2, _dotProductRegs_55_T_4, multiplication_55) @[block_division.scala 209:31]
    dotProductRegs[55] <= _dotProductRegs_55_T_5 @[block_division.scala 209:25]
    node _signs_55_T = xor(signReg_55, io.sign_b[55]) @[block_division.scala 210:27]
    signs[55] <= _signs_55_T @[block_division.scala 210:16]
    node _two_complement_55_T = eq(signs[55], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_55_T_1 = cat(UInt<1>("h0"), dotProductRegs[55]) @[block_division.scala 213:16]
    node _two_complement_55_T_2 = not(_two_complement_55_T_1) @[block_division.scala 213:10]
    node _two_complement_55_T_3 = add(_two_complement_55_T_2, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_55_T_4 = tail(_two_complement_55_T_3, 1) @[block_division.scala 213:38]
    node _two_complement_55_T_5 = cat(UInt<1>("h0"), dotProductRegs[55]) @[block_division.scala 214:14]
    node _two_complement_55_T_6 = mux(_two_complement_55_T, _two_complement_55_T_4, _two_complement_55_T_5) @[block_division.scala 211:31]
    two_complement[55] <= _two_complement_55_T_6 @[block_division.scala 211:25]
    node _two_complement_buffer_55_T = asSInt(two_complement[55]) @[block_division.scala 216:53]
    two_complement_buffer[55] <= _two_complement_buffer_55_T @[block_division.scala 216:32]
    reg multiplierReg_56 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_56 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_56 <= io.sign_a[56] @[block_division.scala 206:15]
    multiplierReg_56 <= io.man_a[56] @[block_division.scala 207:21]
    node multiplication_56 = mul(multiplierReg_56, io.man_b[56]) @[block_division.scala 208:42]
    node _dotProductRegs_56_T = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_56_T_1 = tail(_dotProductRegs_56_T, 1) @[block_division.scala 209:60]
    node _dotProductRegs_56_T_2 = gt(multiplication_56, _dotProductRegs_56_T_1) @[block_division.scala 209:47]
    node _dotProductRegs_56_T_3 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_56_T_4 = tail(_dotProductRegs_56_T_3, 1) @[block_division.scala 209:78]
    node _dotProductRegs_56_T_5 = mux(_dotProductRegs_56_T_2, _dotProductRegs_56_T_4, multiplication_56) @[block_division.scala 209:31]
    dotProductRegs[56] <= _dotProductRegs_56_T_5 @[block_division.scala 209:25]
    node _signs_56_T = xor(signReg_56, io.sign_b[56]) @[block_division.scala 210:27]
    signs[56] <= _signs_56_T @[block_division.scala 210:16]
    node _two_complement_56_T = eq(signs[56], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_56_T_1 = cat(UInt<1>("h0"), dotProductRegs[56]) @[block_division.scala 213:16]
    node _two_complement_56_T_2 = not(_two_complement_56_T_1) @[block_division.scala 213:10]
    node _two_complement_56_T_3 = add(_two_complement_56_T_2, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_56_T_4 = tail(_two_complement_56_T_3, 1) @[block_division.scala 213:38]
    node _two_complement_56_T_5 = cat(UInt<1>("h0"), dotProductRegs[56]) @[block_division.scala 214:14]
    node _two_complement_56_T_6 = mux(_two_complement_56_T, _two_complement_56_T_4, _two_complement_56_T_5) @[block_division.scala 211:31]
    two_complement[56] <= _two_complement_56_T_6 @[block_division.scala 211:25]
    node _two_complement_buffer_56_T = asSInt(two_complement[56]) @[block_division.scala 216:53]
    two_complement_buffer[56] <= _two_complement_buffer_56_T @[block_division.scala 216:32]
    reg multiplierReg_57 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_57 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_57 <= io.sign_a[57] @[block_division.scala 206:15]
    multiplierReg_57 <= io.man_a[57] @[block_division.scala 207:21]
    node multiplication_57 = mul(multiplierReg_57, io.man_b[57]) @[block_division.scala 208:42]
    node _dotProductRegs_57_T = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_57_T_1 = tail(_dotProductRegs_57_T, 1) @[block_division.scala 209:60]
    node _dotProductRegs_57_T_2 = gt(multiplication_57, _dotProductRegs_57_T_1) @[block_division.scala 209:47]
    node _dotProductRegs_57_T_3 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_57_T_4 = tail(_dotProductRegs_57_T_3, 1) @[block_division.scala 209:78]
    node _dotProductRegs_57_T_5 = mux(_dotProductRegs_57_T_2, _dotProductRegs_57_T_4, multiplication_57) @[block_division.scala 209:31]
    dotProductRegs[57] <= _dotProductRegs_57_T_5 @[block_division.scala 209:25]
    node _signs_57_T = xor(signReg_57, io.sign_b[57]) @[block_division.scala 210:27]
    signs[57] <= _signs_57_T @[block_division.scala 210:16]
    node _two_complement_57_T = eq(signs[57], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_57_T_1 = cat(UInt<1>("h0"), dotProductRegs[57]) @[block_division.scala 213:16]
    node _two_complement_57_T_2 = not(_two_complement_57_T_1) @[block_division.scala 213:10]
    node _two_complement_57_T_3 = add(_two_complement_57_T_2, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_57_T_4 = tail(_two_complement_57_T_3, 1) @[block_division.scala 213:38]
    node _two_complement_57_T_5 = cat(UInt<1>("h0"), dotProductRegs[57]) @[block_division.scala 214:14]
    node _two_complement_57_T_6 = mux(_two_complement_57_T, _two_complement_57_T_4, _two_complement_57_T_5) @[block_division.scala 211:31]
    two_complement[57] <= _two_complement_57_T_6 @[block_division.scala 211:25]
    node _two_complement_buffer_57_T = asSInt(two_complement[57]) @[block_division.scala 216:53]
    two_complement_buffer[57] <= _two_complement_buffer_57_T @[block_division.scala 216:32]
    reg multiplierReg_58 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_58 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_58 <= io.sign_a[58] @[block_division.scala 206:15]
    multiplierReg_58 <= io.man_a[58] @[block_division.scala 207:21]
    node multiplication_58 = mul(multiplierReg_58, io.man_b[58]) @[block_division.scala 208:42]
    node _dotProductRegs_58_T = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_58_T_1 = tail(_dotProductRegs_58_T, 1) @[block_division.scala 209:60]
    node _dotProductRegs_58_T_2 = gt(multiplication_58, _dotProductRegs_58_T_1) @[block_division.scala 209:47]
    node _dotProductRegs_58_T_3 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_58_T_4 = tail(_dotProductRegs_58_T_3, 1) @[block_division.scala 209:78]
    node _dotProductRegs_58_T_5 = mux(_dotProductRegs_58_T_2, _dotProductRegs_58_T_4, multiplication_58) @[block_division.scala 209:31]
    dotProductRegs[58] <= _dotProductRegs_58_T_5 @[block_division.scala 209:25]
    node _signs_58_T = xor(signReg_58, io.sign_b[58]) @[block_division.scala 210:27]
    signs[58] <= _signs_58_T @[block_division.scala 210:16]
    node _two_complement_58_T = eq(signs[58], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_58_T_1 = cat(UInt<1>("h0"), dotProductRegs[58]) @[block_division.scala 213:16]
    node _two_complement_58_T_2 = not(_two_complement_58_T_1) @[block_division.scala 213:10]
    node _two_complement_58_T_3 = add(_two_complement_58_T_2, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_58_T_4 = tail(_two_complement_58_T_3, 1) @[block_division.scala 213:38]
    node _two_complement_58_T_5 = cat(UInt<1>("h0"), dotProductRegs[58]) @[block_division.scala 214:14]
    node _two_complement_58_T_6 = mux(_two_complement_58_T, _two_complement_58_T_4, _two_complement_58_T_5) @[block_division.scala 211:31]
    two_complement[58] <= _two_complement_58_T_6 @[block_division.scala 211:25]
    node _two_complement_buffer_58_T = asSInt(two_complement[58]) @[block_division.scala 216:53]
    two_complement_buffer[58] <= _two_complement_buffer_58_T @[block_division.scala 216:32]
    reg multiplierReg_59 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_59 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_59 <= io.sign_a[59] @[block_division.scala 206:15]
    multiplierReg_59 <= io.man_a[59] @[block_division.scala 207:21]
    node multiplication_59 = mul(multiplierReg_59, io.man_b[59]) @[block_division.scala 208:42]
    node _dotProductRegs_59_T = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_59_T_1 = tail(_dotProductRegs_59_T, 1) @[block_division.scala 209:60]
    node _dotProductRegs_59_T_2 = gt(multiplication_59, _dotProductRegs_59_T_1) @[block_division.scala 209:47]
    node _dotProductRegs_59_T_3 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_59_T_4 = tail(_dotProductRegs_59_T_3, 1) @[block_division.scala 209:78]
    node _dotProductRegs_59_T_5 = mux(_dotProductRegs_59_T_2, _dotProductRegs_59_T_4, multiplication_59) @[block_division.scala 209:31]
    dotProductRegs[59] <= _dotProductRegs_59_T_5 @[block_division.scala 209:25]
    node _signs_59_T = xor(signReg_59, io.sign_b[59]) @[block_division.scala 210:27]
    signs[59] <= _signs_59_T @[block_division.scala 210:16]
    node _two_complement_59_T = eq(signs[59], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_59_T_1 = cat(UInt<1>("h0"), dotProductRegs[59]) @[block_division.scala 213:16]
    node _two_complement_59_T_2 = not(_two_complement_59_T_1) @[block_division.scala 213:10]
    node _two_complement_59_T_3 = add(_two_complement_59_T_2, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_59_T_4 = tail(_two_complement_59_T_3, 1) @[block_division.scala 213:38]
    node _two_complement_59_T_5 = cat(UInt<1>("h0"), dotProductRegs[59]) @[block_division.scala 214:14]
    node _two_complement_59_T_6 = mux(_two_complement_59_T, _two_complement_59_T_4, _two_complement_59_T_5) @[block_division.scala 211:31]
    two_complement[59] <= _two_complement_59_T_6 @[block_division.scala 211:25]
    node _two_complement_buffer_59_T = asSInt(two_complement[59]) @[block_division.scala 216:53]
    two_complement_buffer[59] <= _two_complement_buffer_59_T @[block_division.scala 216:32]
    reg multiplierReg_60 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_60 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_60 <= io.sign_a[60] @[block_division.scala 206:15]
    multiplierReg_60 <= io.man_a[60] @[block_division.scala 207:21]
    node multiplication_60 = mul(multiplierReg_60, io.man_b[60]) @[block_division.scala 208:42]
    node _dotProductRegs_60_T = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_60_T_1 = tail(_dotProductRegs_60_T, 1) @[block_division.scala 209:60]
    node _dotProductRegs_60_T_2 = gt(multiplication_60, _dotProductRegs_60_T_1) @[block_division.scala 209:47]
    node _dotProductRegs_60_T_3 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_60_T_4 = tail(_dotProductRegs_60_T_3, 1) @[block_division.scala 209:78]
    node _dotProductRegs_60_T_5 = mux(_dotProductRegs_60_T_2, _dotProductRegs_60_T_4, multiplication_60) @[block_division.scala 209:31]
    dotProductRegs[60] <= _dotProductRegs_60_T_5 @[block_division.scala 209:25]
    node _signs_60_T = xor(signReg_60, io.sign_b[60]) @[block_division.scala 210:27]
    signs[60] <= _signs_60_T @[block_division.scala 210:16]
    node _two_complement_60_T = eq(signs[60], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_60_T_1 = cat(UInt<1>("h0"), dotProductRegs[60]) @[block_division.scala 213:16]
    node _two_complement_60_T_2 = not(_two_complement_60_T_1) @[block_division.scala 213:10]
    node _two_complement_60_T_3 = add(_two_complement_60_T_2, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_60_T_4 = tail(_two_complement_60_T_3, 1) @[block_division.scala 213:38]
    node _two_complement_60_T_5 = cat(UInt<1>("h0"), dotProductRegs[60]) @[block_division.scala 214:14]
    node _two_complement_60_T_6 = mux(_two_complement_60_T, _two_complement_60_T_4, _two_complement_60_T_5) @[block_division.scala 211:31]
    two_complement[60] <= _two_complement_60_T_6 @[block_division.scala 211:25]
    node _two_complement_buffer_60_T = asSInt(two_complement[60]) @[block_division.scala 216:53]
    two_complement_buffer[60] <= _two_complement_buffer_60_T @[block_division.scala 216:32]
    reg multiplierReg_61 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_61 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_61 <= io.sign_a[61] @[block_division.scala 206:15]
    multiplierReg_61 <= io.man_a[61] @[block_division.scala 207:21]
    node multiplication_61 = mul(multiplierReg_61, io.man_b[61]) @[block_division.scala 208:42]
    node _dotProductRegs_61_T = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_61_T_1 = tail(_dotProductRegs_61_T, 1) @[block_division.scala 209:60]
    node _dotProductRegs_61_T_2 = gt(multiplication_61, _dotProductRegs_61_T_1) @[block_division.scala 209:47]
    node _dotProductRegs_61_T_3 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_61_T_4 = tail(_dotProductRegs_61_T_3, 1) @[block_division.scala 209:78]
    node _dotProductRegs_61_T_5 = mux(_dotProductRegs_61_T_2, _dotProductRegs_61_T_4, multiplication_61) @[block_division.scala 209:31]
    dotProductRegs[61] <= _dotProductRegs_61_T_5 @[block_division.scala 209:25]
    node _signs_61_T = xor(signReg_61, io.sign_b[61]) @[block_division.scala 210:27]
    signs[61] <= _signs_61_T @[block_division.scala 210:16]
    node _two_complement_61_T = eq(signs[61], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_61_T_1 = cat(UInt<1>("h0"), dotProductRegs[61]) @[block_division.scala 213:16]
    node _two_complement_61_T_2 = not(_two_complement_61_T_1) @[block_division.scala 213:10]
    node _two_complement_61_T_3 = add(_two_complement_61_T_2, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_61_T_4 = tail(_two_complement_61_T_3, 1) @[block_division.scala 213:38]
    node _two_complement_61_T_5 = cat(UInt<1>("h0"), dotProductRegs[61]) @[block_division.scala 214:14]
    node _two_complement_61_T_6 = mux(_two_complement_61_T, _two_complement_61_T_4, _two_complement_61_T_5) @[block_division.scala 211:31]
    two_complement[61] <= _two_complement_61_T_6 @[block_division.scala 211:25]
    node _two_complement_buffer_61_T = asSInt(two_complement[61]) @[block_division.scala 216:53]
    two_complement_buffer[61] <= _two_complement_buffer_61_T @[block_division.scala 216:32]
    reg multiplierReg_62 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_62 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_62 <= io.sign_a[62] @[block_division.scala 206:15]
    multiplierReg_62 <= io.man_a[62] @[block_division.scala 207:21]
    node multiplication_62 = mul(multiplierReg_62, io.man_b[62]) @[block_division.scala 208:42]
    node _dotProductRegs_62_T = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_62_T_1 = tail(_dotProductRegs_62_T, 1) @[block_division.scala 209:60]
    node _dotProductRegs_62_T_2 = gt(multiplication_62, _dotProductRegs_62_T_1) @[block_division.scala 209:47]
    node _dotProductRegs_62_T_3 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_62_T_4 = tail(_dotProductRegs_62_T_3, 1) @[block_division.scala 209:78]
    node _dotProductRegs_62_T_5 = mux(_dotProductRegs_62_T_2, _dotProductRegs_62_T_4, multiplication_62) @[block_division.scala 209:31]
    dotProductRegs[62] <= _dotProductRegs_62_T_5 @[block_division.scala 209:25]
    node _signs_62_T = xor(signReg_62, io.sign_b[62]) @[block_division.scala 210:27]
    signs[62] <= _signs_62_T @[block_division.scala 210:16]
    node _two_complement_62_T = eq(signs[62], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_62_T_1 = cat(UInt<1>("h0"), dotProductRegs[62]) @[block_division.scala 213:16]
    node _two_complement_62_T_2 = not(_two_complement_62_T_1) @[block_division.scala 213:10]
    node _two_complement_62_T_3 = add(_two_complement_62_T_2, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_62_T_4 = tail(_two_complement_62_T_3, 1) @[block_division.scala 213:38]
    node _two_complement_62_T_5 = cat(UInt<1>("h0"), dotProductRegs[62]) @[block_division.scala 214:14]
    node _two_complement_62_T_6 = mux(_two_complement_62_T, _two_complement_62_T_4, _two_complement_62_T_5) @[block_division.scala 211:31]
    two_complement[62] <= _two_complement_62_T_6 @[block_division.scala 211:25]
    node _two_complement_buffer_62_T = asSInt(two_complement[62]) @[block_division.scala 216:53]
    two_complement_buffer[62] <= _two_complement_buffer_62_T @[block_division.scala 216:32]
    reg multiplierReg_63 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_63 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_63 <= io.sign_a[63] @[block_division.scala 206:15]
    multiplierReg_63 <= io.man_a[63] @[block_division.scala 207:21]
    node multiplication_63 = mul(multiplierReg_63, io.man_b[63]) @[block_division.scala 208:42]
    node _dotProductRegs_63_T = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_63_T_1 = tail(_dotProductRegs_63_T, 1) @[block_division.scala 209:60]
    node _dotProductRegs_63_T_2 = gt(multiplication_63, _dotProductRegs_63_T_1) @[block_division.scala 209:47]
    node _dotProductRegs_63_T_3 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_63_T_4 = tail(_dotProductRegs_63_T_3, 1) @[block_division.scala 209:78]
    node _dotProductRegs_63_T_5 = mux(_dotProductRegs_63_T_2, _dotProductRegs_63_T_4, multiplication_63) @[block_division.scala 209:31]
    dotProductRegs[63] <= _dotProductRegs_63_T_5 @[block_division.scala 209:25]
    node _signs_63_T = xor(signReg_63, io.sign_b[63]) @[block_division.scala 210:27]
    signs[63] <= _signs_63_T @[block_division.scala 210:16]
    node _two_complement_63_T = eq(signs[63], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_63_T_1 = cat(UInt<1>("h0"), dotProductRegs[63]) @[block_division.scala 213:16]
    node _two_complement_63_T_2 = not(_two_complement_63_T_1) @[block_division.scala 213:10]
    node _two_complement_63_T_3 = add(_two_complement_63_T_2, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_63_T_4 = tail(_two_complement_63_T_3, 1) @[block_division.scala 213:38]
    node _two_complement_63_T_5 = cat(UInt<1>("h0"), dotProductRegs[63]) @[block_division.scala 214:14]
    node _two_complement_63_T_6 = mux(_two_complement_63_T, _two_complement_63_T_4, _two_complement_63_T_5) @[block_division.scala 211:31]
    two_complement[63] <= _two_complement_63_T_6 @[block_division.scala 211:25]
    node _two_complement_buffer_63_T = asSInt(two_complement[63]) @[block_division.scala 216:53]
    two_complement_buffer[63] <= _two_complement_buffer_63_T @[block_division.scala 216:32]
    node _sum_T = add(two_complement_buffer[0], two_complement_buffer[1]) @[block_division.scala 218:46]
    node _sum_T_1 = add(_sum_T, two_complement_buffer[2]) @[block_division.scala 218:46]
    node _sum_T_2 = add(_sum_T_1, two_complement_buffer[3]) @[block_division.scala 218:46]
    node _sum_T_3 = add(_sum_T_2, two_complement_buffer[4]) @[block_division.scala 218:46]
    node _sum_T_4 = add(_sum_T_3, two_complement_buffer[5]) @[block_division.scala 218:46]
    node _sum_T_5 = add(_sum_T_4, two_complement_buffer[6]) @[block_division.scala 218:46]
    node _sum_T_6 = add(_sum_T_5, two_complement_buffer[7]) @[block_division.scala 218:46]
    node _sum_T_7 = add(_sum_T_6, two_complement_buffer[8]) @[block_division.scala 218:46]
    node _sum_T_8 = add(_sum_T_7, two_complement_buffer[9]) @[block_division.scala 218:46]
    node _sum_T_9 = add(_sum_T_8, two_complement_buffer[10]) @[block_division.scala 218:46]
    node _sum_T_10 = add(_sum_T_9, two_complement_buffer[11]) @[block_division.scala 218:46]
    node _sum_T_11 = add(_sum_T_10, two_complement_buffer[12]) @[block_division.scala 218:46]
    node _sum_T_12 = add(_sum_T_11, two_complement_buffer[13]) @[block_division.scala 218:46]
    node _sum_T_13 = add(_sum_T_12, two_complement_buffer[14]) @[block_division.scala 218:46]
    node _sum_T_14 = add(_sum_T_13, two_complement_buffer[15]) @[block_division.scala 218:46]
    node _sum_T_15 = add(_sum_T_14, two_complement_buffer[16]) @[block_division.scala 218:46]
    node _sum_T_16 = add(_sum_T_15, two_complement_buffer[17]) @[block_division.scala 218:46]
    node _sum_T_17 = add(_sum_T_16, two_complement_buffer[18]) @[block_division.scala 218:46]
    node _sum_T_18 = add(_sum_T_17, two_complement_buffer[19]) @[block_division.scala 218:46]
    node _sum_T_19 = add(_sum_T_18, two_complement_buffer[20]) @[block_division.scala 218:46]
    node _sum_T_20 = add(_sum_T_19, two_complement_buffer[21]) @[block_division.scala 218:46]
    node _sum_T_21 = add(_sum_T_20, two_complement_buffer[22]) @[block_division.scala 218:46]
    node _sum_T_22 = add(_sum_T_21, two_complement_buffer[23]) @[block_division.scala 218:46]
    node _sum_T_23 = add(_sum_T_22, two_complement_buffer[24]) @[block_division.scala 218:46]
    node _sum_T_24 = add(_sum_T_23, two_complement_buffer[25]) @[block_division.scala 218:46]
    node _sum_T_25 = add(_sum_T_24, two_complement_buffer[26]) @[block_division.scala 218:46]
    node _sum_T_26 = add(_sum_T_25, two_complement_buffer[27]) @[block_division.scala 218:46]
    node _sum_T_27 = add(_sum_T_26, two_complement_buffer[28]) @[block_division.scala 218:46]
    node _sum_T_28 = add(_sum_T_27, two_complement_buffer[29]) @[block_division.scala 218:46]
    node _sum_T_29 = add(_sum_T_28, two_complement_buffer[30]) @[block_division.scala 218:46]
    node _sum_T_30 = add(_sum_T_29, two_complement_buffer[31]) @[block_division.scala 218:46]
    node _sum_T_31 = add(_sum_T_30, two_complement_buffer[32]) @[block_division.scala 218:46]
    node _sum_T_32 = add(_sum_T_31, two_complement_buffer[33]) @[block_division.scala 218:46]
    node _sum_T_33 = add(_sum_T_32, two_complement_buffer[34]) @[block_division.scala 218:46]
    node _sum_T_34 = add(_sum_T_33, two_complement_buffer[35]) @[block_division.scala 218:46]
    node _sum_T_35 = add(_sum_T_34, two_complement_buffer[36]) @[block_division.scala 218:46]
    node _sum_T_36 = add(_sum_T_35, two_complement_buffer[37]) @[block_division.scala 218:46]
    node _sum_T_37 = add(_sum_T_36, two_complement_buffer[38]) @[block_division.scala 218:46]
    node _sum_T_38 = add(_sum_T_37, two_complement_buffer[39]) @[block_division.scala 218:46]
    node _sum_T_39 = add(_sum_T_38, two_complement_buffer[40]) @[block_division.scala 218:46]
    node _sum_T_40 = add(_sum_T_39, two_complement_buffer[41]) @[block_division.scala 218:46]
    node _sum_T_41 = add(_sum_T_40, two_complement_buffer[42]) @[block_division.scala 218:46]
    node _sum_T_42 = add(_sum_T_41, two_complement_buffer[43]) @[block_division.scala 218:46]
    node _sum_T_43 = add(_sum_T_42, two_complement_buffer[44]) @[block_division.scala 218:46]
    node _sum_T_44 = add(_sum_T_43, two_complement_buffer[45]) @[block_division.scala 218:46]
    node _sum_T_45 = add(_sum_T_44, two_complement_buffer[46]) @[block_division.scala 218:46]
    node _sum_T_46 = add(_sum_T_45, two_complement_buffer[47]) @[block_division.scala 218:46]
    node _sum_T_47 = add(_sum_T_46, two_complement_buffer[48]) @[block_division.scala 218:46]
    node _sum_T_48 = add(_sum_T_47, two_complement_buffer[49]) @[block_division.scala 218:46]
    node _sum_T_49 = add(_sum_T_48, two_complement_buffer[50]) @[block_division.scala 218:46]
    node _sum_T_50 = add(_sum_T_49, two_complement_buffer[51]) @[block_division.scala 218:46]
    node _sum_T_51 = add(_sum_T_50, two_complement_buffer[52]) @[block_division.scala 218:46]
    node _sum_T_52 = add(_sum_T_51, two_complement_buffer[53]) @[block_division.scala 218:46]
    node _sum_T_53 = add(_sum_T_52, two_complement_buffer[54]) @[block_division.scala 218:46]
    node _sum_T_54 = add(_sum_T_53, two_complement_buffer[55]) @[block_division.scala 218:46]
    node _sum_T_55 = add(_sum_T_54, two_complement_buffer[56]) @[block_division.scala 218:46]
    node _sum_T_56 = add(_sum_T_55, two_complement_buffer[57]) @[block_division.scala 218:46]
    node _sum_T_57 = add(_sum_T_56, two_complement_buffer[58]) @[block_division.scala 218:46]
    node _sum_T_58 = add(_sum_T_57, two_complement_buffer[59]) @[block_division.scala 218:46]
    node _sum_T_59 = add(_sum_T_58, two_complement_buffer[60]) @[block_division.scala 218:46]
    node _sum_T_60 = add(_sum_T_59, two_complement_buffer[61]) @[block_division.scala 218:46]
    node _sum_T_61 = add(_sum_T_60, two_complement_buffer[62]) @[block_division.scala 218:46]
    node sum = add(_sum_T_61, two_complement_buffer[63]) @[block_division.scala 218:46]
    node _acc_0_T = bits(sum, 68, 68) @[block_division.scala 219:22]
    node _acc_0_T_1 = eq(_acc_0_T, UInt<1>("h1")) @[block_division.scala 219:44]
    node _acc_0_T_2 = bits(sum, 67, 0) @[block_division.scala 219:61]
    node _acc_0_T_3 = not(_acc_0_T_2) @[block_division.scala 219:57]
    node _acc_0_T_4 = add(_acc_0_T_3, UInt<1>("h1")) @[block_division.scala 219:86]
    node _acc_0_T_5 = tail(_acc_0_T_4, 1) @[block_division.scala 219:86]
    node _acc_0_T_6 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 219:106]
    node _acc_0_T_7 = tail(_acc_0_T_6, 1) @[block_division.scala 219:106]
    node _acc_0_T_8 = gt(_acc_0_T_5, _acc_0_T_7) @[block_division.scala 219:93]
    node _acc_0_T_9 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 219:127]
    node _acc_0_T_10 = tail(_acc_0_T_9, 1) @[block_division.scala 219:127]
    node _acc_0_T_11 = not(_acc_0_T_10) @[block_division.scala 219:114]
    node _acc_0_T_12 = add(_acc_0_T_11, UInt<1>("h1")) @[block_division.scala 219:135]
    node _acc_0_T_13 = tail(_acc_0_T_12, 1) @[block_division.scala 219:135]
    node _acc_0_T_14 = bits(sum, 68, 0) @[block_division.scala 219:145]
    node _acc_0_T_15 = mux(_acc_0_T_8, _acc_0_T_13, _acc_0_T_14) @[block_division.scala 219:55]
    node _acc_0_T_16 = bits(sum, 67, 0) @[block_division.scala 220:10]
    node _acc_0_T_17 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 220:49]
    node _acc_0_T_18 = tail(_acc_0_T_17, 1) @[block_division.scala 220:49]
    node _acc_0_T_19 = gt(_acc_0_T_16, _acc_0_T_18) @[block_division.scala 220:36]
    node _acc_0_T_20 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 220:67]
    node _acc_0_T_21 = tail(_acc_0_T_20, 1) @[block_division.scala 220:67]
    node _acc_0_T_22 = bits(sum, 68, 0) @[block_division.scala 220:77]
    node _acc_0_T_23 = mux(_acc_0_T_19, _acc_0_T_21, _acc_0_T_22) @[block_division.scala 220:6]
    node _acc_0_T_24 = mux(_acc_0_T_1, _acc_0_T_15, _acc_0_T_23) @[block_division.scala 219:18]
    acc_0 <= _acc_0_T_24 @[block_division.scala 219:12]
    node _exp_output_1_T = add(io.exp_a[1], io.exp_b[1]) @[block_division.scala 198:34]
    exp_output_1 <= _exp_output_1_T @[block_division.scala 198:19]
    reg dotProductRegs_1 : UInt<5>[64], clock with :
      reset => (UInt<1>("h0"), dotProductRegs_1) @[block_division.scala 199:29]
    reg signs_1 : UInt<1>[64], clock with :
      reset => (UInt<1>("h0"), signs_1) @[block_division.scala 200:20]
    reg two_complement_1 : UInt<6>[64], clock with :
      reset => (UInt<1>("h0"), two_complement_1) @[block_division.scala 201:29]
    reg two_complement_buffer_1 : SInt<6>[64], clock with :
      reset => (UInt<1>("h0"), two_complement_buffer_1) @[block_division.scala 202:36]
    reg multiplierReg_64 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_64 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_64 <= io.sign_a[64] @[block_division.scala 206:15]
    multiplierReg_64 <= io.man_a[64] @[block_division.scala 207:21]
    node multiplication_64 = mul(multiplierReg_64, io.man_b[64]) @[block_division.scala 208:42]
    node _dotProductRegs_0_T_6 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_0_T_7 = tail(_dotProductRegs_0_T_6, 1) @[block_division.scala 209:60]
    node _dotProductRegs_0_T_8 = gt(multiplication_64, _dotProductRegs_0_T_7) @[block_division.scala 209:47]
    node _dotProductRegs_0_T_9 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_0_T_10 = tail(_dotProductRegs_0_T_9, 1) @[block_division.scala 209:78]
    node _dotProductRegs_0_T_11 = mux(_dotProductRegs_0_T_8, _dotProductRegs_0_T_10, multiplication_64) @[block_division.scala 209:31]
    dotProductRegs_1[0] <= _dotProductRegs_0_T_11 @[block_division.scala 209:25]
    node _signs_0_T_1 = xor(signReg_64, io.sign_b[64]) @[block_division.scala 210:27]
    signs_1[0] <= _signs_0_T_1 @[block_division.scala 210:16]
    node _two_complement_0_T_7 = eq(signs_1[0], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_0_T_8 = cat(UInt<1>("h0"), dotProductRegs_1[0]) @[block_division.scala 213:16]
    node _two_complement_0_T_9 = not(_two_complement_0_T_8) @[block_division.scala 213:10]
    node _two_complement_0_T_10 = add(_two_complement_0_T_9, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_0_T_11 = tail(_two_complement_0_T_10, 1) @[block_division.scala 213:38]
    node _two_complement_0_T_12 = cat(UInt<1>("h0"), dotProductRegs_1[0]) @[block_division.scala 214:14]
    node _two_complement_0_T_13 = mux(_two_complement_0_T_7, _two_complement_0_T_11, _two_complement_0_T_12) @[block_division.scala 211:31]
    two_complement_1[0] <= _two_complement_0_T_13 @[block_division.scala 211:25]
    node _two_complement_buffer_0_T_1 = asSInt(two_complement_1[0]) @[block_division.scala 216:53]
    two_complement_buffer_1[0] <= _two_complement_buffer_0_T_1 @[block_division.scala 216:32]
    reg multiplierReg_65 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_65 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_65 <= io.sign_a[65] @[block_division.scala 206:15]
    multiplierReg_65 <= io.man_a[65] @[block_division.scala 207:21]
    node multiplication_65 = mul(multiplierReg_65, io.man_b[65]) @[block_division.scala 208:42]
    node _dotProductRegs_1_T_6 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_1_T_7 = tail(_dotProductRegs_1_T_6, 1) @[block_division.scala 209:60]
    node _dotProductRegs_1_T_8 = gt(multiplication_65, _dotProductRegs_1_T_7) @[block_division.scala 209:47]
    node _dotProductRegs_1_T_9 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_1_T_10 = tail(_dotProductRegs_1_T_9, 1) @[block_division.scala 209:78]
    node _dotProductRegs_1_T_11 = mux(_dotProductRegs_1_T_8, _dotProductRegs_1_T_10, multiplication_65) @[block_division.scala 209:31]
    dotProductRegs_1[1] <= _dotProductRegs_1_T_11 @[block_division.scala 209:25]
    node _signs_1_T_1 = xor(signReg_65, io.sign_b[65]) @[block_division.scala 210:27]
    signs_1[1] <= _signs_1_T_1 @[block_division.scala 210:16]
    node _two_complement_1_T_7 = eq(signs_1[1], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_1_T_8 = cat(UInt<1>("h0"), dotProductRegs_1[1]) @[block_division.scala 213:16]
    node _two_complement_1_T_9 = not(_two_complement_1_T_8) @[block_division.scala 213:10]
    node _two_complement_1_T_10 = add(_two_complement_1_T_9, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_1_T_11 = tail(_two_complement_1_T_10, 1) @[block_division.scala 213:38]
    node _two_complement_1_T_12 = cat(UInt<1>("h0"), dotProductRegs_1[1]) @[block_division.scala 214:14]
    node _two_complement_1_T_13 = mux(_two_complement_1_T_7, _two_complement_1_T_11, _two_complement_1_T_12) @[block_division.scala 211:31]
    two_complement_1[1] <= _two_complement_1_T_13 @[block_division.scala 211:25]
    node _two_complement_buffer_1_T_1 = asSInt(two_complement_1[1]) @[block_division.scala 216:53]
    two_complement_buffer_1[1] <= _two_complement_buffer_1_T_1 @[block_division.scala 216:32]
    reg multiplierReg_66 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_66 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_66 <= io.sign_a[66] @[block_division.scala 206:15]
    multiplierReg_66 <= io.man_a[66] @[block_division.scala 207:21]
    node multiplication_66 = mul(multiplierReg_66, io.man_b[66]) @[block_division.scala 208:42]
    node _dotProductRegs_2_T_6 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_2_T_7 = tail(_dotProductRegs_2_T_6, 1) @[block_division.scala 209:60]
    node _dotProductRegs_2_T_8 = gt(multiplication_66, _dotProductRegs_2_T_7) @[block_division.scala 209:47]
    node _dotProductRegs_2_T_9 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_2_T_10 = tail(_dotProductRegs_2_T_9, 1) @[block_division.scala 209:78]
    node _dotProductRegs_2_T_11 = mux(_dotProductRegs_2_T_8, _dotProductRegs_2_T_10, multiplication_66) @[block_division.scala 209:31]
    dotProductRegs_1[2] <= _dotProductRegs_2_T_11 @[block_division.scala 209:25]
    node _signs_2_T_1 = xor(signReg_66, io.sign_b[66]) @[block_division.scala 210:27]
    signs_1[2] <= _signs_2_T_1 @[block_division.scala 210:16]
    node _two_complement_2_T_7 = eq(signs_1[2], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_2_T_8 = cat(UInt<1>("h0"), dotProductRegs_1[2]) @[block_division.scala 213:16]
    node _two_complement_2_T_9 = not(_two_complement_2_T_8) @[block_division.scala 213:10]
    node _two_complement_2_T_10 = add(_two_complement_2_T_9, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_2_T_11 = tail(_two_complement_2_T_10, 1) @[block_division.scala 213:38]
    node _two_complement_2_T_12 = cat(UInt<1>("h0"), dotProductRegs_1[2]) @[block_division.scala 214:14]
    node _two_complement_2_T_13 = mux(_two_complement_2_T_7, _two_complement_2_T_11, _two_complement_2_T_12) @[block_division.scala 211:31]
    two_complement_1[2] <= _two_complement_2_T_13 @[block_division.scala 211:25]
    node _two_complement_buffer_2_T_1 = asSInt(two_complement_1[2]) @[block_division.scala 216:53]
    two_complement_buffer_1[2] <= _two_complement_buffer_2_T_1 @[block_division.scala 216:32]
    reg multiplierReg_67 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_67 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_67 <= io.sign_a[67] @[block_division.scala 206:15]
    multiplierReg_67 <= io.man_a[67] @[block_division.scala 207:21]
    node multiplication_67 = mul(multiplierReg_67, io.man_b[67]) @[block_division.scala 208:42]
    node _dotProductRegs_3_T_6 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_3_T_7 = tail(_dotProductRegs_3_T_6, 1) @[block_division.scala 209:60]
    node _dotProductRegs_3_T_8 = gt(multiplication_67, _dotProductRegs_3_T_7) @[block_division.scala 209:47]
    node _dotProductRegs_3_T_9 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_3_T_10 = tail(_dotProductRegs_3_T_9, 1) @[block_division.scala 209:78]
    node _dotProductRegs_3_T_11 = mux(_dotProductRegs_3_T_8, _dotProductRegs_3_T_10, multiplication_67) @[block_division.scala 209:31]
    dotProductRegs_1[3] <= _dotProductRegs_3_T_11 @[block_division.scala 209:25]
    node _signs_3_T_1 = xor(signReg_67, io.sign_b[67]) @[block_division.scala 210:27]
    signs_1[3] <= _signs_3_T_1 @[block_division.scala 210:16]
    node _two_complement_3_T_7 = eq(signs_1[3], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_3_T_8 = cat(UInt<1>("h0"), dotProductRegs_1[3]) @[block_division.scala 213:16]
    node _two_complement_3_T_9 = not(_two_complement_3_T_8) @[block_division.scala 213:10]
    node _two_complement_3_T_10 = add(_two_complement_3_T_9, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_3_T_11 = tail(_two_complement_3_T_10, 1) @[block_division.scala 213:38]
    node _two_complement_3_T_12 = cat(UInt<1>("h0"), dotProductRegs_1[3]) @[block_division.scala 214:14]
    node _two_complement_3_T_13 = mux(_two_complement_3_T_7, _two_complement_3_T_11, _two_complement_3_T_12) @[block_division.scala 211:31]
    two_complement_1[3] <= _two_complement_3_T_13 @[block_division.scala 211:25]
    node _two_complement_buffer_3_T_1 = asSInt(two_complement_1[3]) @[block_division.scala 216:53]
    two_complement_buffer_1[3] <= _two_complement_buffer_3_T_1 @[block_division.scala 216:32]
    reg multiplierReg_68 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_68 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_68 <= io.sign_a[68] @[block_division.scala 206:15]
    multiplierReg_68 <= io.man_a[68] @[block_division.scala 207:21]
    node multiplication_68 = mul(multiplierReg_68, io.man_b[68]) @[block_division.scala 208:42]
    node _dotProductRegs_4_T_6 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_4_T_7 = tail(_dotProductRegs_4_T_6, 1) @[block_division.scala 209:60]
    node _dotProductRegs_4_T_8 = gt(multiplication_68, _dotProductRegs_4_T_7) @[block_division.scala 209:47]
    node _dotProductRegs_4_T_9 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_4_T_10 = tail(_dotProductRegs_4_T_9, 1) @[block_division.scala 209:78]
    node _dotProductRegs_4_T_11 = mux(_dotProductRegs_4_T_8, _dotProductRegs_4_T_10, multiplication_68) @[block_division.scala 209:31]
    dotProductRegs_1[4] <= _dotProductRegs_4_T_11 @[block_division.scala 209:25]
    node _signs_4_T_1 = xor(signReg_68, io.sign_b[68]) @[block_division.scala 210:27]
    signs_1[4] <= _signs_4_T_1 @[block_division.scala 210:16]
    node _two_complement_4_T_7 = eq(signs_1[4], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_4_T_8 = cat(UInt<1>("h0"), dotProductRegs_1[4]) @[block_division.scala 213:16]
    node _two_complement_4_T_9 = not(_two_complement_4_T_8) @[block_division.scala 213:10]
    node _two_complement_4_T_10 = add(_two_complement_4_T_9, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_4_T_11 = tail(_two_complement_4_T_10, 1) @[block_division.scala 213:38]
    node _two_complement_4_T_12 = cat(UInt<1>("h0"), dotProductRegs_1[4]) @[block_division.scala 214:14]
    node _two_complement_4_T_13 = mux(_two_complement_4_T_7, _two_complement_4_T_11, _two_complement_4_T_12) @[block_division.scala 211:31]
    two_complement_1[4] <= _two_complement_4_T_13 @[block_division.scala 211:25]
    node _two_complement_buffer_4_T_1 = asSInt(two_complement_1[4]) @[block_division.scala 216:53]
    two_complement_buffer_1[4] <= _two_complement_buffer_4_T_1 @[block_division.scala 216:32]
    reg multiplierReg_69 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_69 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_69 <= io.sign_a[69] @[block_division.scala 206:15]
    multiplierReg_69 <= io.man_a[69] @[block_division.scala 207:21]
    node multiplication_69 = mul(multiplierReg_69, io.man_b[69]) @[block_division.scala 208:42]
    node _dotProductRegs_5_T_6 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_5_T_7 = tail(_dotProductRegs_5_T_6, 1) @[block_division.scala 209:60]
    node _dotProductRegs_5_T_8 = gt(multiplication_69, _dotProductRegs_5_T_7) @[block_division.scala 209:47]
    node _dotProductRegs_5_T_9 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_5_T_10 = tail(_dotProductRegs_5_T_9, 1) @[block_division.scala 209:78]
    node _dotProductRegs_5_T_11 = mux(_dotProductRegs_5_T_8, _dotProductRegs_5_T_10, multiplication_69) @[block_division.scala 209:31]
    dotProductRegs_1[5] <= _dotProductRegs_5_T_11 @[block_division.scala 209:25]
    node _signs_5_T_1 = xor(signReg_69, io.sign_b[69]) @[block_division.scala 210:27]
    signs_1[5] <= _signs_5_T_1 @[block_division.scala 210:16]
    node _two_complement_5_T_7 = eq(signs_1[5], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_5_T_8 = cat(UInt<1>("h0"), dotProductRegs_1[5]) @[block_division.scala 213:16]
    node _two_complement_5_T_9 = not(_two_complement_5_T_8) @[block_division.scala 213:10]
    node _two_complement_5_T_10 = add(_two_complement_5_T_9, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_5_T_11 = tail(_two_complement_5_T_10, 1) @[block_division.scala 213:38]
    node _two_complement_5_T_12 = cat(UInt<1>("h0"), dotProductRegs_1[5]) @[block_division.scala 214:14]
    node _two_complement_5_T_13 = mux(_two_complement_5_T_7, _two_complement_5_T_11, _two_complement_5_T_12) @[block_division.scala 211:31]
    two_complement_1[5] <= _two_complement_5_T_13 @[block_division.scala 211:25]
    node _two_complement_buffer_5_T_1 = asSInt(two_complement_1[5]) @[block_division.scala 216:53]
    two_complement_buffer_1[5] <= _two_complement_buffer_5_T_1 @[block_division.scala 216:32]
    reg multiplierReg_70 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_70 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_70 <= io.sign_a[70] @[block_division.scala 206:15]
    multiplierReg_70 <= io.man_a[70] @[block_division.scala 207:21]
    node multiplication_70 = mul(multiplierReg_70, io.man_b[70]) @[block_division.scala 208:42]
    node _dotProductRegs_6_T_6 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_6_T_7 = tail(_dotProductRegs_6_T_6, 1) @[block_division.scala 209:60]
    node _dotProductRegs_6_T_8 = gt(multiplication_70, _dotProductRegs_6_T_7) @[block_division.scala 209:47]
    node _dotProductRegs_6_T_9 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_6_T_10 = tail(_dotProductRegs_6_T_9, 1) @[block_division.scala 209:78]
    node _dotProductRegs_6_T_11 = mux(_dotProductRegs_6_T_8, _dotProductRegs_6_T_10, multiplication_70) @[block_division.scala 209:31]
    dotProductRegs_1[6] <= _dotProductRegs_6_T_11 @[block_division.scala 209:25]
    node _signs_6_T_1 = xor(signReg_70, io.sign_b[70]) @[block_division.scala 210:27]
    signs_1[6] <= _signs_6_T_1 @[block_division.scala 210:16]
    node _two_complement_6_T_7 = eq(signs_1[6], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_6_T_8 = cat(UInt<1>("h0"), dotProductRegs_1[6]) @[block_division.scala 213:16]
    node _two_complement_6_T_9 = not(_two_complement_6_T_8) @[block_division.scala 213:10]
    node _two_complement_6_T_10 = add(_two_complement_6_T_9, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_6_T_11 = tail(_two_complement_6_T_10, 1) @[block_division.scala 213:38]
    node _two_complement_6_T_12 = cat(UInt<1>("h0"), dotProductRegs_1[6]) @[block_division.scala 214:14]
    node _two_complement_6_T_13 = mux(_two_complement_6_T_7, _two_complement_6_T_11, _two_complement_6_T_12) @[block_division.scala 211:31]
    two_complement_1[6] <= _two_complement_6_T_13 @[block_division.scala 211:25]
    node _two_complement_buffer_6_T_1 = asSInt(two_complement_1[6]) @[block_division.scala 216:53]
    two_complement_buffer_1[6] <= _two_complement_buffer_6_T_1 @[block_division.scala 216:32]
    reg multiplierReg_71 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_71 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_71 <= io.sign_a[71] @[block_division.scala 206:15]
    multiplierReg_71 <= io.man_a[71] @[block_division.scala 207:21]
    node multiplication_71 = mul(multiplierReg_71, io.man_b[71]) @[block_division.scala 208:42]
    node _dotProductRegs_7_T_6 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_7_T_7 = tail(_dotProductRegs_7_T_6, 1) @[block_division.scala 209:60]
    node _dotProductRegs_7_T_8 = gt(multiplication_71, _dotProductRegs_7_T_7) @[block_division.scala 209:47]
    node _dotProductRegs_7_T_9 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_7_T_10 = tail(_dotProductRegs_7_T_9, 1) @[block_division.scala 209:78]
    node _dotProductRegs_7_T_11 = mux(_dotProductRegs_7_T_8, _dotProductRegs_7_T_10, multiplication_71) @[block_division.scala 209:31]
    dotProductRegs_1[7] <= _dotProductRegs_7_T_11 @[block_division.scala 209:25]
    node _signs_7_T_1 = xor(signReg_71, io.sign_b[71]) @[block_division.scala 210:27]
    signs_1[7] <= _signs_7_T_1 @[block_division.scala 210:16]
    node _two_complement_7_T_7 = eq(signs_1[7], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_7_T_8 = cat(UInt<1>("h0"), dotProductRegs_1[7]) @[block_division.scala 213:16]
    node _two_complement_7_T_9 = not(_two_complement_7_T_8) @[block_division.scala 213:10]
    node _two_complement_7_T_10 = add(_two_complement_7_T_9, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_7_T_11 = tail(_two_complement_7_T_10, 1) @[block_division.scala 213:38]
    node _two_complement_7_T_12 = cat(UInt<1>("h0"), dotProductRegs_1[7]) @[block_division.scala 214:14]
    node _two_complement_7_T_13 = mux(_two_complement_7_T_7, _two_complement_7_T_11, _two_complement_7_T_12) @[block_division.scala 211:31]
    two_complement_1[7] <= _two_complement_7_T_13 @[block_division.scala 211:25]
    node _two_complement_buffer_7_T_1 = asSInt(two_complement_1[7]) @[block_division.scala 216:53]
    two_complement_buffer_1[7] <= _two_complement_buffer_7_T_1 @[block_division.scala 216:32]
    reg multiplierReg_72 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_72 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_72 <= io.sign_a[72] @[block_division.scala 206:15]
    multiplierReg_72 <= io.man_a[72] @[block_division.scala 207:21]
    node multiplication_72 = mul(multiplierReg_72, io.man_b[72]) @[block_division.scala 208:42]
    node _dotProductRegs_8_T_6 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_8_T_7 = tail(_dotProductRegs_8_T_6, 1) @[block_division.scala 209:60]
    node _dotProductRegs_8_T_8 = gt(multiplication_72, _dotProductRegs_8_T_7) @[block_division.scala 209:47]
    node _dotProductRegs_8_T_9 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_8_T_10 = tail(_dotProductRegs_8_T_9, 1) @[block_division.scala 209:78]
    node _dotProductRegs_8_T_11 = mux(_dotProductRegs_8_T_8, _dotProductRegs_8_T_10, multiplication_72) @[block_division.scala 209:31]
    dotProductRegs_1[8] <= _dotProductRegs_8_T_11 @[block_division.scala 209:25]
    node _signs_8_T_1 = xor(signReg_72, io.sign_b[72]) @[block_division.scala 210:27]
    signs_1[8] <= _signs_8_T_1 @[block_division.scala 210:16]
    node _two_complement_8_T_7 = eq(signs_1[8], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_8_T_8 = cat(UInt<1>("h0"), dotProductRegs_1[8]) @[block_division.scala 213:16]
    node _two_complement_8_T_9 = not(_two_complement_8_T_8) @[block_division.scala 213:10]
    node _two_complement_8_T_10 = add(_two_complement_8_T_9, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_8_T_11 = tail(_two_complement_8_T_10, 1) @[block_division.scala 213:38]
    node _two_complement_8_T_12 = cat(UInt<1>("h0"), dotProductRegs_1[8]) @[block_division.scala 214:14]
    node _two_complement_8_T_13 = mux(_two_complement_8_T_7, _two_complement_8_T_11, _two_complement_8_T_12) @[block_division.scala 211:31]
    two_complement_1[8] <= _two_complement_8_T_13 @[block_division.scala 211:25]
    node _two_complement_buffer_8_T_1 = asSInt(two_complement_1[8]) @[block_division.scala 216:53]
    two_complement_buffer_1[8] <= _two_complement_buffer_8_T_1 @[block_division.scala 216:32]
    reg multiplierReg_73 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_73 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_73 <= io.sign_a[73] @[block_division.scala 206:15]
    multiplierReg_73 <= io.man_a[73] @[block_division.scala 207:21]
    node multiplication_73 = mul(multiplierReg_73, io.man_b[73]) @[block_division.scala 208:42]
    node _dotProductRegs_9_T_6 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_9_T_7 = tail(_dotProductRegs_9_T_6, 1) @[block_division.scala 209:60]
    node _dotProductRegs_9_T_8 = gt(multiplication_73, _dotProductRegs_9_T_7) @[block_division.scala 209:47]
    node _dotProductRegs_9_T_9 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_9_T_10 = tail(_dotProductRegs_9_T_9, 1) @[block_division.scala 209:78]
    node _dotProductRegs_9_T_11 = mux(_dotProductRegs_9_T_8, _dotProductRegs_9_T_10, multiplication_73) @[block_division.scala 209:31]
    dotProductRegs_1[9] <= _dotProductRegs_9_T_11 @[block_division.scala 209:25]
    node _signs_9_T_1 = xor(signReg_73, io.sign_b[73]) @[block_division.scala 210:27]
    signs_1[9] <= _signs_9_T_1 @[block_division.scala 210:16]
    node _two_complement_9_T_7 = eq(signs_1[9], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_9_T_8 = cat(UInt<1>("h0"), dotProductRegs_1[9]) @[block_division.scala 213:16]
    node _two_complement_9_T_9 = not(_two_complement_9_T_8) @[block_division.scala 213:10]
    node _two_complement_9_T_10 = add(_two_complement_9_T_9, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_9_T_11 = tail(_two_complement_9_T_10, 1) @[block_division.scala 213:38]
    node _two_complement_9_T_12 = cat(UInt<1>("h0"), dotProductRegs_1[9]) @[block_division.scala 214:14]
    node _two_complement_9_T_13 = mux(_two_complement_9_T_7, _two_complement_9_T_11, _two_complement_9_T_12) @[block_division.scala 211:31]
    two_complement_1[9] <= _two_complement_9_T_13 @[block_division.scala 211:25]
    node _two_complement_buffer_9_T_1 = asSInt(two_complement_1[9]) @[block_division.scala 216:53]
    two_complement_buffer_1[9] <= _two_complement_buffer_9_T_1 @[block_division.scala 216:32]
    reg multiplierReg_74 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_74 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_74 <= io.sign_a[74] @[block_division.scala 206:15]
    multiplierReg_74 <= io.man_a[74] @[block_division.scala 207:21]
    node multiplication_74 = mul(multiplierReg_74, io.man_b[74]) @[block_division.scala 208:42]
    node _dotProductRegs_10_T_6 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_10_T_7 = tail(_dotProductRegs_10_T_6, 1) @[block_division.scala 209:60]
    node _dotProductRegs_10_T_8 = gt(multiplication_74, _dotProductRegs_10_T_7) @[block_division.scala 209:47]
    node _dotProductRegs_10_T_9 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_10_T_10 = tail(_dotProductRegs_10_T_9, 1) @[block_division.scala 209:78]
    node _dotProductRegs_10_T_11 = mux(_dotProductRegs_10_T_8, _dotProductRegs_10_T_10, multiplication_74) @[block_division.scala 209:31]
    dotProductRegs_1[10] <= _dotProductRegs_10_T_11 @[block_division.scala 209:25]
    node _signs_10_T_1 = xor(signReg_74, io.sign_b[74]) @[block_division.scala 210:27]
    signs_1[10] <= _signs_10_T_1 @[block_division.scala 210:16]
    node _two_complement_10_T_7 = eq(signs_1[10], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_10_T_8 = cat(UInt<1>("h0"), dotProductRegs_1[10]) @[block_division.scala 213:16]
    node _two_complement_10_T_9 = not(_two_complement_10_T_8) @[block_division.scala 213:10]
    node _two_complement_10_T_10 = add(_two_complement_10_T_9, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_10_T_11 = tail(_two_complement_10_T_10, 1) @[block_division.scala 213:38]
    node _two_complement_10_T_12 = cat(UInt<1>("h0"), dotProductRegs_1[10]) @[block_division.scala 214:14]
    node _two_complement_10_T_13 = mux(_two_complement_10_T_7, _two_complement_10_T_11, _two_complement_10_T_12) @[block_division.scala 211:31]
    two_complement_1[10] <= _two_complement_10_T_13 @[block_division.scala 211:25]
    node _two_complement_buffer_10_T_1 = asSInt(two_complement_1[10]) @[block_division.scala 216:53]
    two_complement_buffer_1[10] <= _two_complement_buffer_10_T_1 @[block_division.scala 216:32]
    reg multiplierReg_75 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_75 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_75 <= io.sign_a[75] @[block_division.scala 206:15]
    multiplierReg_75 <= io.man_a[75] @[block_division.scala 207:21]
    node multiplication_75 = mul(multiplierReg_75, io.man_b[75]) @[block_division.scala 208:42]
    node _dotProductRegs_11_T_6 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_11_T_7 = tail(_dotProductRegs_11_T_6, 1) @[block_division.scala 209:60]
    node _dotProductRegs_11_T_8 = gt(multiplication_75, _dotProductRegs_11_T_7) @[block_division.scala 209:47]
    node _dotProductRegs_11_T_9 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_11_T_10 = tail(_dotProductRegs_11_T_9, 1) @[block_division.scala 209:78]
    node _dotProductRegs_11_T_11 = mux(_dotProductRegs_11_T_8, _dotProductRegs_11_T_10, multiplication_75) @[block_division.scala 209:31]
    dotProductRegs_1[11] <= _dotProductRegs_11_T_11 @[block_division.scala 209:25]
    node _signs_11_T_1 = xor(signReg_75, io.sign_b[75]) @[block_division.scala 210:27]
    signs_1[11] <= _signs_11_T_1 @[block_division.scala 210:16]
    node _two_complement_11_T_7 = eq(signs_1[11], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_11_T_8 = cat(UInt<1>("h0"), dotProductRegs_1[11]) @[block_division.scala 213:16]
    node _two_complement_11_T_9 = not(_two_complement_11_T_8) @[block_division.scala 213:10]
    node _two_complement_11_T_10 = add(_two_complement_11_T_9, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_11_T_11 = tail(_two_complement_11_T_10, 1) @[block_division.scala 213:38]
    node _two_complement_11_T_12 = cat(UInt<1>("h0"), dotProductRegs_1[11]) @[block_division.scala 214:14]
    node _two_complement_11_T_13 = mux(_two_complement_11_T_7, _two_complement_11_T_11, _two_complement_11_T_12) @[block_division.scala 211:31]
    two_complement_1[11] <= _two_complement_11_T_13 @[block_division.scala 211:25]
    node _two_complement_buffer_11_T_1 = asSInt(two_complement_1[11]) @[block_division.scala 216:53]
    two_complement_buffer_1[11] <= _two_complement_buffer_11_T_1 @[block_division.scala 216:32]
    reg multiplierReg_76 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_76 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_76 <= io.sign_a[76] @[block_division.scala 206:15]
    multiplierReg_76 <= io.man_a[76] @[block_division.scala 207:21]
    node multiplication_76 = mul(multiplierReg_76, io.man_b[76]) @[block_division.scala 208:42]
    node _dotProductRegs_12_T_6 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_12_T_7 = tail(_dotProductRegs_12_T_6, 1) @[block_division.scala 209:60]
    node _dotProductRegs_12_T_8 = gt(multiplication_76, _dotProductRegs_12_T_7) @[block_division.scala 209:47]
    node _dotProductRegs_12_T_9 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_12_T_10 = tail(_dotProductRegs_12_T_9, 1) @[block_division.scala 209:78]
    node _dotProductRegs_12_T_11 = mux(_dotProductRegs_12_T_8, _dotProductRegs_12_T_10, multiplication_76) @[block_division.scala 209:31]
    dotProductRegs_1[12] <= _dotProductRegs_12_T_11 @[block_division.scala 209:25]
    node _signs_12_T_1 = xor(signReg_76, io.sign_b[76]) @[block_division.scala 210:27]
    signs_1[12] <= _signs_12_T_1 @[block_division.scala 210:16]
    node _two_complement_12_T_7 = eq(signs_1[12], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_12_T_8 = cat(UInt<1>("h0"), dotProductRegs_1[12]) @[block_division.scala 213:16]
    node _two_complement_12_T_9 = not(_two_complement_12_T_8) @[block_division.scala 213:10]
    node _two_complement_12_T_10 = add(_two_complement_12_T_9, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_12_T_11 = tail(_two_complement_12_T_10, 1) @[block_division.scala 213:38]
    node _two_complement_12_T_12 = cat(UInt<1>("h0"), dotProductRegs_1[12]) @[block_division.scala 214:14]
    node _two_complement_12_T_13 = mux(_two_complement_12_T_7, _two_complement_12_T_11, _two_complement_12_T_12) @[block_division.scala 211:31]
    two_complement_1[12] <= _two_complement_12_T_13 @[block_division.scala 211:25]
    node _two_complement_buffer_12_T_1 = asSInt(two_complement_1[12]) @[block_division.scala 216:53]
    two_complement_buffer_1[12] <= _two_complement_buffer_12_T_1 @[block_division.scala 216:32]
    reg multiplierReg_77 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_77 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_77 <= io.sign_a[77] @[block_division.scala 206:15]
    multiplierReg_77 <= io.man_a[77] @[block_division.scala 207:21]
    node multiplication_77 = mul(multiplierReg_77, io.man_b[77]) @[block_division.scala 208:42]
    node _dotProductRegs_13_T_6 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_13_T_7 = tail(_dotProductRegs_13_T_6, 1) @[block_division.scala 209:60]
    node _dotProductRegs_13_T_8 = gt(multiplication_77, _dotProductRegs_13_T_7) @[block_division.scala 209:47]
    node _dotProductRegs_13_T_9 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_13_T_10 = tail(_dotProductRegs_13_T_9, 1) @[block_division.scala 209:78]
    node _dotProductRegs_13_T_11 = mux(_dotProductRegs_13_T_8, _dotProductRegs_13_T_10, multiplication_77) @[block_division.scala 209:31]
    dotProductRegs_1[13] <= _dotProductRegs_13_T_11 @[block_division.scala 209:25]
    node _signs_13_T_1 = xor(signReg_77, io.sign_b[77]) @[block_division.scala 210:27]
    signs_1[13] <= _signs_13_T_1 @[block_division.scala 210:16]
    node _two_complement_13_T_7 = eq(signs_1[13], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_13_T_8 = cat(UInt<1>("h0"), dotProductRegs_1[13]) @[block_division.scala 213:16]
    node _two_complement_13_T_9 = not(_two_complement_13_T_8) @[block_division.scala 213:10]
    node _two_complement_13_T_10 = add(_two_complement_13_T_9, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_13_T_11 = tail(_two_complement_13_T_10, 1) @[block_division.scala 213:38]
    node _two_complement_13_T_12 = cat(UInt<1>("h0"), dotProductRegs_1[13]) @[block_division.scala 214:14]
    node _two_complement_13_T_13 = mux(_two_complement_13_T_7, _two_complement_13_T_11, _two_complement_13_T_12) @[block_division.scala 211:31]
    two_complement_1[13] <= _two_complement_13_T_13 @[block_division.scala 211:25]
    node _two_complement_buffer_13_T_1 = asSInt(two_complement_1[13]) @[block_division.scala 216:53]
    two_complement_buffer_1[13] <= _two_complement_buffer_13_T_1 @[block_division.scala 216:32]
    reg multiplierReg_78 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_78 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_78 <= io.sign_a[78] @[block_division.scala 206:15]
    multiplierReg_78 <= io.man_a[78] @[block_division.scala 207:21]
    node multiplication_78 = mul(multiplierReg_78, io.man_b[78]) @[block_division.scala 208:42]
    node _dotProductRegs_14_T_6 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_14_T_7 = tail(_dotProductRegs_14_T_6, 1) @[block_division.scala 209:60]
    node _dotProductRegs_14_T_8 = gt(multiplication_78, _dotProductRegs_14_T_7) @[block_division.scala 209:47]
    node _dotProductRegs_14_T_9 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_14_T_10 = tail(_dotProductRegs_14_T_9, 1) @[block_division.scala 209:78]
    node _dotProductRegs_14_T_11 = mux(_dotProductRegs_14_T_8, _dotProductRegs_14_T_10, multiplication_78) @[block_division.scala 209:31]
    dotProductRegs_1[14] <= _dotProductRegs_14_T_11 @[block_division.scala 209:25]
    node _signs_14_T_1 = xor(signReg_78, io.sign_b[78]) @[block_division.scala 210:27]
    signs_1[14] <= _signs_14_T_1 @[block_division.scala 210:16]
    node _two_complement_14_T_7 = eq(signs_1[14], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_14_T_8 = cat(UInt<1>("h0"), dotProductRegs_1[14]) @[block_division.scala 213:16]
    node _two_complement_14_T_9 = not(_two_complement_14_T_8) @[block_division.scala 213:10]
    node _two_complement_14_T_10 = add(_two_complement_14_T_9, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_14_T_11 = tail(_two_complement_14_T_10, 1) @[block_division.scala 213:38]
    node _two_complement_14_T_12 = cat(UInt<1>("h0"), dotProductRegs_1[14]) @[block_division.scala 214:14]
    node _two_complement_14_T_13 = mux(_two_complement_14_T_7, _two_complement_14_T_11, _two_complement_14_T_12) @[block_division.scala 211:31]
    two_complement_1[14] <= _two_complement_14_T_13 @[block_division.scala 211:25]
    node _two_complement_buffer_14_T_1 = asSInt(two_complement_1[14]) @[block_division.scala 216:53]
    two_complement_buffer_1[14] <= _two_complement_buffer_14_T_1 @[block_division.scala 216:32]
    reg multiplierReg_79 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_79 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_79 <= io.sign_a[79] @[block_division.scala 206:15]
    multiplierReg_79 <= io.man_a[79] @[block_division.scala 207:21]
    node multiplication_79 = mul(multiplierReg_79, io.man_b[79]) @[block_division.scala 208:42]
    node _dotProductRegs_15_T_6 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_15_T_7 = tail(_dotProductRegs_15_T_6, 1) @[block_division.scala 209:60]
    node _dotProductRegs_15_T_8 = gt(multiplication_79, _dotProductRegs_15_T_7) @[block_division.scala 209:47]
    node _dotProductRegs_15_T_9 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_15_T_10 = tail(_dotProductRegs_15_T_9, 1) @[block_division.scala 209:78]
    node _dotProductRegs_15_T_11 = mux(_dotProductRegs_15_T_8, _dotProductRegs_15_T_10, multiplication_79) @[block_division.scala 209:31]
    dotProductRegs_1[15] <= _dotProductRegs_15_T_11 @[block_division.scala 209:25]
    node _signs_15_T_1 = xor(signReg_79, io.sign_b[79]) @[block_division.scala 210:27]
    signs_1[15] <= _signs_15_T_1 @[block_division.scala 210:16]
    node _two_complement_15_T_7 = eq(signs_1[15], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_15_T_8 = cat(UInt<1>("h0"), dotProductRegs_1[15]) @[block_division.scala 213:16]
    node _two_complement_15_T_9 = not(_two_complement_15_T_8) @[block_division.scala 213:10]
    node _two_complement_15_T_10 = add(_two_complement_15_T_9, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_15_T_11 = tail(_two_complement_15_T_10, 1) @[block_division.scala 213:38]
    node _two_complement_15_T_12 = cat(UInt<1>("h0"), dotProductRegs_1[15]) @[block_division.scala 214:14]
    node _two_complement_15_T_13 = mux(_two_complement_15_T_7, _two_complement_15_T_11, _two_complement_15_T_12) @[block_division.scala 211:31]
    two_complement_1[15] <= _two_complement_15_T_13 @[block_division.scala 211:25]
    node _two_complement_buffer_15_T_1 = asSInt(two_complement_1[15]) @[block_division.scala 216:53]
    two_complement_buffer_1[15] <= _two_complement_buffer_15_T_1 @[block_division.scala 216:32]
    reg multiplierReg_80 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_80 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_80 <= io.sign_a[80] @[block_division.scala 206:15]
    multiplierReg_80 <= io.man_a[80] @[block_division.scala 207:21]
    node multiplication_80 = mul(multiplierReg_80, io.man_b[80]) @[block_division.scala 208:42]
    node _dotProductRegs_16_T_6 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_16_T_7 = tail(_dotProductRegs_16_T_6, 1) @[block_division.scala 209:60]
    node _dotProductRegs_16_T_8 = gt(multiplication_80, _dotProductRegs_16_T_7) @[block_division.scala 209:47]
    node _dotProductRegs_16_T_9 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_16_T_10 = tail(_dotProductRegs_16_T_9, 1) @[block_division.scala 209:78]
    node _dotProductRegs_16_T_11 = mux(_dotProductRegs_16_T_8, _dotProductRegs_16_T_10, multiplication_80) @[block_division.scala 209:31]
    dotProductRegs_1[16] <= _dotProductRegs_16_T_11 @[block_division.scala 209:25]
    node _signs_16_T_1 = xor(signReg_80, io.sign_b[80]) @[block_division.scala 210:27]
    signs_1[16] <= _signs_16_T_1 @[block_division.scala 210:16]
    node _two_complement_16_T_7 = eq(signs_1[16], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_16_T_8 = cat(UInt<1>("h0"), dotProductRegs_1[16]) @[block_division.scala 213:16]
    node _two_complement_16_T_9 = not(_two_complement_16_T_8) @[block_division.scala 213:10]
    node _two_complement_16_T_10 = add(_two_complement_16_T_9, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_16_T_11 = tail(_two_complement_16_T_10, 1) @[block_division.scala 213:38]
    node _two_complement_16_T_12 = cat(UInt<1>("h0"), dotProductRegs_1[16]) @[block_division.scala 214:14]
    node _two_complement_16_T_13 = mux(_two_complement_16_T_7, _two_complement_16_T_11, _two_complement_16_T_12) @[block_division.scala 211:31]
    two_complement_1[16] <= _two_complement_16_T_13 @[block_division.scala 211:25]
    node _two_complement_buffer_16_T_1 = asSInt(two_complement_1[16]) @[block_division.scala 216:53]
    two_complement_buffer_1[16] <= _two_complement_buffer_16_T_1 @[block_division.scala 216:32]
    reg multiplierReg_81 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_81 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_81 <= io.sign_a[81] @[block_division.scala 206:15]
    multiplierReg_81 <= io.man_a[81] @[block_division.scala 207:21]
    node multiplication_81 = mul(multiplierReg_81, io.man_b[81]) @[block_division.scala 208:42]
    node _dotProductRegs_17_T_6 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_17_T_7 = tail(_dotProductRegs_17_T_6, 1) @[block_division.scala 209:60]
    node _dotProductRegs_17_T_8 = gt(multiplication_81, _dotProductRegs_17_T_7) @[block_division.scala 209:47]
    node _dotProductRegs_17_T_9 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_17_T_10 = tail(_dotProductRegs_17_T_9, 1) @[block_division.scala 209:78]
    node _dotProductRegs_17_T_11 = mux(_dotProductRegs_17_T_8, _dotProductRegs_17_T_10, multiplication_81) @[block_division.scala 209:31]
    dotProductRegs_1[17] <= _dotProductRegs_17_T_11 @[block_division.scala 209:25]
    node _signs_17_T_1 = xor(signReg_81, io.sign_b[81]) @[block_division.scala 210:27]
    signs_1[17] <= _signs_17_T_1 @[block_division.scala 210:16]
    node _two_complement_17_T_7 = eq(signs_1[17], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_17_T_8 = cat(UInt<1>("h0"), dotProductRegs_1[17]) @[block_division.scala 213:16]
    node _two_complement_17_T_9 = not(_two_complement_17_T_8) @[block_division.scala 213:10]
    node _two_complement_17_T_10 = add(_two_complement_17_T_9, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_17_T_11 = tail(_two_complement_17_T_10, 1) @[block_division.scala 213:38]
    node _two_complement_17_T_12 = cat(UInt<1>("h0"), dotProductRegs_1[17]) @[block_division.scala 214:14]
    node _two_complement_17_T_13 = mux(_two_complement_17_T_7, _two_complement_17_T_11, _two_complement_17_T_12) @[block_division.scala 211:31]
    two_complement_1[17] <= _two_complement_17_T_13 @[block_division.scala 211:25]
    node _two_complement_buffer_17_T_1 = asSInt(two_complement_1[17]) @[block_division.scala 216:53]
    two_complement_buffer_1[17] <= _two_complement_buffer_17_T_1 @[block_division.scala 216:32]
    reg multiplierReg_82 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_82 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_82 <= io.sign_a[82] @[block_division.scala 206:15]
    multiplierReg_82 <= io.man_a[82] @[block_division.scala 207:21]
    node multiplication_82 = mul(multiplierReg_82, io.man_b[82]) @[block_division.scala 208:42]
    node _dotProductRegs_18_T_6 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_18_T_7 = tail(_dotProductRegs_18_T_6, 1) @[block_division.scala 209:60]
    node _dotProductRegs_18_T_8 = gt(multiplication_82, _dotProductRegs_18_T_7) @[block_division.scala 209:47]
    node _dotProductRegs_18_T_9 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_18_T_10 = tail(_dotProductRegs_18_T_9, 1) @[block_division.scala 209:78]
    node _dotProductRegs_18_T_11 = mux(_dotProductRegs_18_T_8, _dotProductRegs_18_T_10, multiplication_82) @[block_division.scala 209:31]
    dotProductRegs_1[18] <= _dotProductRegs_18_T_11 @[block_division.scala 209:25]
    node _signs_18_T_1 = xor(signReg_82, io.sign_b[82]) @[block_division.scala 210:27]
    signs_1[18] <= _signs_18_T_1 @[block_division.scala 210:16]
    node _two_complement_18_T_7 = eq(signs_1[18], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_18_T_8 = cat(UInt<1>("h0"), dotProductRegs_1[18]) @[block_division.scala 213:16]
    node _two_complement_18_T_9 = not(_two_complement_18_T_8) @[block_division.scala 213:10]
    node _two_complement_18_T_10 = add(_two_complement_18_T_9, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_18_T_11 = tail(_two_complement_18_T_10, 1) @[block_division.scala 213:38]
    node _two_complement_18_T_12 = cat(UInt<1>("h0"), dotProductRegs_1[18]) @[block_division.scala 214:14]
    node _two_complement_18_T_13 = mux(_two_complement_18_T_7, _two_complement_18_T_11, _two_complement_18_T_12) @[block_division.scala 211:31]
    two_complement_1[18] <= _two_complement_18_T_13 @[block_division.scala 211:25]
    node _two_complement_buffer_18_T_1 = asSInt(two_complement_1[18]) @[block_division.scala 216:53]
    two_complement_buffer_1[18] <= _two_complement_buffer_18_T_1 @[block_division.scala 216:32]
    reg multiplierReg_83 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_83 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_83 <= io.sign_a[83] @[block_division.scala 206:15]
    multiplierReg_83 <= io.man_a[83] @[block_division.scala 207:21]
    node multiplication_83 = mul(multiplierReg_83, io.man_b[83]) @[block_division.scala 208:42]
    node _dotProductRegs_19_T_6 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_19_T_7 = tail(_dotProductRegs_19_T_6, 1) @[block_division.scala 209:60]
    node _dotProductRegs_19_T_8 = gt(multiplication_83, _dotProductRegs_19_T_7) @[block_division.scala 209:47]
    node _dotProductRegs_19_T_9 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_19_T_10 = tail(_dotProductRegs_19_T_9, 1) @[block_division.scala 209:78]
    node _dotProductRegs_19_T_11 = mux(_dotProductRegs_19_T_8, _dotProductRegs_19_T_10, multiplication_83) @[block_division.scala 209:31]
    dotProductRegs_1[19] <= _dotProductRegs_19_T_11 @[block_division.scala 209:25]
    node _signs_19_T_1 = xor(signReg_83, io.sign_b[83]) @[block_division.scala 210:27]
    signs_1[19] <= _signs_19_T_1 @[block_division.scala 210:16]
    node _two_complement_19_T_7 = eq(signs_1[19], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_19_T_8 = cat(UInt<1>("h0"), dotProductRegs_1[19]) @[block_division.scala 213:16]
    node _two_complement_19_T_9 = not(_two_complement_19_T_8) @[block_division.scala 213:10]
    node _two_complement_19_T_10 = add(_two_complement_19_T_9, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_19_T_11 = tail(_two_complement_19_T_10, 1) @[block_division.scala 213:38]
    node _two_complement_19_T_12 = cat(UInt<1>("h0"), dotProductRegs_1[19]) @[block_division.scala 214:14]
    node _two_complement_19_T_13 = mux(_two_complement_19_T_7, _two_complement_19_T_11, _two_complement_19_T_12) @[block_division.scala 211:31]
    two_complement_1[19] <= _two_complement_19_T_13 @[block_division.scala 211:25]
    node _two_complement_buffer_19_T_1 = asSInt(two_complement_1[19]) @[block_division.scala 216:53]
    two_complement_buffer_1[19] <= _two_complement_buffer_19_T_1 @[block_division.scala 216:32]
    reg multiplierReg_84 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_84 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_84 <= io.sign_a[84] @[block_division.scala 206:15]
    multiplierReg_84 <= io.man_a[84] @[block_division.scala 207:21]
    node multiplication_84 = mul(multiplierReg_84, io.man_b[84]) @[block_division.scala 208:42]
    node _dotProductRegs_20_T_6 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_20_T_7 = tail(_dotProductRegs_20_T_6, 1) @[block_division.scala 209:60]
    node _dotProductRegs_20_T_8 = gt(multiplication_84, _dotProductRegs_20_T_7) @[block_division.scala 209:47]
    node _dotProductRegs_20_T_9 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_20_T_10 = tail(_dotProductRegs_20_T_9, 1) @[block_division.scala 209:78]
    node _dotProductRegs_20_T_11 = mux(_dotProductRegs_20_T_8, _dotProductRegs_20_T_10, multiplication_84) @[block_division.scala 209:31]
    dotProductRegs_1[20] <= _dotProductRegs_20_T_11 @[block_division.scala 209:25]
    node _signs_20_T_1 = xor(signReg_84, io.sign_b[84]) @[block_division.scala 210:27]
    signs_1[20] <= _signs_20_T_1 @[block_division.scala 210:16]
    node _two_complement_20_T_7 = eq(signs_1[20], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_20_T_8 = cat(UInt<1>("h0"), dotProductRegs_1[20]) @[block_division.scala 213:16]
    node _two_complement_20_T_9 = not(_two_complement_20_T_8) @[block_division.scala 213:10]
    node _two_complement_20_T_10 = add(_two_complement_20_T_9, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_20_T_11 = tail(_two_complement_20_T_10, 1) @[block_division.scala 213:38]
    node _two_complement_20_T_12 = cat(UInt<1>("h0"), dotProductRegs_1[20]) @[block_division.scala 214:14]
    node _two_complement_20_T_13 = mux(_two_complement_20_T_7, _two_complement_20_T_11, _two_complement_20_T_12) @[block_division.scala 211:31]
    two_complement_1[20] <= _two_complement_20_T_13 @[block_division.scala 211:25]
    node _two_complement_buffer_20_T_1 = asSInt(two_complement_1[20]) @[block_division.scala 216:53]
    two_complement_buffer_1[20] <= _two_complement_buffer_20_T_1 @[block_division.scala 216:32]
    reg multiplierReg_85 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_85 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_85 <= io.sign_a[85] @[block_division.scala 206:15]
    multiplierReg_85 <= io.man_a[85] @[block_division.scala 207:21]
    node multiplication_85 = mul(multiplierReg_85, io.man_b[85]) @[block_division.scala 208:42]
    node _dotProductRegs_21_T_6 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_21_T_7 = tail(_dotProductRegs_21_T_6, 1) @[block_division.scala 209:60]
    node _dotProductRegs_21_T_8 = gt(multiplication_85, _dotProductRegs_21_T_7) @[block_division.scala 209:47]
    node _dotProductRegs_21_T_9 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_21_T_10 = tail(_dotProductRegs_21_T_9, 1) @[block_division.scala 209:78]
    node _dotProductRegs_21_T_11 = mux(_dotProductRegs_21_T_8, _dotProductRegs_21_T_10, multiplication_85) @[block_division.scala 209:31]
    dotProductRegs_1[21] <= _dotProductRegs_21_T_11 @[block_division.scala 209:25]
    node _signs_21_T_1 = xor(signReg_85, io.sign_b[85]) @[block_division.scala 210:27]
    signs_1[21] <= _signs_21_T_1 @[block_division.scala 210:16]
    node _two_complement_21_T_7 = eq(signs_1[21], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_21_T_8 = cat(UInt<1>("h0"), dotProductRegs_1[21]) @[block_division.scala 213:16]
    node _two_complement_21_T_9 = not(_two_complement_21_T_8) @[block_division.scala 213:10]
    node _two_complement_21_T_10 = add(_two_complement_21_T_9, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_21_T_11 = tail(_two_complement_21_T_10, 1) @[block_division.scala 213:38]
    node _two_complement_21_T_12 = cat(UInt<1>("h0"), dotProductRegs_1[21]) @[block_division.scala 214:14]
    node _two_complement_21_T_13 = mux(_two_complement_21_T_7, _two_complement_21_T_11, _two_complement_21_T_12) @[block_division.scala 211:31]
    two_complement_1[21] <= _two_complement_21_T_13 @[block_division.scala 211:25]
    node _two_complement_buffer_21_T_1 = asSInt(two_complement_1[21]) @[block_division.scala 216:53]
    two_complement_buffer_1[21] <= _two_complement_buffer_21_T_1 @[block_division.scala 216:32]
    reg multiplierReg_86 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_86 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_86 <= io.sign_a[86] @[block_division.scala 206:15]
    multiplierReg_86 <= io.man_a[86] @[block_division.scala 207:21]
    node multiplication_86 = mul(multiplierReg_86, io.man_b[86]) @[block_division.scala 208:42]
    node _dotProductRegs_22_T_6 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_22_T_7 = tail(_dotProductRegs_22_T_6, 1) @[block_division.scala 209:60]
    node _dotProductRegs_22_T_8 = gt(multiplication_86, _dotProductRegs_22_T_7) @[block_division.scala 209:47]
    node _dotProductRegs_22_T_9 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_22_T_10 = tail(_dotProductRegs_22_T_9, 1) @[block_division.scala 209:78]
    node _dotProductRegs_22_T_11 = mux(_dotProductRegs_22_T_8, _dotProductRegs_22_T_10, multiplication_86) @[block_division.scala 209:31]
    dotProductRegs_1[22] <= _dotProductRegs_22_T_11 @[block_division.scala 209:25]
    node _signs_22_T_1 = xor(signReg_86, io.sign_b[86]) @[block_division.scala 210:27]
    signs_1[22] <= _signs_22_T_1 @[block_division.scala 210:16]
    node _two_complement_22_T_7 = eq(signs_1[22], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_22_T_8 = cat(UInt<1>("h0"), dotProductRegs_1[22]) @[block_division.scala 213:16]
    node _two_complement_22_T_9 = not(_two_complement_22_T_8) @[block_division.scala 213:10]
    node _two_complement_22_T_10 = add(_two_complement_22_T_9, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_22_T_11 = tail(_two_complement_22_T_10, 1) @[block_division.scala 213:38]
    node _two_complement_22_T_12 = cat(UInt<1>("h0"), dotProductRegs_1[22]) @[block_division.scala 214:14]
    node _two_complement_22_T_13 = mux(_two_complement_22_T_7, _two_complement_22_T_11, _two_complement_22_T_12) @[block_division.scala 211:31]
    two_complement_1[22] <= _two_complement_22_T_13 @[block_division.scala 211:25]
    node _two_complement_buffer_22_T_1 = asSInt(two_complement_1[22]) @[block_division.scala 216:53]
    two_complement_buffer_1[22] <= _two_complement_buffer_22_T_1 @[block_division.scala 216:32]
    reg multiplierReg_87 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_87 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_87 <= io.sign_a[87] @[block_division.scala 206:15]
    multiplierReg_87 <= io.man_a[87] @[block_division.scala 207:21]
    node multiplication_87 = mul(multiplierReg_87, io.man_b[87]) @[block_division.scala 208:42]
    node _dotProductRegs_23_T_6 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_23_T_7 = tail(_dotProductRegs_23_T_6, 1) @[block_division.scala 209:60]
    node _dotProductRegs_23_T_8 = gt(multiplication_87, _dotProductRegs_23_T_7) @[block_division.scala 209:47]
    node _dotProductRegs_23_T_9 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_23_T_10 = tail(_dotProductRegs_23_T_9, 1) @[block_division.scala 209:78]
    node _dotProductRegs_23_T_11 = mux(_dotProductRegs_23_T_8, _dotProductRegs_23_T_10, multiplication_87) @[block_division.scala 209:31]
    dotProductRegs_1[23] <= _dotProductRegs_23_T_11 @[block_division.scala 209:25]
    node _signs_23_T_1 = xor(signReg_87, io.sign_b[87]) @[block_division.scala 210:27]
    signs_1[23] <= _signs_23_T_1 @[block_division.scala 210:16]
    node _two_complement_23_T_7 = eq(signs_1[23], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_23_T_8 = cat(UInt<1>("h0"), dotProductRegs_1[23]) @[block_division.scala 213:16]
    node _two_complement_23_T_9 = not(_two_complement_23_T_8) @[block_division.scala 213:10]
    node _two_complement_23_T_10 = add(_two_complement_23_T_9, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_23_T_11 = tail(_two_complement_23_T_10, 1) @[block_division.scala 213:38]
    node _two_complement_23_T_12 = cat(UInt<1>("h0"), dotProductRegs_1[23]) @[block_division.scala 214:14]
    node _two_complement_23_T_13 = mux(_two_complement_23_T_7, _two_complement_23_T_11, _two_complement_23_T_12) @[block_division.scala 211:31]
    two_complement_1[23] <= _two_complement_23_T_13 @[block_division.scala 211:25]
    node _two_complement_buffer_23_T_1 = asSInt(two_complement_1[23]) @[block_division.scala 216:53]
    two_complement_buffer_1[23] <= _two_complement_buffer_23_T_1 @[block_division.scala 216:32]
    reg multiplierReg_88 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_88 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_88 <= io.sign_a[88] @[block_division.scala 206:15]
    multiplierReg_88 <= io.man_a[88] @[block_division.scala 207:21]
    node multiplication_88 = mul(multiplierReg_88, io.man_b[88]) @[block_division.scala 208:42]
    node _dotProductRegs_24_T_6 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_24_T_7 = tail(_dotProductRegs_24_T_6, 1) @[block_division.scala 209:60]
    node _dotProductRegs_24_T_8 = gt(multiplication_88, _dotProductRegs_24_T_7) @[block_division.scala 209:47]
    node _dotProductRegs_24_T_9 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_24_T_10 = tail(_dotProductRegs_24_T_9, 1) @[block_division.scala 209:78]
    node _dotProductRegs_24_T_11 = mux(_dotProductRegs_24_T_8, _dotProductRegs_24_T_10, multiplication_88) @[block_division.scala 209:31]
    dotProductRegs_1[24] <= _dotProductRegs_24_T_11 @[block_division.scala 209:25]
    node _signs_24_T_1 = xor(signReg_88, io.sign_b[88]) @[block_division.scala 210:27]
    signs_1[24] <= _signs_24_T_1 @[block_division.scala 210:16]
    node _two_complement_24_T_7 = eq(signs_1[24], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_24_T_8 = cat(UInt<1>("h0"), dotProductRegs_1[24]) @[block_division.scala 213:16]
    node _two_complement_24_T_9 = not(_two_complement_24_T_8) @[block_division.scala 213:10]
    node _two_complement_24_T_10 = add(_two_complement_24_T_9, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_24_T_11 = tail(_two_complement_24_T_10, 1) @[block_division.scala 213:38]
    node _two_complement_24_T_12 = cat(UInt<1>("h0"), dotProductRegs_1[24]) @[block_division.scala 214:14]
    node _two_complement_24_T_13 = mux(_two_complement_24_T_7, _two_complement_24_T_11, _two_complement_24_T_12) @[block_division.scala 211:31]
    two_complement_1[24] <= _two_complement_24_T_13 @[block_division.scala 211:25]
    node _two_complement_buffer_24_T_1 = asSInt(two_complement_1[24]) @[block_division.scala 216:53]
    two_complement_buffer_1[24] <= _two_complement_buffer_24_T_1 @[block_division.scala 216:32]
    reg multiplierReg_89 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_89 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_89 <= io.sign_a[89] @[block_division.scala 206:15]
    multiplierReg_89 <= io.man_a[89] @[block_division.scala 207:21]
    node multiplication_89 = mul(multiplierReg_89, io.man_b[89]) @[block_division.scala 208:42]
    node _dotProductRegs_25_T_6 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_25_T_7 = tail(_dotProductRegs_25_T_6, 1) @[block_division.scala 209:60]
    node _dotProductRegs_25_T_8 = gt(multiplication_89, _dotProductRegs_25_T_7) @[block_division.scala 209:47]
    node _dotProductRegs_25_T_9 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_25_T_10 = tail(_dotProductRegs_25_T_9, 1) @[block_division.scala 209:78]
    node _dotProductRegs_25_T_11 = mux(_dotProductRegs_25_T_8, _dotProductRegs_25_T_10, multiplication_89) @[block_division.scala 209:31]
    dotProductRegs_1[25] <= _dotProductRegs_25_T_11 @[block_division.scala 209:25]
    node _signs_25_T_1 = xor(signReg_89, io.sign_b[89]) @[block_division.scala 210:27]
    signs_1[25] <= _signs_25_T_1 @[block_division.scala 210:16]
    node _two_complement_25_T_7 = eq(signs_1[25], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_25_T_8 = cat(UInt<1>("h0"), dotProductRegs_1[25]) @[block_division.scala 213:16]
    node _two_complement_25_T_9 = not(_two_complement_25_T_8) @[block_division.scala 213:10]
    node _two_complement_25_T_10 = add(_two_complement_25_T_9, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_25_T_11 = tail(_two_complement_25_T_10, 1) @[block_division.scala 213:38]
    node _two_complement_25_T_12 = cat(UInt<1>("h0"), dotProductRegs_1[25]) @[block_division.scala 214:14]
    node _two_complement_25_T_13 = mux(_two_complement_25_T_7, _two_complement_25_T_11, _two_complement_25_T_12) @[block_division.scala 211:31]
    two_complement_1[25] <= _two_complement_25_T_13 @[block_division.scala 211:25]
    node _two_complement_buffer_25_T_1 = asSInt(two_complement_1[25]) @[block_division.scala 216:53]
    two_complement_buffer_1[25] <= _two_complement_buffer_25_T_1 @[block_division.scala 216:32]
    reg multiplierReg_90 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_90 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_90 <= io.sign_a[90] @[block_division.scala 206:15]
    multiplierReg_90 <= io.man_a[90] @[block_division.scala 207:21]
    node multiplication_90 = mul(multiplierReg_90, io.man_b[90]) @[block_division.scala 208:42]
    node _dotProductRegs_26_T_6 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_26_T_7 = tail(_dotProductRegs_26_T_6, 1) @[block_division.scala 209:60]
    node _dotProductRegs_26_T_8 = gt(multiplication_90, _dotProductRegs_26_T_7) @[block_division.scala 209:47]
    node _dotProductRegs_26_T_9 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_26_T_10 = tail(_dotProductRegs_26_T_9, 1) @[block_division.scala 209:78]
    node _dotProductRegs_26_T_11 = mux(_dotProductRegs_26_T_8, _dotProductRegs_26_T_10, multiplication_90) @[block_division.scala 209:31]
    dotProductRegs_1[26] <= _dotProductRegs_26_T_11 @[block_division.scala 209:25]
    node _signs_26_T_1 = xor(signReg_90, io.sign_b[90]) @[block_division.scala 210:27]
    signs_1[26] <= _signs_26_T_1 @[block_division.scala 210:16]
    node _two_complement_26_T_7 = eq(signs_1[26], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_26_T_8 = cat(UInt<1>("h0"), dotProductRegs_1[26]) @[block_division.scala 213:16]
    node _two_complement_26_T_9 = not(_two_complement_26_T_8) @[block_division.scala 213:10]
    node _two_complement_26_T_10 = add(_two_complement_26_T_9, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_26_T_11 = tail(_two_complement_26_T_10, 1) @[block_division.scala 213:38]
    node _two_complement_26_T_12 = cat(UInt<1>("h0"), dotProductRegs_1[26]) @[block_division.scala 214:14]
    node _two_complement_26_T_13 = mux(_two_complement_26_T_7, _two_complement_26_T_11, _two_complement_26_T_12) @[block_division.scala 211:31]
    two_complement_1[26] <= _two_complement_26_T_13 @[block_division.scala 211:25]
    node _two_complement_buffer_26_T_1 = asSInt(two_complement_1[26]) @[block_division.scala 216:53]
    two_complement_buffer_1[26] <= _two_complement_buffer_26_T_1 @[block_division.scala 216:32]
    reg multiplierReg_91 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_91 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_91 <= io.sign_a[91] @[block_division.scala 206:15]
    multiplierReg_91 <= io.man_a[91] @[block_division.scala 207:21]
    node multiplication_91 = mul(multiplierReg_91, io.man_b[91]) @[block_division.scala 208:42]
    node _dotProductRegs_27_T_6 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_27_T_7 = tail(_dotProductRegs_27_T_6, 1) @[block_division.scala 209:60]
    node _dotProductRegs_27_T_8 = gt(multiplication_91, _dotProductRegs_27_T_7) @[block_division.scala 209:47]
    node _dotProductRegs_27_T_9 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_27_T_10 = tail(_dotProductRegs_27_T_9, 1) @[block_division.scala 209:78]
    node _dotProductRegs_27_T_11 = mux(_dotProductRegs_27_T_8, _dotProductRegs_27_T_10, multiplication_91) @[block_division.scala 209:31]
    dotProductRegs_1[27] <= _dotProductRegs_27_T_11 @[block_division.scala 209:25]
    node _signs_27_T_1 = xor(signReg_91, io.sign_b[91]) @[block_division.scala 210:27]
    signs_1[27] <= _signs_27_T_1 @[block_division.scala 210:16]
    node _two_complement_27_T_7 = eq(signs_1[27], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_27_T_8 = cat(UInt<1>("h0"), dotProductRegs_1[27]) @[block_division.scala 213:16]
    node _two_complement_27_T_9 = not(_two_complement_27_T_8) @[block_division.scala 213:10]
    node _two_complement_27_T_10 = add(_two_complement_27_T_9, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_27_T_11 = tail(_two_complement_27_T_10, 1) @[block_division.scala 213:38]
    node _two_complement_27_T_12 = cat(UInt<1>("h0"), dotProductRegs_1[27]) @[block_division.scala 214:14]
    node _two_complement_27_T_13 = mux(_two_complement_27_T_7, _two_complement_27_T_11, _two_complement_27_T_12) @[block_division.scala 211:31]
    two_complement_1[27] <= _two_complement_27_T_13 @[block_division.scala 211:25]
    node _two_complement_buffer_27_T_1 = asSInt(two_complement_1[27]) @[block_division.scala 216:53]
    two_complement_buffer_1[27] <= _two_complement_buffer_27_T_1 @[block_division.scala 216:32]
    reg multiplierReg_92 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_92 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_92 <= io.sign_a[92] @[block_division.scala 206:15]
    multiplierReg_92 <= io.man_a[92] @[block_division.scala 207:21]
    node multiplication_92 = mul(multiplierReg_92, io.man_b[92]) @[block_division.scala 208:42]
    node _dotProductRegs_28_T_6 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_28_T_7 = tail(_dotProductRegs_28_T_6, 1) @[block_division.scala 209:60]
    node _dotProductRegs_28_T_8 = gt(multiplication_92, _dotProductRegs_28_T_7) @[block_division.scala 209:47]
    node _dotProductRegs_28_T_9 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_28_T_10 = tail(_dotProductRegs_28_T_9, 1) @[block_division.scala 209:78]
    node _dotProductRegs_28_T_11 = mux(_dotProductRegs_28_T_8, _dotProductRegs_28_T_10, multiplication_92) @[block_division.scala 209:31]
    dotProductRegs_1[28] <= _dotProductRegs_28_T_11 @[block_division.scala 209:25]
    node _signs_28_T_1 = xor(signReg_92, io.sign_b[92]) @[block_division.scala 210:27]
    signs_1[28] <= _signs_28_T_1 @[block_division.scala 210:16]
    node _two_complement_28_T_7 = eq(signs_1[28], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_28_T_8 = cat(UInt<1>("h0"), dotProductRegs_1[28]) @[block_division.scala 213:16]
    node _two_complement_28_T_9 = not(_two_complement_28_T_8) @[block_division.scala 213:10]
    node _two_complement_28_T_10 = add(_two_complement_28_T_9, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_28_T_11 = tail(_two_complement_28_T_10, 1) @[block_division.scala 213:38]
    node _two_complement_28_T_12 = cat(UInt<1>("h0"), dotProductRegs_1[28]) @[block_division.scala 214:14]
    node _two_complement_28_T_13 = mux(_two_complement_28_T_7, _two_complement_28_T_11, _two_complement_28_T_12) @[block_division.scala 211:31]
    two_complement_1[28] <= _two_complement_28_T_13 @[block_division.scala 211:25]
    node _two_complement_buffer_28_T_1 = asSInt(two_complement_1[28]) @[block_division.scala 216:53]
    two_complement_buffer_1[28] <= _two_complement_buffer_28_T_1 @[block_division.scala 216:32]
    reg multiplierReg_93 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_93 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_93 <= io.sign_a[93] @[block_division.scala 206:15]
    multiplierReg_93 <= io.man_a[93] @[block_division.scala 207:21]
    node multiplication_93 = mul(multiplierReg_93, io.man_b[93]) @[block_division.scala 208:42]
    node _dotProductRegs_29_T_6 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_29_T_7 = tail(_dotProductRegs_29_T_6, 1) @[block_division.scala 209:60]
    node _dotProductRegs_29_T_8 = gt(multiplication_93, _dotProductRegs_29_T_7) @[block_division.scala 209:47]
    node _dotProductRegs_29_T_9 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_29_T_10 = tail(_dotProductRegs_29_T_9, 1) @[block_division.scala 209:78]
    node _dotProductRegs_29_T_11 = mux(_dotProductRegs_29_T_8, _dotProductRegs_29_T_10, multiplication_93) @[block_division.scala 209:31]
    dotProductRegs_1[29] <= _dotProductRegs_29_T_11 @[block_division.scala 209:25]
    node _signs_29_T_1 = xor(signReg_93, io.sign_b[93]) @[block_division.scala 210:27]
    signs_1[29] <= _signs_29_T_1 @[block_division.scala 210:16]
    node _two_complement_29_T_7 = eq(signs_1[29], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_29_T_8 = cat(UInt<1>("h0"), dotProductRegs_1[29]) @[block_division.scala 213:16]
    node _two_complement_29_T_9 = not(_two_complement_29_T_8) @[block_division.scala 213:10]
    node _two_complement_29_T_10 = add(_two_complement_29_T_9, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_29_T_11 = tail(_two_complement_29_T_10, 1) @[block_division.scala 213:38]
    node _two_complement_29_T_12 = cat(UInt<1>("h0"), dotProductRegs_1[29]) @[block_division.scala 214:14]
    node _two_complement_29_T_13 = mux(_two_complement_29_T_7, _two_complement_29_T_11, _two_complement_29_T_12) @[block_division.scala 211:31]
    two_complement_1[29] <= _two_complement_29_T_13 @[block_division.scala 211:25]
    node _two_complement_buffer_29_T_1 = asSInt(two_complement_1[29]) @[block_division.scala 216:53]
    two_complement_buffer_1[29] <= _two_complement_buffer_29_T_1 @[block_division.scala 216:32]
    reg multiplierReg_94 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_94 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_94 <= io.sign_a[94] @[block_division.scala 206:15]
    multiplierReg_94 <= io.man_a[94] @[block_division.scala 207:21]
    node multiplication_94 = mul(multiplierReg_94, io.man_b[94]) @[block_division.scala 208:42]
    node _dotProductRegs_30_T_6 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_30_T_7 = tail(_dotProductRegs_30_T_6, 1) @[block_division.scala 209:60]
    node _dotProductRegs_30_T_8 = gt(multiplication_94, _dotProductRegs_30_T_7) @[block_division.scala 209:47]
    node _dotProductRegs_30_T_9 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_30_T_10 = tail(_dotProductRegs_30_T_9, 1) @[block_division.scala 209:78]
    node _dotProductRegs_30_T_11 = mux(_dotProductRegs_30_T_8, _dotProductRegs_30_T_10, multiplication_94) @[block_division.scala 209:31]
    dotProductRegs_1[30] <= _dotProductRegs_30_T_11 @[block_division.scala 209:25]
    node _signs_30_T_1 = xor(signReg_94, io.sign_b[94]) @[block_division.scala 210:27]
    signs_1[30] <= _signs_30_T_1 @[block_division.scala 210:16]
    node _two_complement_30_T_7 = eq(signs_1[30], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_30_T_8 = cat(UInt<1>("h0"), dotProductRegs_1[30]) @[block_division.scala 213:16]
    node _two_complement_30_T_9 = not(_two_complement_30_T_8) @[block_division.scala 213:10]
    node _two_complement_30_T_10 = add(_two_complement_30_T_9, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_30_T_11 = tail(_two_complement_30_T_10, 1) @[block_division.scala 213:38]
    node _two_complement_30_T_12 = cat(UInt<1>("h0"), dotProductRegs_1[30]) @[block_division.scala 214:14]
    node _two_complement_30_T_13 = mux(_two_complement_30_T_7, _two_complement_30_T_11, _two_complement_30_T_12) @[block_division.scala 211:31]
    two_complement_1[30] <= _two_complement_30_T_13 @[block_division.scala 211:25]
    node _two_complement_buffer_30_T_1 = asSInt(two_complement_1[30]) @[block_division.scala 216:53]
    two_complement_buffer_1[30] <= _two_complement_buffer_30_T_1 @[block_division.scala 216:32]
    reg multiplierReg_95 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_95 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_95 <= io.sign_a[95] @[block_division.scala 206:15]
    multiplierReg_95 <= io.man_a[95] @[block_division.scala 207:21]
    node multiplication_95 = mul(multiplierReg_95, io.man_b[95]) @[block_division.scala 208:42]
    node _dotProductRegs_31_T_6 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_31_T_7 = tail(_dotProductRegs_31_T_6, 1) @[block_division.scala 209:60]
    node _dotProductRegs_31_T_8 = gt(multiplication_95, _dotProductRegs_31_T_7) @[block_division.scala 209:47]
    node _dotProductRegs_31_T_9 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_31_T_10 = tail(_dotProductRegs_31_T_9, 1) @[block_division.scala 209:78]
    node _dotProductRegs_31_T_11 = mux(_dotProductRegs_31_T_8, _dotProductRegs_31_T_10, multiplication_95) @[block_division.scala 209:31]
    dotProductRegs_1[31] <= _dotProductRegs_31_T_11 @[block_division.scala 209:25]
    node _signs_31_T_1 = xor(signReg_95, io.sign_b[95]) @[block_division.scala 210:27]
    signs_1[31] <= _signs_31_T_1 @[block_division.scala 210:16]
    node _two_complement_31_T_7 = eq(signs_1[31], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_31_T_8 = cat(UInt<1>("h0"), dotProductRegs_1[31]) @[block_division.scala 213:16]
    node _two_complement_31_T_9 = not(_two_complement_31_T_8) @[block_division.scala 213:10]
    node _two_complement_31_T_10 = add(_two_complement_31_T_9, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_31_T_11 = tail(_two_complement_31_T_10, 1) @[block_division.scala 213:38]
    node _two_complement_31_T_12 = cat(UInt<1>("h0"), dotProductRegs_1[31]) @[block_division.scala 214:14]
    node _two_complement_31_T_13 = mux(_two_complement_31_T_7, _two_complement_31_T_11, _two_complement_31_T_12) @[block_division.scala 211:31]
    two_complement_1[31] <= _two_complement_31_T_13 @[block_division.scala 211:25]
    node _two_complement_buffer_31_T_1 = asSInt(two_complement_1[31]) @[block_division.scala 216:53]
    two_complement_buffer_1[31] <= _two_complement_buffer_31_T_1 @[block_division.scala 216:32]
    reg multiplierReg_96 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_96 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_96 <= io.sign_a[96] @[block_division.scala 206:15]
    multiplierReg_96 <= io.man_a[96] @[block_division.scala 207:21]
    node multiplication_96 = mul(multiplierReg_96, io.man_b[96]) @[block_division.scala 208:42]
    node _dotProductRegs_32_T_6 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_32_T_7 = tail(_dotProductRegs_32_T_6, 1) @[block_division.scala 209:60]
    node _dotProductRegs_32_T_8 = gt(multiplication_96, _dotProductRegs_32_T_7) @[block_division.scala 209:47]
    node _dotProductRegs_32_T_9 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_32_T_10 = tail(_dotProductRegs_32_T_9, 1) @[block_division.scala 209:78]
    node _dotProductRegs_32_T_11 = mux(_dotProductRegs_32_T_8, _dotProductRegs_32_T_10, multiplication_96) @[block_division.scala 209:31]
    dotProductRegs_1[32] <= _dotProductRegs_32_T_11 @[block_division.scala 209:25]
    node _signs_32_T_1 = xor(signReg_96, io.sign_b[96]) @[block_division.scala 210:27]
    signs_1[32] <= _signs_32_T_1 @[block_division.scala 210:16]
    node _two_complement_32_T_7 = eq(signs_1[32], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_32_T_8 = cat(UInt<1>("h0"), dotProductRegs_1[32]) @[block_division.scala 213:16]
    node _two_complement_32_T_9 = not(_two_complement_32_T_8) @[block_division.scala 213:10]
    node _two_complement_32_T_10 = add(_two_complement_32_T_9, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_32_T_11 = tail(_two_complement_32_T_10, 1) @[block_division.scala 213:38]
    node _two_complement_32_T_12 = cat(UInt<1>("h0"), dotProductRegs_1[32]) @[block_division.scala 214:14]
    node _two_complement_32_T_13 = mux(_two_complement_32_T_7, _two_complement_32_T_11, _two_complement_32_T_12) @[block_division.scala 211:31]
    two_complement_1[32] <= _two_complement_32_T_13 @[block_division.scala 211:25]
    node _two_complement_buffer_32_T_1 = asSInt(two_complement_1[32]) @[block_division.scala 216:53]
    two_complement_buffer_1[32] <= _two_complement_buffer_32_T_1 @[block_division.scala 216:32]
    reg multiplierReg_97 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_97 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_97 <= io.sign_a[97] @[block_division.scala 206:15]
    multiplierReg_97 <= io.man_a[97] @[block_division.scala 207:21]
    node multiplication_97 = mul(multiplierReg_97, io.man_b[97]) @[block_division.scala 208:42]
    node _dotProductRegs_33_T_6 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_33_T_7 = tail(_dotProductRegs_33_T_6, 1) @[block_division.scala 209:60]
    node _dotProductRegs_33_T_8 = gt(multiplication_97, _dotProductRegs_33_T_7) @[block_division.scala 209:47]
    node _dotProductRegs_33_T_9 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_33_T_10 = tail(_dotProductRegs_33_T_9, 1) @[block_division.scala 209:78]
    node _dotProductRegs_33_T_11 = mux(_dotProductRegs_33_T_8, _dotProductRegs_33_T_10, multiplication_97) @[block_division.scala 209:31]
    dotProductRegs_1[33] <= _dotProductRegs_33_T_11 @[block_division.scala 209:25]
    node _signs_33_T_1 = xor(signReg_97, io.sign_b[97]) @[block_division.scala 210:27]
    signs_1[33] <= _signs_33_T_1 @[block_division.scala 210:16]
    node _two_complement_33_T_7 = eq(signs_1[33], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_33_T_8 = cat(UInt<1>("h0"), dotProductRegs_1[33]) @[block_division.scala 213:16]
    node _two_complement_33_T_9 = not(_two_complement_33_T_8) @[block_division.scala 213:10]
    node _two_complement_33_T_10 = add(_two_complement_33_T_9, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_33_T_11 = tail(_two_complement_33_T_10, 1) @[block_division.scala 213:38]
    node _two_complement_33_T_12 = cat(UInt<1>("h0"), dotProductRegs_1[33]) @[block_division.scala 214:14]
    node _two_complement_33_T_13 = mux(_two_complement_33_T_7, _two_complement_33_T_11, _two_complement_33_T_12) @[block_division.scala 211:31]
    two_complement_1[33] <= _two_complement_33_T_13 @[block_division.scala 211:25]
    node _two_complement_buffer_33_T_1 = asSInt(two_complement_1[33]) @[block_division.scala 216:53]
    two_complement_buffer_1[33] <= _two_complement_buffer_33_T_1 @[block_division.scala 216:32]
    reg multiplierReg_98 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_98 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_98 <= io.sign_a[98] @[block_division.scala 206:15]
    multiplierReg_98 <= io.man_a[98] @[block_division.scala 207:21]
    node multiplication_98 = mul(multiplierReg_98, io.man_b[98]) @[block_division.scala 208:42]
    node _dotProductRegs_34_T_6 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_34_T_7 = tail(_dotProductRegs_34_T_6, 1) @[block_division.scala 209:60]
    node _dotProductRegs_34_T_8 = gt(multiplication_98, _dotProductRegs_34_T_7) @[block_division.scala 209:47]
    node _dotProductRegs_34_T_9 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_34_T_10 = tail(_dotProductRegs_34_T_9, 1) @[block_division.scala 209:78]
    node _dotProductRegs_34_T_11 = mux(_dotProductRegs_34_T_8, _dotProductRegs_34_T_10, multiplication_98) @[block_division.scala 209:31]
    dotProductRegs_1[34] <= _dotProductRegs_34_T_11 @[block_division.scala 209:25]
    node _signs_34_T_1 = xor(signReg_98, io.sign_b[98]) @[block_division.scala 210:27]
    signs_1[34] <= _signs_34_T_1 @[block_division.scala 210:16]
    node _two_complement_34_T_7 = eq(signs_1[34], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_34_T_8 = cat(UInt<1>("h0"), dotProductRegs_1[34]) @[block_division.scala 213:16]
    node _two_complement_34_T_9 = not(_two_complement_34_T_8) @[block_division.scala 213:10]
    node _two_complement_34_T_10 = add(_two_complement_34_T_9, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_34_T_11 = tail(_two_complement_34_T_10, 1) @[block_division.scala 213:38]
    node _two_complement_34_T_12 = cat(UInt<1>("h0"), dotProductRegs_1[34]) @[block_division.scala 214:14]
    node _two_complement_34_T_13 = mux(_two_complement_34_T_7, _two_complement_34_T_11, _two_complement_34_T_12) @[block_division.scala 211:31]
    two_complement_1[34] <= _two_complement_34_T_13 @[block_division.scala 211:25]
    node _two_complement_buffer_34_T_1 = asSInt(two_complement_1[34]) @[block_division.scala 216:53]
    two_complement_buffer_1[34] <= _two_complement_buffer_34_T_1 @[block_division.scala 216:32]
    reg multiplierReg_99 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_99 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_99 <= io.sign_a[99] @[block_division.scala 206:15]
    multiplierReg_99 <= io.man_a[99] @[block_division.scala 207:21]
    node multiplication_99 = mul(multiplierReg_99, io.man_b[99]) @[block_division.scala 208:42]
    node _dotProductRegs_35_T_6 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_35_T_7 = tail(_dotProductRegs_35_T_6, 1) @[block_division.scala 209:60]
    node _dotProductRegs_35_T_8 = gt(multiplication_99, _dotProductRegs_35_T_7) @[block_division.scala 209:47]
    node _dotProductRegs_35_T_9 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_35_T_10 = tail(_dotProductRegs_35_T_9, 1) @[block_division.scala 209:78]
    node _dotProductRegs_35_T_11 = mux(_dotProductRegs_35_T_8, _dotProductRegs_35_T_10, multiplication_99) @[block_division.scala 209:31]
    dotProductRegs_1[35] <= _dotProductRegs_35_T_11 @[block_division.scala 209:25]
    node _signs_35_T_1 = xor(signReg_99, io.sign_b[99]) @[block_division.scala 210:27]
    signs_1[35] <= _signs_35_T_1 @[block_division.scala 210:16]
    node _two_complement_35_T_7 = eq(signs_1[35], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_35_T_8 = cat(UInt<1>("h0"), dotProductRegs_1[35]) @[block_division.scala 213:16]
    node _two_complement_35_T_9 = not(_two_complement_35_T_8) @[block_division.scala 213:10]
    node _two_complement_35_T_10 = add(_two_complement_35_T_9, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_35_T_11 = tail(_two_complement_35_T_10, 1) @[block_division.scala 213:38]
    node _two_complement_35_T_12 = cat(UInt<1>("h0"), dotProductRegs_1[35]) @[block_division.scala 214:14]
    node _two_complement_35_T_13 = mux(_two_complement_35_T_7, _two_complement_35_T_11, _two_complement_35_T_12) @[block_division.scala 211:31]
    two_complement_1[35] <= _two_complement_35_T_13 @[block_division.scala 211:25]
    node _two_complement_buffer_35_T_1 = asSInt(two_complement_1[35]) @[block_division.scala 216:53]
    two_complement_buffer_1[35] <= _two_complement_buffer_35_T_1 @[block_division.scala 216:32]
    reg multiplierReg_100 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_100 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_100 <= io.sign_a[100] @[block_division.scala 206:15]
    multiplierReg_100 <= io.man_a[100] @[block_division.scala 207:21]
    node multiplication_100 = mul(multiplierReg_100, io.man_b[100]) @[block_division.scala 208:42]
    node _dotProductRegs_36_T_6 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_36_T_7 = tail(_dotProductRegs_36_T_6, 1) @[block_division.scala 209:60]
    node _dotProductRegs_36_T_8 = gt(multiplication_100, _dotProductRegs_36_T_7) @[block_division.scala 209:47]
    node _dotProductRegs_36_T_9 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_36_T_10 = tail(_dotProductRegs_36_T_9, 1) @[block_division.scala 209:78]
    node _dotProductRegs_36_T_11 = mux(_dotProductRegs_36_T_8, _dotProductRegs_36_T_10, multiplication_100) @[block_division.scala 209:31]
    dotProductRegs_1[36] <= _dotProductRegs_36_T_11 @[block_division.scala 209:25]
    node _signs_36_T_1 = xor(signReg_100, io.sign_b[100]) @[block_division.scala 210:27]
    signs_1[36] <= _signs_36_T_1 @[block_division.scala 210:16]
    node _two_complement_36_T_7 = eq(signs_1[36], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_36_T_8 = cat(UInt<1>("h0"), dotProductRegs_1[36]) @[block_division.scala 213:16]
    node _two_complement_36_T_9 = not(_two_complement_36_T_8) @[block_division.scala 213:10]
    node _two_complement_36_T_10 = add(_two_complement_36_T_9, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_36_T_11 = tail(_two_complement_36_T_10, 1) @[block_division.scala 213:38]
    node _two_complement_36_T_12 = cat(UInt<1>("h0"), dotProductRegs_1[36]) @[block_division.scala 214:14]
    node _two_complement_36_T_13 = mux(_two_complement_36_T_7, _two_complement_36_T_11, _two_complement_36_T_12) @[block_division.scala 211:31]
    two_complement_1[36] <= _two_complement_36_T_13 @[block_division.scala 211:25]
    node _two_complement_buffer_36_T_1 = asSInt(two_complement_1[36]) @[block_division.scala 216:53]
    two_complement_buffer_1[36] <= _two_complement_buffer_36_T_1 @[block_division.scala 216:32]
    reg multiplierReg_101 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_101 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_101 <= io.sign_a[101] @[block_division.scala 206:15]
    multiplierReg_101 <= io.man_a[101] @[block_division.scala 207:21]
    node multiplication_101 = mul(multiplierReg_101, io.man_b[101]) @[block_division.scala 208:42]
    node _dotProductRegs_37_T_6 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_37_T_7 = tail(_dotProductRegs_37_T_6, 1) @[block_division.scala 209:60]
    node _dotProductRegs_37_T_8 = gt(multiplication_101, _dotProductRegs_37_T_7) @[block_division.scala 209:47]
    node _dotProductRegs_37_T_9 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_37_T_10 = tail(_dotProductRegs_37_T_9, 1) @[block_division.scala 209:78]
    node _dotProductRegs_37_T_11 = mux(_dotProductRegs_37_T_8, _dotProductRegs_37_T_10, multiplication_101) @[block_division.scala 209:31]
    dotProductRegs_1[37] <= _dotProductRegs_37_T_11 @[block_division.scala 209:25]
    node _signs_37_T_1 = xor(signReg_101, io.sign_b[101]) @[block_division.scala 210:27]
    signs_1[37] <= _signs_37_T_1 @[block_division.scala 210:16]
    node _two_complement_37_T_7 = eq(signs_1[37], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_37_T_8 = cat(UInt<1>("h0"), dotProductRegs_1[37]) @[block_division.scala 213:16]
    node _two_complement_37_T_9 = not(_two_complement_37_T_8) @[block_division.scala 213:10]
    node _two_complement_37_T_10 = add(_two_complement_37_T_9, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_37_T_11 = tail(_two_complement_37_T_10, 1) @[block_division.scala 213:38]
    node _two_complement_37_T_12 = cat(UInt<1>("h0"), dotProductRegs_1[37]) @[block_division.scala 214:14]
    node _two_complement_37_T_13 = mux(_two_complement_37_T_7, _two_complement_37_T_11, _two_complement_37_T_12) @[block_division.scala 211:31]
    two_complement_1[37] <= _two_complement_37_T_13 @[block_division.scala 211:25]
    node _two_complement_buffer_37_T_1 = asSInt(two_complement_1[37]) @[block_division.scala 216:53]
    two_complement_buffer_1[37] <= _two_complement_buffer_37_T_1 @[block_division.scala 216:32]
    reg multiplierReg_102 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_102 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_102 <= io.sign_a[102] @[block_division.scala 206:15]
    multiplierReg_102 <= io.man_a[102] @[block_division.scala 207:21]
    node multiplication_102 = mul(multiplierReg_102, io.man_b[102]) @[block_division.scala 208:42]
    node _dotProductRegs_38_T_6 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_38_T_7 = tail(_dotProductRegs_38_T_6, 1) @[block_division.scala 209:60]
    node _dotProductRegs_38_T_8 = gt(multiplication_102, _dotProductRegs_38_T_7) @[block_division.scala 209:47]
    node _dotProductRegs_38_T_9 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_38_T_10 = tail(_dotProductRegs_38_T_9, 1) @[block_division.scala 209:78]
    node _dotProductRegs_38_T_11 = mux(_dotProductRegs_38_T_8, _dotProductRegs_38_T_10, multiplication_102) @[block_division.scala 209:31]
    dotProductRegs_1[38] <= _dotProductRegs_38_T_11 @[block_division.scala 209:25]
    node _signs_38_T_1 = xor(signReg_102, io.sign_b[102]) @[block_division.scala 210:27]
    signs_1[38] <= _signs_38_T_1 @[block_division.scala 210:16]
    node _two_complement_38_T_7 = eq(signs_1[38], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_38_T_8 = cat(UInt<1>("h0"), dotProductRegs_1[38]) @[block_division.scala 213:16]
    node _two_complement_38_T_9 = not(_two_complement_38_T_8) @[block_division.scala 213:10]
    node _two_complement_38_T_10 = add(_two_complement_38_T_9, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_38_T_11 = tail(_two_complement_38_T_10, 1) @[block_division.scala 213:38]
    node _two_complement_38_T_12 = cat(UInt<1>("h0"), dotProductRegs_1[38]) @[block_division.scala 214:14]
    node _two_complement_38_T_13 = mux(_two_complement_38_T_7, _two_complement_38_T_11, _two_complement_38_T_12) @[block_division.scala 211:31]
    two_complement_1[38] <= _two_complement_38_T_13 @[block_division.scala 211:25]
    node _two_complement_buffer_38_T_1 = asSInt(two_complement_1[38]) @[block_division.scala 216:53]
    two_complement_buffer_1[38] <= _two_complement_buffer_38_T_1 @[block_division.scala 216:32]
    reg multiplierReg_103 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_103 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_103 <= io.sign_a[103] @[block_division.scala 206:15]
    multiplierReg_103 <= io.man_a[103] @[block_division.scala 207:21]
    node multiplication_103 = mul(multiplierReg_103, io.man_b[103]) @[block_division.scala 208:42]
    node _dotProductRegs_39_T_6 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_39_T_7 = tail(_dotProductRegs_39_T_6, 1) @[block_division.scala 209:60]
    node _dotProductRegs_39_T_8 = gt(multiplication_103, _dotProductRegs_39_T_7) @[block_division.scala 209:47]
    node _dotProductRegs_39_T_9 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_39_T_10 = tail(_dotProductRegs_39_T_9, 1) @[block_division.scala 209:78]
    node _dotProductRegs_39_T_11 = mux(_dotProductRegs_39_T_8, _dotProductRegs_39_T_10, multiplication_103) @[block_division.scala 209:31]
    dotProductRegs_1[39] <= _dotProductRegs_39_T_11 @[block_division.scala 209:25]
    node _signs_39_T_1 = xor(signReg_103, io.sign_b[103]) @[block_division.scala 210:27]
    signs_1[39] <= _signs_39_T_1 @[block_division.scala 210:16]
    node _two_complement_39_T_7 = eq(signs_1[39], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_39_T_8 = cat(UInt<1>("h0"), dotProductRegs_1[39]) @[block_division.scala 213:16]
    node _two_complement_39_T_9 = not(_two_complement_39_T_8) @[block_division.scala 213:10]
    node _two_complement_39_T_10 = add(_two_complement_39_T_9, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_39_T_11 = tail(_two_complement_39_T_10, 1) @[block_division.scala 213:38]
    node _two_complement_39_T_12 = cat(UInt<1>("h0"), dotProductRegs_1[39]) @[block_division.scala 214:14]
    node _two_complement_39_T_13 = mux(_two_complement_39_T_7, _two_complement_39_T_11, _two_complement_39_T_12) @[block_division.scala 211:31]
    two_complement_1[39] <= _two_complement_39_T_13 @[block_division.scala 211:25]
    node _two_complement_buffer_39_T_1 = asSInt(two_complement_1[39]) @[block_division.scala 216:53]
    two_complement_buffer_1[39] <= _two_complement_buffer_39_T_1 @[block_division.scala 216:32]
    reg multiplierReg_104 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_104 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_104 <= io.sign_a[104] @[block_division.scala 206:15]
    multiplierReg_104 <= io.man_a[104] @[block_division.scala 207:21]
    node multiplication_104 = mul(multiplierReg_104, io.man_b[104]) @[block_division.scala 208:42]
    node _dotProductRegs_40_T_6 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_40_T_7 = tail(_dotProductRegs_40_T_6, 1) @[block_division.scala 209:60]
    node _dotProductRegs_40_T_8 = gt(multiplication_104, _dotProductRegs_40_T_7) @[block_division.scala 209:47]
    node _dotProductRegs_40_T_9 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_40_T_10 = tail(_dotProductRegs_40_T_9, 1) @[block_division.scala 209:78]
    node _dotProductRegs_40_T_11 = mux(_dotProductRegs_40_T_8, _dotProductRegs_40_T_10, multiplication_104) @[block_division.scala 209:31]
    dotProductRegs_1[40] <= _dotProductRegs_40_T_11 @[block_division.scala 209:25]
    node _signs_40_T_1 = xor(signReg_104, io.sign_b[104]) @[block_division.scala 210:27]
    signs_1[40] <= _signs_40_T_1 @[block_division.scala 210:16]
    node _two_complement_40_T_7 = eq(signs_1[40], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_40_T_8 = cat(UInt<1>("h0"), dotProductRegs_1[40]) @[block_division.scala 213:16]
    node _two_complement_40_T_9 = not(_two_complement_40_T_8) @[block_division.scala 213:10]
    node _two_complement_40_T_10 = add(_two_complement_40_T_9, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_40_T_11 = tail(_two_complement_40_T_10, 1) @[block_division.scala 213:38]
    node _two_complement_40_T_12 = cat(UInt<1>("h0"), dotProductRegs_1[40]) @[block_division.scala 214:14]
    node _two_complement_40_T_13 = mux(_two_complement_40_T_7, _two_complement_40_T_11, _two_complement_40_T_12) @[block_division.scala 211:31]
    two_complement_1[40] <= _two_complement_40_T_13 @[block_division.scala 211:25]
    node _two_complement_buffer_40_T_1 = asSInt(two_complement_1[40]) @[block_division.scala 216:53]
    two_complement_buffer_1[40] <= _two_complement_buffer_40_T_1 @[block_division.scala 216:32]
    reg multiplierReg_105 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_105 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_105 <= io.sign_a[105] @[block_division.scala 206:15]
    multiplierReg_105 <= io.man_a[105] @[block_division.scala 207:21]
    node multiplication_105 = mul(multiplierReg_105, io.man_b[105]) @[block_division.scala 208:42]
    node _dotProductRegs_41_T_6 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_41_T_7 = tail(_dotProductRegs_41_T_6, 1) @[block_division.scala 209:60]
    node _dotProductRegs_41_T_8 = gt(multiplication_105, _dotProductRegs_41_T_7) @[block_division.scala 209:47]
    node _dotProductRegs_41_T_9 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_41_T_10 = tail(_dotProductRegs_41_T_9, 1) @[block_division.scala 209:78]
    node _dotProductRegs_41_T_11 = mux(_dotProductRegs_41_T_8, _dotProductRegs_41_T_10, multiplication_105) @[block_division.scala 209:31]
    dotProductRegs_1[41] <= _dotProductRegs_41_T_11 @[block_division.scala 209:25]
    node _signs_41_T_1 = xor(signReg_105, io.sign_b[105]) @[block_division.scala 210:27]
    signs_1[41] <= _signs_41_T_1 @[block_division.scala 210:16]
    node _two_complement_41_T_7 = eq(signs_1[41], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_41_T_8 = cat(UInt<1>("h0"), dotProductRegs_1[41]) @[block_division.scala 213:16]
    node _two_complement_41_T_9 = not(_two_complement_41_T_8) @[block_division.scala 213:10]
    node _two_complement_41_T_10 = add(_two_complement_41_T_9, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_41_T_11 = tail(_two_complement_41_T_10, 1) @[block_division.scala 213:38]
    node _two_complement_41_T_12 = cat(UInt<1>("h0"), dotProductRegs_1[41]) @[block_division.scala 214:14]
    node _two_complement_41_T_13 = mux(_two_complement_41_T_7, _two_complement_41_T_11, _two_complement_41_T_12) @[block_division.scala 211:31]
    two_complement_1[41] <= _two_complement_41_T_13 @[block_division.scala 211:25]
    node _two_complement_buffer_41_T_1 = asSInt(two_complement_1[41]) @[block_division.scala 216:53]
    two_complement_buffer_1[41] <= _two_complement_buffer_41_T_1 @[block_division.scala 216:32]
    reg multiplierReg_106 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_106 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_106 <= io.sign_a[106] @[block_division.scala 206:15]
    multiplierReg_106 <= io.man_a[106] @[block_division.scala 207:21]
    node multiplication_106 = mul(multiplierReg_106, io.man_b[106]) @[block_division.scala 208:42]
    node _dotProductRegs_42_T_6 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_42_T_7 = tail(_dotProductRegs_42_T_6, 1) @[block_division.scala 209:60]
    node _dotProductRegs_42_T_8 = gt(multiplication_106, _dotProductRegs_42_T_7) @[block_division.scala 209:47]
    node _dotProductRegs_42_T_9 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_42_T_10 = tail(_dotProductRegs_42_T_9, 1) @[block_division.scala 209:78]
    node _dotProductRegs_42_T_11 = mux(_dotProductRegs_42_T_8, _dotProductRegs_42_T_10, multiplication_106) @[block_division.scala 209:31]
    dotProductRegs_1[42] <= _dotProductRegs_42_T_11 @[block_division.scala 209:25]
    node _signs_42_T_1 = xor(signReg_106, io.sign_b[106]) @[block_division.scala 210:27]
    signs_1[42] <= _signs_42_T_1 @[block_division.scala 210:16]
    node _two_complement_42_T_7 = eq(signs_1[42], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_42_T_8 = cat(UInt<1>("h0"), dotProductRegs_1[42]) @[block_division.scala 213:16]
    node _two_complement_42_T_9 = not(_two_complement_42_T_8) @[block_division.scala 213:10]
    node _two_complement_42_T_10 = add(_two_complement_42_T_9, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_42_T_11 = tail(_two_complement_42_T_10, 1) @[block_division.scala 213:38]
    node _two_complement_42_T_12 = cat(UInt<1>("h0"), dotProductRegs_1[42]) @[block_division.scala 214:14]
    node _two_complement_42_T_13 = mux(_two_complement_42_T_7, _two_complement_42_T_11, _two_complement_42_T_12) @[block_division.scala 211:31]
    two_complement_1[42] <= _two_complement_42_T_13 @[block_division.scala 211:25]
    node _two_complement_buffer_42_T_1 = asSInt(two_complement_1[42]) @[block_division.scala 216:53]
    two_complement_buffer_1[42] <= _two_complement_buffer_42_T_1 @[block_division.scala 216:32]
    reg multiplierReg_107 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_107 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_107 <= io.sign_a[107] @[block_division.scala 206:15]
    multiplierReg_107 <= io.man_a[107] @[block_division.scala 207:21]
    node multiplication_107 = mul(multiplierReg_107, io.man_b[107]) @[block_division.scala 208:42]
    node _dotProductRegs_43_T_6 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_43_T_7 = tail(_dotProductRegs_43_T_6, 1) @[block_division.scala 209:60]
    node _dotProductRegs_43_T_8 = gt(multiplication_107, _dotProductRegs_43_T_7) @[block_division.scala 209:47]
    node _dotProductRegs_43_T_9 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_43_T_10 = tail(_dotProductRegs_43_T_9, 1) @[block_division.scala 209:78]
    node _dotProductRegs_43_T_11 = mux(_dotProductRegs_43_T_8, _dotProductRegs_43_T_10, multiplication_107) @[block_division.scala 209:31]
    dotProductRegs_1[43] <= _dotProductRegs_43_T_11 @[block_division.scala 209:25]
    node _signs_43_T_1 = xor(signReg_107, io.sign_b[107]) @[block_division.scala 210:27]
    signs_1[43] <= _signs_43_T_1 @[block_division.scala 210:16]
    node _two_complement_43_T_7 = eq(signs_1[43], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_43_T_8 = cat(UInt<1>("h0"), dotProductRegs_1[43]) @[block_division.scala 213:16]
    node _two_complement_43_T_9 = not(_two_complement_43_T_8) @[block_division.scala 213:10]
    node _two_complement_43_T_10 = add(_two_complement_43_T_9, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_43_T_11 = tail(_two_complement_43_T_10, 1) @[block_division.scala 213:38]
    node _two_complement_43_T_12 = cat(UInt<1>("h0"), dotProductRegs_1[43]) @[block_division.scala 214:14]
    node _two_complement_43_T_13 = mux(_two_complement_43_T_7, _two_complement_43_T_11, _two_complement_43_T_12) @[block_division.scala 211:31]
    two_complement_1[43] <= _two_complement_43_T_13 @[block_division.scala 211:25]
    node _two_complement_buffer_43_T_1 = asSInt(two_complement_1[43]) @[block_division.scala 216:53]
    two_complement_buffer_1[43] <= _two_complement_buffer_43_T_1 @[block_division.scala 216:32]
    reg multiplierReg_108 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_108 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_108 <= io.sign_a[108] @[block_division.scala 206:15]
    multiplierReg_108 <= io.man_a[108] @[block_division.scala 207:21]
    node multiplication_108 = mul(multiplierReg_108, io.man_b[108]) @[block_division.scala 208:42]
    node _dotProductRegs_44_T_6 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_44_T_7 = tail(_dotProductRegs_44_T_6, 1) @[block_division.scala 209:60]
    node _dotProductRegs_44_T_8 = gt(multiplication_108, _dotProductRegs_44_T_7) @[block_division.scala 209:47]
    node _dotProductRegs_44_T_9 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_44_T_10 = tail(_dotProductRegs_44_T_9, 1) @[block_division.scala 209:78]
    node _dotProductRegs_44_T_11 = mux(_dotProductRegs_44_T_8, _dotProductRegs_44_T_10, multiplication_108) @[block_division.scala 209:31]
    dotProductRegs_1[44] <= _dotProductRegs_44_T_11 @[block_division.scala 209:25]
    node _signs_44_T_1 = xor(signReg_108, io.sign_b[108]) @[block_division.scala 210:27]
    signs_1[44] <= _signs_44_T_1 @[block_division.scala 210:16]
    node _two_complement_44_T_7 = eq(signs_1[44], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_44_T_8 = cat(UInt<1>("h0"), dotProductRegs_1[44]) @[block_division.scala 213:16]
    node _two_complement_44_T_9 = not(_two_complement_44_T_8) @[block_division.scala 213:10]
    node _two_complement_44_T_10 = add(_two_complement_44_T_9, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_44_T_11 = tail(_two_complement_44_T_10, 1) @[block_division.scala 213:38]
    node _two_complement_44_T_12 = cat(UInt<1>("h0"), dotProductRegs_1[44]) @[block_division.scala 214:14]
    node _two_complement_44_T_13 = mux(_two_complement_44_T_7, _two_complement_44_T_11, _two_complement_44_T_12) @[block_division.scala 211:31]
    two_complement_1[44] <= _two_complement_44_T_13 @[block_division.scala 211:25]
    node _two_complement_buffer_44_T_1 = asSInt(two_complement_1[44]) @[block_division.scala 216:53]
    two_complement_buffer_1[44] <= _two_complement_buffer_44_T_1 @[block_division.scala 216:32]
    reg multiplierReg_109 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_109 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_109 <= io.sign_a[109] @[block_division.scala 206:15]
    multiplierReg_109 <= io.man_a[109] @[block_division.scala 207:21]
    node multiplication_109 = mul(multiplierReg_109, io.man_b[109]) @[block_division.scala 208:42]
    node _dotProductRegs_45_T_6 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_45_T_7 = tail(_dotProductRegs_45_T_6, 1) @[block_division.scala 209:60]
    node _dotProductRegs_45_T_8 = gt(multiplication_109, _dotProductRegs_45_T_7) @[block_division.scala 209:47]
    node _dotProductRegs_45_T_9 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_45_T_10 = tail(_dotProductRegs_45_T_9, 1) @[block_division.scala 209:78]
    node _dotProductRegs_45_T_11 = mux(_dotProductRegs_45_T_8, _dotProductRegs_45_T_10, multiplication_109) @[block_division.scala 209:31]
    dotProductRegs_1[45] <= _dotProductRegs_45_T_11 @[block_division.scala 209:25]
    node _signs_45_T_1 = xor(signReg_109, io.sign_b[109]) @[block_division.scala 210:27]
    signs_1[45] <= _signs_45_T_1 @[block_division.scala 210:16]
    node _two_complement_45_T_7 = eq(signs_1[45], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_45_T_8 = cat(UInt<1>("h0"), dotProductRegs_1[45]) @[block_division.scala 213:16]
    node _two_complement_45_T_9 = not(_two_complement_45_T_8) @[block_division.scala 213:10]
    node _two_complement_45_T_10 = add(_two_complement_45_T_9, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_45_T_11 = tail(_two_complement_45_T_10, 1) @[block_division.scala 213:38]
    node _two_complement_45_T_12 = cat(UInt<1>("h0"), dotProductRegs_1[45]) @[block_division.scala 214:14]
    node _two_complement_45_T_13 = mux(_two_complement_45_T_7, _two_complement_45_T_11, _two_complement_45_T_12) @[block_division.scala 211:31]
    two_complement_1[45] <= _two_complement_45_T_13 @[block_division.scala 211:25]
    node _two_complement_buffer_45_T_1 = asSInt(two_complement_1[45]) @[block_division.scala 216:53]
    two_complement_buffer_1[45] <= _two_complement_buffer_45_T_1 @[block_division.scala 216:32]
    reg multiplierReg_110 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_110 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_110 <= io.sign_a[110] @[block_division.scala 206:15]
    multiplierReg_110 <= io.man_a[110] @[block_division.scala 207:21]
    node multiplication_110 = mul(multiplierReg_110, io.man_b[110]) @[block_division.scala 208:42]
    node _dotProductRegs_46_T_6 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_46_T_7 = tail(_dotProductRegs_46_T_6, 1) @[block_division.scala 209:60]
    node _dotProductRegs_46_T_8 = gt(multiplication_110, _dotProductRegs_46_T_7) @[block_division.scala 209:47]
    node _dotProductRegs_46_T_9 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_46_T_10 = tail(_dotProductRegs_46_T_9, 1) @[block_division.scala 209:78]
    node _dotProductRegs_46_T_11 = mux(_dotProductRegs_46_T_8, _dotProductRegs_46_T_10, multiplication_110) @[block_division.scala 209:31]
    dotProductRegs_1[46] <= _dotProductRegs_46_T_11 @[block_division.scala 209:25]
    node _signs_46_T_1 = xor(signReg_110, io.sign_b[110]) @[block_division.scala 210:27]
    signs_1[46] <= _signs_46_T_1 @[block_division.scala 210:16]
    node _two_complement_46_T_7 = eq(signs_1[46], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_46_T_8 = cat(UInt<1>("h0"), dotProductRegs_1[46]) @[block_division.scala 213:16]
    node _two_complement_46_T_9 = not(_two_complement_46_T_8) @[block_division.scala 213:10]
    node _two_complement_46_T_10 = add(_two_complement_46_T_9, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_46_T_11 = tail(_two_complement_46_T_10, 1) @[block_division.scala 213:38]
    node _two_complement_46_T_12 = cat(UInt<1>("h0"), dotProductRegs_1[46]) @[block_division.scala 214:14]
    node _two_complement_46_T_13 = mux(_two_complement_46_T_7, _two_complement_46_T_11, _two_complement_46_T_12) @[block_division.scala 211:31]
    two_complement_1[46] <= _two_complement_46_T_13 @[block_division.scala 211:25]
    node _two_complement_buffer_46_T_1 = asSInt(two_complement_1[46]) @[block_division.scala 216:53]
    two_complement_buffer_1[46] <= _two_complement_buffer_46_T_1 @[block_division.scala 216:32]
    reg multiplierReg_111 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_111 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_111 <= io.sign_a[111] @[block_division.scala 206:15]
    multiplierReg_111 <= io.man_a[111] @[block_division.scala 207:21]
    node multiplication_111 = mul(multiplierReg_111, io.man_b[111]) @[block_division.scala 208:42]
    node _dotProductRegs_47_T_6 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_47_T_7 = tail(_dotProductRegs_47_T_6, 1) @[block_division.scala 209:60]
    node _dotProductRegs_47_T_8 = gt(multiplication_111, _dotProductRegs_47_T_7) @[block_division.scala 209:47]
    node _dotProductRegs_47_T_9 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_47_T_10 = tail(_dotProductRegs_47_T_9, 1) @[block_division.scala 209:78]
    node _dotProductRegs_47_T_11 = mux(_dotProductRegs_47_T_8, _dotProductRegs_47_T_10, multiplication_111) @[block_division.scala 209:31]
    dotProductRegs_1[47] <= _dotProductRegs_47_T_11 @[block_division.scala 209:25]
    node _signs_47_T_1 = xor(signReg_111, io.sign_b[111]) @[block_division.scala 210:27]
    signs_1[47] <= _signs_47_T_1 @[block_division.scala 210:16]
    node _two_complement_47_T_7 = eq(signs_1[47], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_47_T_8 = cat(UInt<1>("h0"), dotProductRegs_1[47]) @[block_division.scala 213:16]
    node _two_complement_47_T_9 = not(_two_complement_47_T_8) @[block_division.scala 213:10]
    node _two_complement_47_T_10 = add(_two_complement_47_T_9, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_47_T_11 = tail(_two_complement_47_T_10, 1) @[block_division.scala 213:38]
    node _two_complement_47_T_12 = cat(UInt<1>("h0"), dotProductRegs_1[47]) @[block_division.scala 214:14]
    node _two_complement_47_T_13 = mux(_two_complement_47_T_7, _two_complement_47_T_11, _two_complement_47_T_12) @[block_division.scala 211:31]
    two_complement_1[47] <= _two_complement_47_T_13 @[block_division.scala 211:25]
    node _two_complement_buffer_47_T_1 = asSInt(two_complement_1[47]) @[block_division.scala 216:53]
    two_complement_buffer_1[47] <= _two_complement_buffer_47_T_1 @[block_division.scala 216:32]
    reg multiplierReg_112 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_112 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_112 <= io.sign_a[112] @[block_division.scala 206:15]
    multiplierReg_112 <= io.man_a[112] @[block_division.scala 207:21]
    node multiplication_112 = mul(multiplierReg_112, io.man_b[112]) @[block_division.scala 208:42]
    node _dotProductRegs_48_T_6 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_48_T_7 = tail(_dotProductRegs_48_T_6, 1) @[block_division.scala 209:60]
    node _dotProductRegs_48_T_8 = gt(multiplication_112, _dotProductRegs_48_T_7) @[block_division.scala 209:47]
    node _dotProductRegs_48_T_9 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_48_T_10 = tail(_dotProductRegs_48_T_9, 1) @[block_division.scala 209:78]
    node _dotProductRegs_48_T_11 = mux(_dotProductRegs_48_T_8, _dotProductRegs_48_T_10, multiplication_112) @[block_division.scala 209:31]
    dotProductRegs_1[48] <= _dotProductRegs_48_T_11 @[block_division.scala 209:25]
    node _signs_48_T_1 = xor(signReg_112, io.sign_b[112]) @[block_division.scala 210:27]
    signs_1[48] <= _signs_48_T_1 @[block_division.scala 210:16]
    node _two_complement_48_T_7 = eq(signs_1[48], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_48_T_8 = cat(UInt<1>("h0"), dotProductRegs_1[48]) @[block_division.scala 213:16]
    node _two_complement_48_T_9 = not(_two_complement_48_T_8) @[block_division.scala 213:10]
    node _two_complement_48_T_10 = add(_two_complement_48_T_9, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_48_T_11 = tail(_two_complement_48_T_10, 1) @[block_division.scala 213:38]
    node _two_complement_48_T_12 = cat(UInt<1>("h0"), dotProductRegs_1[48]) @[block_division.scala 214:14]
    node _two_complement_48_T_13 = mux(_two_complement_48_T_7, _two_complement_48_T_11, _two_complement_48_T_12) @[block_division.scala 211:31]
    two_complement_1[48] <= _two_complement_48_T_13 @[block_division.scala 211:25]
    node _two_complement_buffer_48_T_1 = asSInt(two_complement_1[48]) @[block_division.scala 216:53]
    two_complement_buffer_1[48] <= _two_complement_buffer_48_T_1 @[block_division.scala 216:32]
    reg multiplierReg_113 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_113 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_113 <= io.sign_a[113] @[block_division.scala 206:15]
    multiplierReg_113 <= io.man_a[113] @[block_division.scala 207:21]
    node multiplication_113 = mul(multiplierReg_113, io.man_b[113]) @[block_division.scala 208:42]
    node _dotProductRegs_49_T_6 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_49_T_7 = tail(_dotProductRegs_49_T_6, 1) @[block_division.scala 209:60]
    node _dotProductRegs_49_T_8 = gt(multiplication_113, _dotProductRegs_49_T_7) @[block_division.scala 209:47]
    node _dotProductRegs_49_T_9 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_49_T_10 = tail(_dotProductRegs_49_T_9, 1) @[block_division.scala 209:78]
    node _dotProductRegs_49_T_11 = mux(_dotProductRegs_49_T_8, _dotProductRegs_49_T_10, multiplication_113) @[block_division.scala 209:31]
    dotProductRegs_1[49] <= _dotProductRegs_49_T_11 @[block_division.scala 209:25]
    node _signs_49_T_1 = xor(signReg_113, io.sign_b[113]) @[block_division.scala 210:27]
    signs_1[49] <= _signs_49_T_1 @[block_division.scala 210:16]
    node _two_complement_49_T_7 = eq(signs_1[49], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_49_T_8 = cat(UInt<1>("h0"), dotProductRegs_1[49]) @[block_division.scala 213:16]
    node _two_complement_49_T_9 = not(_two_complement_49_T_8) @[block_division.scala 213:10]
    node _two_complement_49_T_10 = add(_two_complement_49_T_9, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_49_T_11 = tail(_two_complement_49_T_10, 1) @[block_division.scala 213:38]
    node _two_complement_49_T_12 = cat(UInt<1>("h0"), dotProductRegs_1[49]) @[block_division.scala 214:14]
    node _two_complement_49_T_13 = mux(_two_complement_49_T_7, _two_complement_49_T_11, _two_complement_49_T_12) @[block_division.scala 211:31]
    two_complement_1[49] <= _two_complement_49_T_13 @[block_division.scala 211:25]
    node _two_complement_buffer_49_T_1 = asSInt(two_complement_1[49]) @[block_division.scala 216:53]
    two_complement_buffer_1[49] <= _two_complement_buffer_49_T_1 @[block_division.scala 216:32]
    reg multiplierReg_114 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_114 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_114 <= io.sign_a[114] @[block_division.scala 206:15]
    multiplierReg_114 <= io.man_a[114] @[block_division.scala 207:21]
    node multiplication_114 = mul(multiplierReg_114, io.man_b[114]) @[block_division.scala 208:42]
    node _dotProductRegs_50_T_6 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_50_T_7 = tail(_dotProductRegs_50_T_6, 1) @[block_division.scala 209:60]
    node _dotProductRegs_50_T_8 = gt(multiplication_114, _dotProductRegs_50_T_7) @[block_division.scala 209:47]
    node _dotProductRegs_50_T_9 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_50_T_10 = tail(_dotProductRegs_50_T_9, 1) @[block_division.scala 209:78]
    node _dotProductRegs_50_T_11 = mux(_dotProductRegs_50_T_8, _dotProductRegs_50_T_10, multiplication_114) @[block_division.scala 209:31]
    dotProductRegs_1[50] <= _dotProductRegs_50_T_11 @[block_division.scala 209:25]
    node _signs_50_T_1 = xor(signReg_114, io.sign_b[114]) @[block_division.scala 210:27]
    signs_1[50] <= _signs_50_T_1 @[block_division.scala 210:16]
    node _two_complement_50_T_7 = eq(signs_1[50], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_50_T_8 = cat(UInt<1>("h0"), dotProductRegs_1[50]) @[block_division.scala 213:16]
    node _two_complement_50_T_9 = not(_two_complement_50_T_8) @[block_division.scala 213:10]
    node _two_complement_50_T_10 = add(_two_complement_50_T_9, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_50_T_11 = tail(_two_complement_50_T_10, 1) @[block_division.scala 213:38]
    node _two_complement_50_T_12 = cat(UInt<1>("h0"), dotProductRegs_1[50]) @[block_division.scala 214:14]
    node _two_complement_50_T_13 = mux(_two_complement_50_T_7, _two_complement_50_T_11, _two_complement_50_T_12) @[block_division.scala 211:31]
    two_complement_1[50] <= _two_complement_50_T_13 @[block_division.scala 211:25]
    node _two_complement_buffer_50_T_1 = asSInt(two_complement_1[50]) @[block_division.scala 216:53]
    two_complement_buffer_1[50] <= _two_complement_buffer_50_T_1 @[block_division.scala 216:32]
    reg multiplierReg_115 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_115 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_115 <= io.sign_a[115] @[block_division.scala 206:15]
    multiplierReg_115 <= io.man_a[115] @[block_division.scala 207:21]
    node multiplication_115 = mul(multiplierReg_115, io.man_b[115]) @[block_division.scala 208:42]
    node _dotProductRegs_51_T_6 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_51_T_7 = tail(_dotProductRegs_51_T_6, 1) @[block_division.scala 209:60]
    node _dotProductRegs_51_T_8 = gt(multiplication_115, _dotProductRegs_51_T_7) @[block_division.scala 209:47]
    node _dotProductRegs_51_T_9 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_51_T_10 = tail(_dotProductRegs_51_T_9, 1) @[block_division.scala 209:78]
    node _dotProductRegs_51_T_11 = mux(_dotProductRegs_51_T_8, _dotProductRegs_51_T_10, multiplication_115) @[block_division.scala 209:31]
    dotProductRegs_1[51] <= _dotProductRegs_51_T_11 @[block_division.scala 209:25]
    node _signs_51_T_1 = xor(signReg_115, io.sign_b[115]) @[block_division.scala 210:27]
    signs_1[51] <= _signs_51_T_1 @[block_division.scala 210:16]
    node _two_complement_51_T_7 = eq(signs_1[51], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_51_T_8 = cat(UInt<1>("h0"), dotProductRegs_1[51]) @[block_division.scala 213:16]
    node _two_complement_51_T_9 = not(_two_complement_51_T_8) @[block_division.scala 213:10]
    node _two_complement_51_T_10 = add(_two_complement_51_T_9, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_51_T_11 = tail(_two_complement_51_T_10, 1) @[block_division.scala 213:38]
    node _two_complement_51_T_12 = cat(UInt<1>("h0"), dotProductRegs_1[51]) @[block_division.scala 214:14]
    node _two_complement_51_T_13 = mux(_two_complement_51_T_7, _two_complement_51_T_11, _two_complement_51_T_12) @[block_division.scala 211:31]
    two_complement_1[51] <= _two_complement_51_T_13 @[block_division.scala 211:25]
    node _two_complement_buffer_51_T_1 = asSInt(two_complement_1[51]) @[block_division.scala 216:53]
    two_complement_buffer_1[51] <= _two_complement_buffer_51_T_1 @[block_division.scala 216:32]
    reg multiplierReg_116 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_116 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_116 <= io.sign_a[116] @[block_division.scala 206:15]
    multiplierReg_116 <= io.man_a[116] @[block_division.scala 207:21]
    node multiplication_116 = mul(multiplierReg_116, io.man_b[116]) @[block_division.scala 208:42]
    node _dotProductRegs_52_T_6 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_52_T_7 = tail(_dotProductRegs_52_T_6, 1) @[block_division.scala 209:60]
    node _dotProductRegs_52_T_8 = gt(multiplication_116, _dotProductRegs_52_T_7) @[block_division.scala 209:47]
    node _dotProductRegs_52_T_9 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_52_T_10 = tail(_dotProductRegs_52_T_9, 1) @[block_division.scala 209:78]
    node _dotProductRegs_52_T_11 = mux(_dotProductRegs_52_T_8, _dotProductRegs_52_T_10, multiplication_116) @[block_division.scala 209:31]
    dotProductRegs_1[52] <= _dotProductRegs_52_T_11 @[block_division.scala 209:25]
    node _signs_52_T_1 = xor(signReg_116, io.sign_b[116]) @[block_division.scala 210:27]
    signs_1[52] <= _signs_52_T_1 @[block_division.scala 210:16]
    node _two_complement_52_T_7 = eq(signs_1[52], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_52_T_8 = cat(UInt<1>("h0"), dotProductRegs_1[52]) @[block_division.scala 213:16]
    node _two_complement_52_T_9 = not(_two_complement_52_T_8) @[block_division.scala 213:10]
    node _two_complement_52_T_10 = add(_two_complement_52_T_9, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_52_T_11 = tail(_two_complement_52_T_10, 1) @[block_division.scala 213:38]
    node _two_complement_52_T_12 = cat(UInt<1>("h0"), dotProductRegs_1[52]) @[block_division.scala 214:14]
    node _two_complement_52_T_13 = mux(_two_complement_52_T_7, _two_complement_52_T_11, _two_complement_52_T_12) @[block_division.scala 211:31]
    two_complement_1[52] <= _two_complement_52_T_13 @[block_division.scala 211:25]
    node _two_complement_buffer_52_T_1 = asSInt(two_complement_1[52]) @[block_division.scala 216:53]
    two_complement_buffer_1[52] <= _two_complement_buffer_52_T_1 @[block_division.scala 216:32]
    reg multiplierReg_117 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_117 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_117 <= io.sign_a[117] @[block_division.scala 206:15]
    multiplierReg_117 <= io.man_a[117] @[block_division.scala 207:21]
    node multiplication_117 = mul(multiplierReg_117, io.man_b[117]) @[block_division.scala 208:42]
    node _dotProductRegs_53_T_6 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_53_T_7 = tail(_dotProductRegs_53_T_6, 1) @[block_division.scala 209:60]
    node _dotProductRegs_53_T_8 = gt(multiplication_117, _dotProductRegs_53_T_7) @[block_division.scala 209:47]
    node _dotProductRegs_53_T_9 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_53_T_10 = tail(_dotProductRegs_53_T_9, 1) @[block_division.scala 209:78]
    node _dotProductRegs_53_T_11 = mux(_dotProductRegs_53_T_8, _dotProductRegs_53_T_10, multiplication_117) @[block_division.scala 209:31]
    dotProductRegs_1[53] <= _dotProductRegs_53_T_11 @[block_division.scala 209:25]
    node _signs_53_T_1 = xor(signReg_117, io.sign_b[117]) @[block_division.scala 210:27]
    signs_1[53] <= _signs_53_T_1 @[block_division.scala 210:16]
    node _two_complement_53_T_7 = eq(signs_1[53], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_53_T_8 = cat(UInt<1>("h0"), dotProductRegs_1[53]) @[block_division.scala 213:16]
    node _two_complement_53_T_9 = not(_two_complement_53_T_8) @[block_division.scala 213:10]
    node _two_complement_53_T_10 = add(_two_complement_53_T_9, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_53_T_11 = tail(_two_complement_53_T_10, 1) @[block_division.scala 213:38]
    node _two_complement_53_T_12 = cat(UInt<1>("h0"), dotProductRegs_1[53]) @[block_division.scala 214:14]
    node _two_complement_53_T_13 = mux(_two_complement_53_T_7, _two_complement_53_T_11, _two_complement_53_T_12) @[block_division.scala 211:31]
    two_complement_1[53] <= _two_complement_53_T_13 @[block_division.scala 211:25]
    node _two_complement_buffer_53_T_1 = asSInt(two_complement_1[53]) @[block_division.scala 216:53]
    two_complement_buffer_1[53] <= _two_complement_buffer_53_T_1 @[block_division.scala 216:32]
    reg multiplierReg_118 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_118 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_118 <= io.sign_a[118] @[block_division.scala 206:15]
    multiplierReg_118 <= io.man_a[118] @[block_division.scala 207:21]
    node multiplication_118 = mul(multiplierReg_118, io.man_b[118]) @[block_division.scala 208:42]
    node _dotProductRegs_54_T_6 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_54_T_7 = tail(_dotProductRegs_54_T_6, 1) @[block_division.scala 209:60]
    node _dotProductRegs_54_T_8 = gt(multiplication_118, _dotProductRegs_54_T_7) @[block_division.scala 209:47]
    node _dotProductRegs_54_T_9 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_54_T_10 = tail(_dotProductRegs_54_T_9, 1) @[block_division.scala 209:78]
    node _dotProductRegs_54_T_11 = mux(_dotProductRegs_54_T_8, _dotProductRegs_54_T_10, multiplication_118) @[block_division.scala 209:31]
    dotProductRegs_1[54] <= _dotProductRegs_54_T_11 @[block_division.scala 209:25]
    node _signs_54_T_1 = xor(signReg_118, io.sign_b[118]) @[block_division.scala 210:27]
    signs_1[54] <= _signs_54_T_1 @[block_division.scala 210:16]
    node _two_complement_54_T_7 = eq(signs_1[54], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_54_T_8 = cat(UInt<1>("h0"), dotProductRegs_1[54]) @[block_division.scala 213:16]
    node _two_complement_54_T_9 = not(_two_complement_54_T_8) @[block_division.scala 213:10]
    node _two_complement_54_T_10 = add(_two_complement_54_T_9, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_54_T_11 = tail(_two_complement_54_T_10, 1) @[block_division.scala 213:38]
    node _two_complement_54_T_12 = cat(UInt<1>("h0"), dotProductRegs_1[54]) @[block_division.scala 214:14]
    node _two_complement_54_T_13 = mux(_two_complement_54_T_7, _two_complement_54_T_11, _two_complement_54_T_12) @[block_division.scala 211:31]
    two_complement_1[54] <= _two_complement_54_T_13 @[block_division.scala 211:25]
    node _two_complement_buffer_54_T_1 = asSInt(two_complement_1[54]) @[block_division.scala 216:53]
    two_complement_buffer_1[54] <= _two_complement_buffer_54_T_1 @[block_division.scala 216:32]
    reg multiplierReg_119 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_119 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_119 <= io.sign_a[119] @[block_division.scala 206:15]
    multiplierReg_119 <= io.man_a[119] @[block_division.scala 207:21]
    node multiplication_119 = mul(multiplierReg_119, io.man_b[119]) @[block_division.scala 208:42]
    node _dotProductRegs_55_T_6 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_55_T_7 = tail(_dotProductRegs_55_T_6, 1) @[block_division.scala 209:60]
    node _dotProductRegs_55_T_8 = gt(multiplication_119, _dotProductRegs_55_T_7) @[block_division.scala 209:47]
    node _dotProductRegs_55_T_9 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_55_T_10 = tail(_dotProductRegs_55_T_9, 1) @[block_division.scala 209:78]
    node _dotProductRegs_55_T_11 = mux(_dotProductRegs_55_T_8, _dotProductRegs_55_T_10, multiplication_119) @[block_division.scala 209:31]
    dotProductRegs_1[55] <= _dotProductRegs_55_T_11 @[block_division.scala 209:25]
    node _signs_55_T_1 = xor(signReg_119, io.sign_b[119]) @[block_division.scala 210:27]
    signs_1[55] <= _signs_55_T_1 @[block_division.scala 210:16]
    node _two_complement_55_T_7 = eq(signs_1[55], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_55_T_8 = cat(UInt<1>("h0"), dotProductRegs_1[55]) @[block_division.scala 213:16]
    node _two_complement_55_T_9 = not(_two_complement_55_T_8) @[block_division.scala 213:10]
    node _two_complement_55_T_10 = add(_two_complement_55_T_9, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_55_T_11 = tail(_two_complement_55_T_10, 1) @[block_division.scala 213:38]
    node _two_complement_55_T_12 = cat(UInt<1>("h0"), dotProductRegs_1[55]) @[block_division.scala 214:14]
    node _two_complement_55_T_13 = mux(_two_complement_55_T_7, _two_complement_55_T_11, _two_complement_55_T_12) @[block_division.scala 211:31]
    two_complement_1[55] <= _two_complement_55_T_13 @[block_division.scala 211:25]
    node _two_complement_buffer_55_T_1 = asSInt(two_complement_1[55]) @[block_division.scala 216:53]
    two_complement_buffer_1[55] <= _two_complement_buffer_55_T_1 @[block_division.scala 216:32]
    reg multiplierReg_120 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_120 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_120 <= io.sign_a[120] @[block_division.scala 206:15]
    multiplierReg_120 <= io.man_a[120] @[block_division.scala 207:21]
    node multiplication_120 = mul(multiplierReg_120, io.man_b[120]) @[block_division.scala 208:42]
    node _dotProductRegs_56_T_6 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_56_T_7 = tail(_dotProductRegs_56_T_6, 1) @[block_division.scala 209:60]
    node _dotProductRegs_56_T_8 = gt(multiplication_120, _dotProductRegs_56_T_7) @[block_division.scala 209:47]
    node _dotProductRegs_56_T_9 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_56_T_10 = tail(_dotProductRegs_56_T_9, 1) @[block_division.scala 209:78]
    node _dotProductRegs_56_T_11 = mux(_dotProductRegs_56_T_8, _dotProductRegs_56_T_10, multiplication_120) @[block_division.scala 209:31]
    dotProductRegs_1[56] <= _dotProductRegs_56_T_11 @[block_division.scala 209:25]
    node _signs_56_T_1 = xor(signReg_120, io.sign_b[120]) @[block_division.scala 210:27]
    signs_1[56] <= _signs_56_T_1 @[block_division.scala 210:16]
    node _two_complement_56_T_7 = eq(signs_1[56], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_56_T_8 = cat(UInt<1>("h0"), dotProductRegs_1[56]) @[block_division.scala 213:16]
    node _two_complement_56_T_9 = not(_two_complement_56_T_8) @[block_division.scala 213:10]
    node _two_complement_56_T_10 = add(_two_complement_56_T_9, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_56_T_11 = tail(_two_complement_56_T_10, 1) @[block_division.scala 213:38]
    node _two_complement_56_T_12 = cat(UInt<1>("h0"), dotProductRegs_1[56]) @[block_division.scala 214:14]
    node _two_complement_56_T_13 = mux(_two_complement_56_T_7, _two_complement_56_T_11, _two_complement_56_T_12) @[block_division.scala 211:31]
    two_complement_1[56] <= _two_complement_56_T_13 @[block_division.scala 211:25]
    node _two_complement_buffer_56_T_1 = asSInt(two_complement_1[56]) @[block_division.scala 216:53]
    two_complement_buffer_1[56] <= _two_complement_buffer_56_T_1 @[block_division.scala 216:32]
    reg multiplierReg_121 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_121 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_121 <= io.sign_a[121] @[block_division.scala 206:15]
    multiplierReg_121 <= io.man_a[121] @[block_division.scala 207:21]
    node multiplication_121 = mul(multiplierReg_121, io.man_b[121]) @[block_division.scala 208:42]
    node _dotProductRegs_57_T_6 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_57_T_7 = tail(_dotProductRegs_57_T_6, 1) @[block_division.scala 209:60]
    node _dotProductRegs_57_T_8 = gt(multiplication_121, _dotProductRegs_57_T_7) @[block_division.scala 209:47]
    node _dotProductRegs_57_T_9 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_57_T_10 = tail(_dotProductRegs_57_T_9, 1) @[block_division.scala 209:78]
    node _dotProductRegs_57_T_11 = mux(_dotProductRegs_57_T_8, _dotProductRegs_57_T_10, multiplication_121) @[block_division.scala 209:31]
    dotProductRegs_1[57] <= _dotProductRegs_57_T_11 @[block_division.scala 209:25]
    node _signs_57_T_1 = xor(signReg_121, io.sign_b[121]) @[block_division.scala 210:27]
    signs_1[57] <= _signs_57_T_1 @[block_division.scala 210:16]
    node _two_complement_57_T_7 = eq(signs_1[57], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_57_T_8 = cat(UInt<1>("h0"), dotProductRegs_1[57]) @[block_division.scala 213:16]
    node _two_complement_57_T_9 = not(_two_complement_57_T_8) @[block_division.scala 213:10]
    node _two_complement_57_T_10 = add(_two_complement_57_T_9, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_57_T_11 = tail(_two_complement_57_T_10, 1) @[block_division.scala 213:38]
    node _two_complement_57_T_12 = cat(UInt<1>("h0"), dotProductRegs_1[57]) @[block_division.scala 214:14]
    node _two_complement_57_T_13 = mux(_two_complement_57_T_7, _two_complement_57_T_11, _two_complement_57_T_12) @[block_division.scala 211:31]
    two_complement_1[57] <= _two_complement_57_T_13 @[block_division.scala 211:25]
    node _two_complement_buffer_57_T_1 = asSInt(two_complement_1[57]) @[block_division.scala 216:53]
    two_complement_buffer_1[57] <= _two_complement_buffer_57_T_1 @[block_division.scala 216:32]
    reg multiplierReg_122 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_122 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_122 <= io.sign_a[122] @[block_division.scala 206:15]
    multiplierReg_122 <= io.man_a[122] @[block_division.scala 207:21]
    node multiplication_122 = mul(multiplierReg_122, io.man_b[122]) @[block_division.scala 208:42]
    node _dotProductRegs_58_T_6 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_58_T_7 = tail(_dotProductRegs_58_T_6, 1) @[block_division.scala 209:60]
    node _dotProductRegs_58_T_8 = gt(multiplication_122, _dotProductRegs_58_T_7) @[block_division.scala 209:47]
    node _dotProductRegs_58_T_9 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_58_T_10 = tail(_dotProductRegs_58_T_9, 1) @[block_division.scala 209:78]
    node _dotProductRegs_58_T_11 = mux(_dotProductRegs_58_T_8, _dotProductRegs_58_T_10, multiplication_122) @[block_division.scala 209:31]
    dotProductRegs_1[58] <= _dotProductRegs_58_T_11 @[block_division.scala 209:25]
    node _signs_58_T_1 = xor(signReg_122, io.sign_b[122]) @[block_division.scala 210:27]
    signs_1[58] <= _signs_58_T_1 @[block_division.scala 210:16]
    node _two_complement_58_T_7 = eq(signs_1[58], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_58_T_8 = cat(UInt<1>("h0"), dotProductRegs_1[58]) @[block_division.scala 213:16]
    node _two_complement_58_T_9 = not(_two_complement_58_T_8) @[block_division.scala 213:10]
    node _two_complement_58_T_10 = add(_two_complement_58_T_9, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_58_T_11 = tail(_two_complement_58_T_10, 1) @[block_division.scala 213:38]
    node _two_complement_58_T_12 = cat(UInt<1>("h0"), dotProductRegs_1[58]) @[block_division.scala 214:14]
    node _two_complement_58_T_13 = mux(_two_complement_58_T_7, _two_complement_58_T_11, _two_complement_58_T_12) @[block_division.scala 211:31]
    two_complement_1[58] <= _two_complement_58_T_13 @[block_division.scala 211:25]
    node _two_complement_buffer_58_T_1 = asSInt(two_complement_1[58]) @[block_division.scala 216:53]
    two_complement_buffer_1[58] <= _two_complement_buffer_58_T_1 @[block_division.scala 216:32]
    reg multiplierReg_123 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_123 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_123 <= io.sign_a[123] @[block_division.scala 206:15]
    multiplierReg_123 <= io.man_a[123] @[block_division.scala 207:21]
    node multiplication_123 = mul(multiplierReg_123, io.man_b[123]) @[block_division.scala 208:42]
    node _dotProductRegs_59_T_6 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_59_T_7 = tail(_dotProductRegs_59_T_6, 1) @[block_division.scala 209:60]
    node _dotProductRegs_59_T_8 = gt(multiplication_123, _dotProductRegs_59_T_7) @[block_division.scala 209:47]
    node _dotProductRegs_59_T_9 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_59_T_10 = tail(_dotProductRegs_59_T_9, 1) @[block_division.scala 209:78]
    node _dotProductRegs_59_T_11 = mux(_dotProductRegs_59_T_8, _dotProductRegs_59_T_10, multiplication_123) @[block_division.scala 209:31]
    dotProductRegs_1[59] <= _dotProductRegs_59_T_11 @[block_division.scala 209:25]
    node _signs_59_T_1 = xor(signReg_123, io.sign_b[123]) @[block_division.scala 210:27]
    signs_1[59] <= _signs_59_T_1 @[block_division.scala 210:16]
    node _two_complement_59_T_7 = eq(signs_1[59], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_59_T_8 = cat(UInt<1>("h0"), dotProductRegs_1[59]) @[block_division.scala 213:16]
    node _two_complement_59_T_9 = not(_two_complement_59_T_8) @[block_division.scala 213:10]
    node _two_complement_59_T_10 = add(_two_complement_59_T_9, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_59_T_11 = tail(_two_complement_59_T_10, 1) @[block_division.scala 213:38]
    node _two_complement_59_T_12 = cat(UInt<1>("h0"), dotProductRegs_1[59]) @[block_division.scala 214:14]
    node _two_complement_59_T_13 = mux(_two_complement_59_T_7, _two_complement_59_T_11, _two_complement_59_T_12) @[block_division.scala 211:31]
    two_complement_1[59] <= _two_complement_59_T_13 @[block_division.scala 211:25]
    node _two_complement_buffer_59_T_1 = asSInt(two_complement_1[59]) @[block_division.scala 216:53]
    two_complement_buffer_1[59] <= _two_complement_buffer_59_T_1 @[block_division.scala 216:32]
    reg multiplierReg_124 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_124 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_124 <= io.sign_a[124] @[block_division.scala 206:15]
    multiplierReg_124 <= io.man_a[124] @[block_division.scala 207:21]
    node multiplication_124 = mul(multiplierReg_124, io.man_b[124]) @[block_division.scala 208:42]
    node _dotProductRegs_60_T_6 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_60_T_7 = tail(_dotProductRegs_60_T_6, 1) @[block_division.scala 209:60]
    node _dotProductRegs_60_T_8 = gt(multiplication_124, _dotProductRegs_60_T_7) @[block_division.scala 209:47]
    node _dotProductRegs_60_T_9 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_60_T_10 = tail(_dotProductRegs_60_T_9, 1) @[block_division.scala 209:78]
    node _dotProductRegs_60_T_11 = mux(_dotProductRegs_60_T_8, _dotProductRegs_60_T_10, multiplication_124) @[block_division.scala 209:31]
    dotProductRegs_1[60] <= _dotProductRegs_60_T_11 @[block_division.scala 209:25]
    node _signs_60_T_1 = xor(signReg_124, io.sign_b[124]) @[block_division.scala 210:27]
    signs_1[60] <= _signs_60_T_1 @[block_division.scala 210:16]
    node _two_complement_60_T_7 = eq(signs_1[60], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_60_T_8 = cat(UInt<1>("h0"), dotProductRegs_1[60]) @[block_division.scala 213:16]
    node _two_complement_60_T_9 = not(_two_complement_60_T_8) @[block_division.scala 213:10]
    node _two_complement_60_T_10 = add(_two_complement_60_T_9, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_60_T_11 = tail(_two_complement_60_T_10, 1) @[block_division.scala 213:38]
    node _two_complement_60_T_12 = cat(UInt<1>("h0"), dotProductRegs_1[60]) @[block_division.scala 214:14]
    node _two_complement_60_T_13 = mux(_two_complement_60_T_7, _two_complement_60_T_11, _two_complement_60_T_12) @[block_division.scala 211:31]
    two_complement_1[60] <= _two_complement_60_T_13 @[block_division.scala 211:25]
    node _two_complement_buffer_60_T_1 = asSInt(two_complement_1[60]) @[block_division.scala 216:53]
    two_complement_buffer_1[60] <= _two_complement_buffer_60_T_1 @[block_division.scala 216:32]
    reg multiplierReg_125 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_125 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_125 <= io.sign_a[125] @[block_division.scala 206:15]
    multiplierReg_125 <= io.man_a[125] @[block_division.scala 207:21]
    node multiplication_125 = mul(multiplierReg_125, io.man_b[125]) @[block_division.scala 208:42]
    node _dotProductRegs_61_T_6 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_61_T_7 = tail(_dotProductRegs_61_T_6, 1) @[block_division.scala 209:60]
    node _dotProductRegs_61_T_8 = gt(multiplication_125, _dotProductRegs_61_T_7) @[block_division.scala 209:47]
    node _dotProductRegs_61_T_9 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_61_T_10 = tail(_dotProductRegs_61_T_9, 1) @[block_division.scala 209:78]
    node _dotProductRegs_61_T_11 = mux(_dotProductRegs_61_T_8, _dotProductRegs_61_T_10, multiplication_125) @[block_division.scala 209:31]
    dotProductRegs_1[61] <= _dotProductRegs_61_T_11 @[block_division.scala 209:25]
    node _signs_61_T_1 = xor(signReg_125, io.sign_b[125]) @[block_division.scala 210:27]
    signs_1[61] <= _signs_61_T_1 @[block_division.scala 210:16]
    node _two_complement_61_T_7 = eq(signs_1[61], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_61_T_8 = cat(UInt<1>("h0"), dotProductRegs_1[61]) @[block_division.scala 213:16]
    node _two_complement_61_T_9 = not(_two_complement_61_T_8) @[block_division.scala 213:10]
    node _two_complement_61_T_10 = add(_two_complement_61_T_9, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_61_T_11 = tail(_two_complement_61_T_10, 1) @[block_division.scala 213:38]
    node _two_complement_61_T_12 = cat(UInt<1>("h0"), dotProductRegs_1[61]) @[block_division.scala 214:14]
    node _two_complement_61_T_13 = mux(_two_complement_61_T_7, _two_complement_61_T_11, _two_complement_61_T_12) @[block_division.scala 211:31]
    two_complement_1[61] <= _two_complement_61_T_13 @[block_division.scala 211:25]
    node _two_complement_buffer_61_T_1 = asSInt(two_complement_1[61]) @[block_division.scala 216:53]
    two_complement_buffer_1[61] <= _two_complement_buffer_61_T_1 @[block_division.scala 216:32]
    reg multiplierReg_126 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_126 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_126 <= io.sign_a[126] @[block_division.scala 206:15]
    multiplierReg_126 <= io.man_a[126] @[block_division.scala 207:21]
    node multiplication_126 = mul(multiplierReg_126, io.man_b[126]) @[block_division.scala 208:42]
    node _dotProductRegs_62_T_6 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_62_T_7 = tail(_dotProductRegs_62_T_6, 1) @[block_division.scala 209:60]
    node _dotProductRegs_62_T_8 = gt(multiplication_126, _dotProductRegs_62_T_7) @[block_division.scala 209:47]
    node _dotProductRegs_62_T_9 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_62_T_10 = tail(_dotProductRegs_62_T_9, 1) @[block_division.scala 209:78]
    node _dotProductRegs_62_T_11 = mux(_dotProductRegs_62_T_8, _dotProductRegs_62_T_10, multiplication_126) @[block_division.scala 209:31]
    dotProductRegs_1[62] <= _dotProductRegs_62_T_11 @[block_division.scala 209:25]
    node _signs_62_T_1 = xor(signReg_126, io.sign_b[126]) @[block_division.scala 210:27]
    signs_1[62] <= _signs_62_T_1 @[block_division.scala 210:16]
    node _two_complement_62_T_7 = eq(signs_1[62], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_62_T_8 = cat(UInt<1>("h0"), dotProductRegs_1[62]) @[block_division.scala 213:16]
    node _two_complement_62_T_9 = not(_two_complement_62_T_8) @[block_division.scala 213:10]
    node _two_complement_62_T_10 = add(_two_complement_62_T_9, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_62_T_11 = tail(_two_complement_62_T_10, 1) @[block_division.scala 213:38]
    node _two_complement_62_T_12 = cat(UInt<1>("h0"), dotProductRegs_1[62]) @[block_division.scala 214:14]
    node _two_complement_62_T_13 = mux(_two_complement_62_T_7, _two_complement_62_T_11, _two_complement_62_T_12) @[block_division.scala 211:31]
    two_complement_1[62] <= _two_complement_62_T_13 @[block_division.scala 211:25]
    node _two_complement_buffer_62_T_1 = asSInt(two_complement_1[62]) @[block_division.scala 216:53]
    two_complement_buffer_1[62] <= _two_complement_buffer_62_T_1 @[block_division.scala 216:32]
    reg multiplierReg_127 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_127 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_127 <= io.sign_a[127] @[block_division.scala 206:15]
    multiplierReg_127 <= io.man_a[127] @[block_division.scala 207:21]
    node multiplication_127 = mul(multiplierReg_127, io.man_b[127]) @[block_division.scala 208:42]
    node _dotProductRegs_63_T_6 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_63_T_7 = tail(_dotProductRegs_63_T_6, 1) @[block_division.scala 209:60]
    node _dotProductRegs_63_T_8 = gt(multiplication_127, _dotProductRegs_63_T_7) @[block_division.scala 209:47]
    node _dotProductRegs_63_T_9 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_63_T_10 = tail(_dotProductRegs_63_T_9, 1) @[block_division.scala 209:78]
    node _dotProductRegs_63_T_11 = mux(_dotProductRegs_63_T_8, _dotProductRegs_63_T_10, multiplication_127) @[block_division.scala 209:31]
    dotProductRegs_1[63] <= _dotProductRegs_63_T_11 @[block_division.scala 209:25]
    node _signs_63_T_1 = xor(signReg_127, io.sign_b[127]) @[block_division.scala 210:27]
    signs_1[63] <= _signs_63_T_1 @[block_division.scala 210:16]
    node _two_complement_63_T_7 = eq(signs_1[63], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_63_T_8 = cat(UInt<1>("h0"), dotProductRegs_1[63]) @[block_division.scala 213:16]
    node _two_complement_63_T_9 = not(_two_complement_63_T_8) @[block_division.scala 213:10]
    node _two_complement_63_T_10 = add(_two_complement_63_T_9, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_63_T_11 = tail(_two_complement_63_T_10, 1) @[block_division.scala 213:38]
    node _two_complement_63_T_12 = cat(UInt<1>("h0"), dotProductRegs_1[63]) @[block_division.scala 214:14]
    node _two_complement_63_T_13 = mux(_two_complement_63_T_7, _two_complement_63_T_11, _two_complement_63_T_12) @[block_division.scala 211:31]
    two_complement_1[63] <= _two_complement_63_T_13 @[block_division.scala 211:25]
    node _two_complement_buffer_63_T_1 = asSInt(two_complement_1[63]) @[block_division.scala 216:53]
    two_complement_buffer_1[63] <= _two_complement_buffer_63_T_1 @[block_division.scala 216:32]
    node _sum_T_62 = add(two_complement_buffer_1[0], two_complement_buffer_1[1]) @[block_division.scala 218:46]
    node _sum_T_63 = add(_sum_T_62, two_complement_buffer_1[2]) @[block_division.scala 218:46]
    node _sum_T_64 = add(_sum_T_63, two_complement_buffer_1[3]) @[block_division.scala 218:46]
    node _sum_T_65 = add(_sum_T_64, two_complement_buffer_1[4]) @[block_division.scala 218:46]
    node _sum_T_66 = add(_sum_T_65, two_complement_buffer_1[5]) @[block_division.scala 218:46]
    node _sum_T_67 = add(_sum_T_66, two_complement_buffer_1[6]) @[block_division.scala 218:46]
    node _sum_T_68 = add(_sum_T_67, two_complement_buffer_1[7]) @[block_division.scala 218:46]
    node _sum_T_69 = add(_sum_T_68, two_complement_buffer_1[8]) @[block_division.scala 218:46]
    node _sum_T_70 = add(_sum_T_69, two_complement_buffer_1[9]) @[block_division.scala 218:46]
    node _sum_T_71 = add(_sum_T_70, two_complement_buffer_1[10]) @[block_division.scala 218:46]
    node _sum_T_72 = add(_sum_T_71, two_complement_buffer_1[11]) @[block_division.scala 218:46]
    node _sum_T_73 = add(_sum_T_72, two_complement_buffer_1[12]) @[block_division.scala 218:46]
    node _sum_T_74 = add(_sum_T_73, two_complement_buffer_1[13]) @[block_division.scala 218:46]
    node _sum_T_75 = add(_sum_T_74, two_complement_buffer_1[14]) @[block_division.scala 218:46]
    node _sum_T_76 = add(_sum_T_75, two_complement_buffer_1[15]) @[block_division.scala 218:46]
    node _sum_T_77 = add(_sum_T_76, two_complement_buffer_1[16]) @[block_division.scala 218:46]
    node _sum_T_78 = add(_sum_T_77, two_complement_buffer_1[17]) @[block_division.scala 218:46]
    node _sum_T_79 = add(_sum_T_78, two_complement_buffer_1[18]) @[block_division.scala 218:46]
    node _sum_T_80 = add(_sum_T_79, two_complement_buffer_1[19]) @[block_division.scala 218:46]
    node _sum_T_81 = add(_sum_T_80, two_complement_buffer_1[20]) @[block_division.scala 218:46]
    node _sum_T_82 = add(_sum_T_81, two_complement_buffer_1[21]) @[block_division.scala 218:46]
    node _sum_T_83 = add(_sum_T_82, two_complement_buffer_1[22]) @[block_division.scala 218:46]
    node _sum_T_84 = add(_sum_T_83, two_complement_buffer_1[23]) @[block_division.scala 218:46]
    node _sum_T_85 = add(_sum_T_84, two_complement_buffer_1[24]) @[block_division.scala 218:46]
    node _sum_T_86 = add(_sum_T_85, two_complement_buffer_1[25]) @[block_division.scala 218:46]
    node _sum_T_87 = add(_sum_T_86, two_complement_buffer_1[26]) @[block_division.scala 218:46]
    node _sum_T_88 = add(_sum_T_87, two_complement_buffer_1[27]) @[block_division.scala 218:46]
    node _sum_T_89 = add(_sum_T_88, two_complement_buffer_1[28]) @[block_division.scala 218:46]
    node _sum_T_90 = add(_sum_T_89, two_complement_buffer_1[29]) @[block_division.scala 218:46]
    node _sum_T_91 = add(_sum_T_90, two_complement_buffer_1[30]) @[block_division.scala 218:46]
    node _sum_T_92 = add(_sum_T_91, two_complement_buffer_1[31]) @[block_division.scala 218:46]
    node _sum_T_93 = add(_sum_T_92, two_complement_buffer_1[32]) @[block_division.scala 218:46]
    node _sum_T_94 = add(_sum_T_93, two_complement_buffer_1[33]) @[block_division.scala 218:46]
    node _sum_T_95 = add(_sum_T_94, two_complement_buffer_1[34]) @[block_division.scala 218:46]
    node _sum_T_96 = add(_sum_T_95, two_complement_buffer_1[35]) @[block_division.scala 218:46]
    node _sum_T_97 = add(_sum_T_96, two_complement_buffer_1[36]) @[block_division.scala 218:46]
    node _sum_T_98 = add(_sum_T_97, two_complement_buffer_1[37]) @[block_division.scala 218:46]
    node _sum_T_99 = add(_sum_T_98, two_complement_buffer_1[38]) @[block_division.scala 218:46]
    node _sum_T_100 = add(_sum_T_99, two_complement_buffer_1[39]) @[block_division.scala 218:46]
    node _sum_T_101 = add(_sum_T_100, two_complement_buffer_1[40]) @[block_division.scala 218:46]
    node _sum_T_102 = add(_sum_T_101, two_complement_buffer_1[41]) @[block_division.scala 218:46]
    node _sum_T_103 = add(_sum_T_102, two_complement_buffer_1[42]) @[block_division.scala 218:46]
    node _sum_T_104 = add(_sum_T_103, two_complement_buffer_1[43]) @[block_division.scala 218:46]
    node _sum_T_105 = add(_sum_T_104, two_complement_buffer_1[44]) @[block_division.scala 218:46]
    node _sum_T_106 = add(_sum_T_105, two_complement_buffer_1[45]) @[block_division.scala 218:46]
    node _sum_T_107 = add(_sum_T_106, two_complement_buffer_1[46]) @[block_division.scala 218:46]
    node _sum_T_108 = add(_sum_T_107, two_complement_buffer_1[47]) @[block_division.scala 218:46]
    node _sum_T_109 = add(_sum_T_108, two_complement_buffer_1[48]) @[block_division.scala 218:46]
    node _sum_T_110 = add(_sum_T_109, two_complement_buffer_1[49]) @[block_division.scala 218:46]
    node _sum_T_111 = add(_sum_T_110, two_complement_buffer_1[50]) @[block_division.scala 218:46]
    node _sum_T_112 = add(_sum_T_111, two_complement_buffer_1[51]) @[block_division.scala 218:46]
    node _sum_T_113 = add(_sum_T_112, two_complement_buffer_1[52]) @[block_division.scala 218:46]
    node _sum_T_114 = add(_sum_T_113, two_complement_buffer_1[53]) @[block_division.scala 218:46]
    node _sum_T_115 = add(_sum_T_114, two_complement_buffer_1[54]) @[block_division.scala 218:46]
    node _sum_T_116 = add(_sum_T_115, two_complement_buffer_1[55]) @[block_division.scala 218:46]
    node _sum_T_117 = add(_sum_T_116, two_complement_buffer_1[56]) @[block_division.scala 218:46]
    node _sum_T_118 = add(_sum_T_117, two_complement_buffer_1[57]) @[block_division.scala 218:46]
    node _sum_T_119 = add(_sum_T_118, two_complement_buffer_1[58]) @[block_division.scala 218:46]
    node _sum_T_120 = add(_sum_T_119, two_complement_buffer_1[59]) @[block_division.scala 218:46]
    node _sum_T_121 = add(_sum_T_120, two_complement_buffer_1[60]) @[block_division.scala 218:46]
    node _sum_T_122 = add(_sum_T_121, two_complement_buffer_1[61]) @[block_division.scala 218:46]
    node _sum_T_123 = add(_sum_T_122, two_complement_buffer_1[62]) @[block_division.scala 218:46]
    node sum_1 = add(_sum_T_123, two_complement_buffer_1[63]) @[block_division.scala 218:46]
    node _acc_1_T = bits(sum_1, 68, 68) @[block_division.scala 219:22]
    node _acc_1_T_1 = eq(_acc_1_T, UInt<1>("h1")) @[block_division.scala 219:44]
    node _acc_1_T_2 = bits(sum_1, 67, 0) @[block_division.scala 219:61]
    node _acc_1_T_3 = not(_acc_1_T_2) @[block_division.scala 219:57]
    node _acc_1_T_4 = add(_acc_1_T_3, UInt<1>("h1")) @[block_division.scala 219:86]
    node _acc_1_T_5 = tail(_acc_1_T_4, 1) @[block_division.scala 219:86]
    node _acc_1_T_6 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 219:106]
    node _acc_1_T_7 = tail(_acc_1_T_6, 1) @[block_division.scala 219:106]
    node _acc_1_T_8 = gt(_acc_1_T_5, _acc_1_T_7) @[block_division.scala 219:93]
    node _acc_1_T_9 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 219:127]
    node _acc_1_T_10 = tail(_acc_1_T_9, 1) @[block_division.scala 219:127]
    node _acc_1_T_11 = not(_acc_1_T_10) @[block_division.scala 219:114]
    node _acc_1_T_12 = add(_acc_1_T_11, UInt<1>("h1")) @[block_division.scala 219:135]
    node _acc_1_T_13 = tail(_acc_1_T_12, 1) @[block_division.scala 219:135]
    node _acc_1_T_14 = bits(sum_1, 68, 0) @[block_division.scala 219:145]
    node _acc_1_T_15 = mux(_acc_1_T_8, _acc_1_T_13, _acc_1_T_14) @[block_division.scala 219:55]
    node _acc_1_T_16 = bits(sum_1, 67, 0) @[block_division.scala 220:10]
    node _acc_1_T_17 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 220:49]
    node _acc_1_T_18 = tail(_acc_1_T_17, 1) @[block_division.scala 220:49]
    node _acc_1_T_19 = gt(_acc_1_T_16, _acc_1_T_18) @[block_division.scala 220:36]
    node _acc_1_T_20 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 220:67]
    node _acc_1_T_21 = tail(_acc_1_T_20, 1) @[block_division.scala 220:67]
    node _acc_1_T_22 = bits(sum_1, 68, 0) @[block_division.scala 220:77]
    node _acc_1_T_23 = mux(_acc_1_T_19, _acc_1_T_21, _acc_1_T_22) @[block_division.scala 220:6]
    node _acc_1_T_24 = mux(_acc_1_T_1, _acc_1_T_15, _acc_1_T_23) @[block_division.scala 219:18]
    acc_1 <= _acc_1_T_24 @[block_division.scala 219:12]
    node _exp_output_2_T = add(io.exp_a[2], io.exp_b[2]) @[block_division.scala 198:34]
    exp_output_2 <= _exp_output_2_T @[block_division.scala 198:19]
    reg dotProductRegs_2 : UInt<5>[64], clock with :
      reset => (UInt<1>("h0"), dotProductRegs_2) @[block_division.scala 199:29]
    reg signs_2 : UInt<1>[64], clock with :
      reset => (UInt<1>("h0"), signs_2) @[block_division.scala 200:20]
    reg two_complement_2 : UInt<6>[64], clock with :
      reset => (UInt<1>("h0"), two_complement_2) @[block_division.scala 201:29]
    reg two_complement_buffer_2 : SInt<6>[64], clock with :
      reset => (UInt<1>("h0"), two_complement_buffer_2) @[block_division.scala 202:36]
    reg multiplierReg_128 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_128 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_128 <= io.sign_a[128] @[block_division.scala 206:15]
    multiplierReg_128 <= io.man_a[128] @[block_division.scala 207:21]
    node multiplication_128 = mul(multiplierReg_128, io.man_b[128]) @[block_division.scala 208:42]
    node _dotProductRegs_0_T_12 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_0_T_13 = tail(_dotProductRegs_0_T_12, 1) @[block_division.scala 209:60]
    node _dotProductRegs_0_T_14 = gt(multiplication_128, _dotProductRegs_0_T_13) @[block_division.scala 209:47]
    node _dotProductRegs_0_T_15 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_0_T_16 = tail(_dotProductRegs_0_T_15, 1) @[block_division.scala 209:78]
    node _dotProductRegs_0_T_17 = mux(_dotProductRegs_0_T_14, _dotProductRegs_0_T_16, multiplication_128) @[block_division.scala 209:31]
    dotProductRegs_2[0] <= _dotProductRegs_0_T_17 @[block_division.scala 209:25]
    node _signs_0_T_2 = xor(signReg_128, io.sign_b[128]) @[block_division.scala 210:27]
    signs_2[0] <= _signs_0_T_2 @[block_division.scala 210:16]
    node _two_complement_0_T_14 = eq(signs_2[0], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_0_T_15 = cat(UInt<1>("h0"), dotProductRegs_2[0]) @[block_division.scala 213:16]
    node _two_complement_0_T_16 = not(_two_complement_0_T_15) @[block_division.scala 213:10]
    node _two_complement_0_T_17 = add(_two_complement_0_T_16, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_0_T_18 = tail(_two_complement_0_T_17, 1) @[block_division.scala 213:38]
    node _two_complement_0_T_19 = cat(UInt<1>("h0"), dotProductRegs_2[0]) @[block_division.scala 214:14]
    node _two_complement_0_T_20 = mux(_two_complement_0_T_14, _two_complement_0_T_18, _two_complement_0_T_19) @[block_division.scala 211:31]
    two_complement_2[0] <= _two_complement_0_T_20 @[block_division.scala 211:25]
    node _two_complement_buffer_0_T_2 = asSInt(two_complement_2[0]) @[block_division.scala 216:53]
    two_complement_buffer_2[0] <= _two_complement_buffer_0_T_2 @[block_division.scala 216:32]
    reg multiplierReg_129 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_129 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_129 <= io.sign_a[129] @[block_division.scala 206:15]
    multiplierReg_129 <= io.man_a[129] @[block_division.scala 207:21]
    node multiplication_129 = mul(multiplierReg_129, io.man_b[129]) @[block_division.scala 208:42]
    node _dotProductRegs_1_T_12 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_1_T_13 = tail(_dotProductRegs_1_T_12, 1) @[block_division.scala 209:60]
    node _dotProductRegs_1_T_14 = gt(multiplication_129, _dotProductRegs_1_T_13) @[block_division.scala 209:47]
    node _dotProductRegs_1_T_15 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_1_T_16 = tail(_dotProductRegs_1_T_15, 1) @[block_division.scala 209:78]
    node _dotProductRegs_1_T_17 = mux(_dotProductRegs_1_T_14, _dotProductRegs_1_T_16, multiplication_129) @[block_division.scala 209:31]
    dotProductRegs_2[1] <= _dotProductRegs_1_T_17 @[block_division.scala 209:25]
    node _signs_1_T_2 = xor(signReg_129, io.sign_b[129]) @[block_division.scala 210:27]
    signs_2[1] <= _signs_1_T_2 @[block_division.scala 210:16]
    node _two_complement_1_T_14 = eq(signs_2[1], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_1_T_15 = cat(UInt<1>("h0"), dotProductRegs_2[1]) @[block_division.scala 213:16]
    node _two_complement_1_T_16 = not(_two_complement_1_T_15) @[block_division.scala 213:10]
    node _two_complement_1_T_17 = add(_two_complement_1_T_16, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_1_T_18 = tail(_two_complement_1_T_17, 1) @[block_division.scala 213:38]
    node _two_complement_1_T_19 = cat(UInt<1>("h0"), dotProductRegs_2[1]) @[block_division.scala 214:14]
    node _two_complement_1_T_20 = mux(_two_complement_1_T_14, _two_complement_1_T_18, _two_complement_1_T_19) @[block_division.scala 211:31]
    two_complement_2[1] <= _two_complement_1_T_20 @[block_division.scala 211:25]
    node _two_complement_buffer_1_T_2 = asSInt(two_complement_2[1]) @[block_division.scala 216:53]
    two_complement_buffer_2[1] <= _two_complement_buffer_1_T_2 @[block_division.scala 216:32]
    reg multiplierReg_130 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_130 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_130 <= io.sign_a[130] @[block_division.scala 206:15]
    multiplierReg_130 <= io.man_a[130] @[block_division.scala 207:21]
    node multiplication_130 = mul(multiplierReg_130, io.man_b[130]) @[block_division.scala 208:42]
    node _dotProductRegs_2_T_12 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_2_T_13 = tail(_dotProductRegs_2_T_12, 1) @[block_division.scala 209:60]
    node _dotProductRegs_2_T_14 = gt(multiplication_130, _dotProductRegs_2_T_13) @[block_division.scala 209:47]
    node _dotProductRegs_2_T_15 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_2_T_16 = tail(_dotProductRegs_2_T_15, 1) @[block_division.scala 209:78]
    node _dotProductRegs_2_T_17 = mux(_dotProductRegs_2_T_14, _dotProductRegs_2_T_16, multiplication_130) @[block_division.scala 209:31]
    dotProductRegs_2[2] <= _dotProductRegs_2_T_17 @[block_division.scala 209:25]
    node _signs_2_T_2 = xor(signReg_130, io.sign_b[130]) @[block_division.scala 210:27]
    signs_2[2] <= _signs_2_T_2 @[block_division.scala 210:16]
    node _two_complement_2_T_14 = eq(signs_2[2], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_2_T_15 = cat(UInt<1>("h0"), dotProductRegs_2[2]) @[block_division.scala 213:16]
    node _two_complement_2_T_16 = not(_two_complement_2_T_15) @[block_division.scala 213:10]
    node _two_complement_2_T_17 = add(_two_complement_2_T_16, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_2_T_18 = tail(_two_complement_2_T_17, 1) @[block_division.scala 213:38]
    node _two_complement_2_T_19 = cat(UInt<1>("h0"), dotProductRegs_2[2]) @[block_division.scala 214:14]
    node _two_complement_2_T_20 = mux(_two_complement_2_T_14, _two_complement_2_T_18, _two_complement_2_T_19) @[block_division.scala 211:31]
    two_complement_2[2] <= _two_complement_2_T_20 @[block_division.scala 211:25]
    node _two_complement_buffer_2_T_2 = asSInt(two_complement_2[2]) @[block_division.scala 216:53]
    two_complement_buffer_2[2] <= _two_complement_buffer_2_T_2 @[block_division.scala 216:32]
    reg multiplierReg_131 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_131 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_131 <= io.sign_a[131] @[block_division.scala 206:15]
    multiplierReg_131 <= io.man_a[131] @[block_division.scala 207:21]
    node multiplication_131 = mul(multiplierReg_131, io.man_b[131]) @[block_division.scala 208:42]
    node _dotProductRegs_3_T_12 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_3_T_13 = tail(_dotProductRegs_3_T_12, 1) @[block_division.scala 209:60]
    node _dotProductRegs_3_T_14 = gt(multiplication_131, _dotProductRegs_3_T_13) @[block_division.scala 209:47]
    node _dotProductRegs_3_T_15 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_3_T_16 = tail(_dotProductRegs_3_T_15, 1) @[block_division.scala 209:78]
    node _dotProductRegs_3_T_17 = mux(_dotProductRegs_3_T_14, _dotProductRegs_3_T_16, multiplication_131) @[block_division.scala 209:31]
    dotProductRegs_2[3] <= _dotProductRegs_3_T_17 @[block_division.scala 209:25]
    node _signs_3_T_2 = xor(signReg_131, io.sign_b[131]) @[block_division.scala 210:27]
    signs_2[3] <= _signs_3_T_2 @[block_division.scala 210:16]
    node _two_complement_3_T_14 = eq(signs_2[3], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_3_T_15 = cat(UInt<1>("h0"), dotProductRegs_2[3]) @[block_division.scala 213:16]
    node _two_complement_3_T_16 = not(_two_complement_3_T_15) @[block_division.scala 213:10]
    node _two_complement_3_T_17 = add(_two_complement_3_T_16, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_3_T_18 = tail(_two_complement_3_T_17, 1) @[block_division.scala 213:38]
    node _two_complement_3_T_19 = cat(UInt<1>("h0"), dotProductRegs_2[3]) @[block_division.scala 214:14]
    node _two_complement_3_T_20 = mux(_two_complement_3_T_14, _two_complement_3_T_18, _two_complement_3_T_19) @[block_division.scala 211:31]
    two_complement_2[3] <= _two_complement_3_T_20 @[block_division.scala 211:25]
    node _two_complement_buffer_3_T_2 = asSInt(two_complement_2[3]) @[block_division.scala 216:53]
    two_complement_buffer_2[3] <= _two_complement_buffer_3_T_2 @[block_division.scala 216:32]
    reg multiplierReg_132 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_132 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_132 <= io.sign_a[132] @[block_division.scala 206:15]
    multiplierReg_132 <= io.man_a[132] @[block_division.scala 207:21]
    node multiplication_132 = mul(multiplierReg_132, io.man_b[132]) @[block_division.scala 208:42]
    node _dotProductRegs_4_T_12 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_4_T_13 = tail(_dotProductRegs_4_T_12, 1) @[block_division.scala 209:60]
    node _dotProductRegs_4_T_14 = gt(multiplication_132, _dotProductRegs_4_T_13) @[block_division.scala 209:47]
    node _dotProductRegs_4_T_15 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_4_T_16 = tail(_dotProductRegs_4_T_15, 1) @[block_division.scala 209:78]
    node _dotProductRegs_4_T_17 = mux(_dotProductRegs_4_T_14, _dotProductRegs_4_T_16, multiplication_132) @[block_division.scala 209:31]
    dotProductRegs_2[4] <= _dotProductRegs_4_T_17 @[block_division.scala 209:25]
    node _signs_4_T_2 = xor(signReg_132, io.sign_b[132]) @[block_division.scala 210:27]
    signs_2[4] <= _signs_4_T_2 @[block_division.scala 210:16]
    node _two_complement_4_T_14 = eq(signs_2[4], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_4_T_15 = cat(UInt<1>("h0"), dotProductRegs_2[4]) @[block_division.scala 213:16]
    node _two_complement_4_T_16 = not(_two_complement_4_T_15) @[block_division.scala 213:10]
    node _two_complement_4_T_17 = add(_two_complement_4_T_16, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_4_T_18 = tail(_two_complement_4_T_17, 1) @[block_division.scala 213:38]
    node _two_complement_4_T_19 = cat(UInt<1>("h0"), dotProductRegs_2[4]) @[block_division.scala 214:14]
    node _two_complement_4_T_20 = mux(_two_complement_4_T_14, _two_complement_4_T_18, _two_complement_4_T_19) @[block_division.scala 211:31]
    two_complement_2[4] <= _two_complement_4_T_20 @[block_division.scala 211:25]
    node _two_complement_buffer_4_T_2 = asSInt(two_complement_2[4]) @[block_division.scala 216:53]
    two_complement_buffer_2[4] <= _two_complement_buffer_4_T_2 @[block_division.scala 216:32]
    reg multiplierReg_133 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_133 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_133 <= io.sign_a[133] @[block_division.scala 206:15]
    multiplierReg_133 <= io.man_a[133] @[block_division.scala 207:21]
    node multiplication_133 = mul(multiplierReg_133, io.man_b[133]) @[block_division.scala 208:42]
    node _dotProductRegs_5_T_12 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_5_T_13 = tail(_dotProductRegs_5_T_12, 1) @[block_division.scala 209:60]
    node _dotProductRegs_5_T_14 = gt(multiplication_133, _dotProductRegs_5_T_13) @[block_division.scala 209:47]
    node _dotProductRegs_5_T_15 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_5_T_16 = tail(_dotProductRegs_5_T_15, 1) @[block_division.scala 209:78]
    node _dotProductRegs_5_T_17 = mux(_dotProductRegs_5_T_14, _dotProductRegs_5_T_16, multiplication_133) @[block_division.scala 209:31]
    dotProductRegs_2[5] <= _dotProductRegs_5_T_17 @[block_division.scala 209:25]
    node _signs_5_T_2 = xor(signReg_133, io.sign_b[133]) @[block_division.scala 210:27]
    signs_2[5] <= _signs_5_T_2 @[block_division.scala 210:16]
    node _two_complement_5_T_14 = eq(signs_2[5], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_5_T_15 = cat(UInt<1>("h0"), dotProductRegs_2[5]) @[block_division.scala 213:16]
    node _two_complement_5_T_16 = not(_two_complement_5_T_15) @[block_division.scala 213:10]
    node _two_complement_5_T_17 = add(_two_complement_5_T_16, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_5_T_18 = tail(_two_complement_5_T_17, 1) @[block_division.scala 213:38]
    node _two_complement_5_T_19 = cat(UInt<1>("h0"), dotProductRegs_2[5]) @[block_division.scala 214:14]
    node _two_complement_5_T_20 = mux(_two_complement_5_T_14, _two_complement_5_T_18, _two_complement_5_T_19) @[block_division.scala 211:31]
    two_complement_2[5] <= _two_complement_5_T_20 @[block_division.scala 211:25]
    node _two_complement_buffer_5_T_2 = asSInt(two_complement_2[5]) @[block_division.scala 216:53]
    two_complement_buffer_2[5] <= _two_complement_buffer_5_T_2 @[block_division.scala 216:32]
    reg multiplierReg_134 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_134 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_134 <= io.sign_a[134] @[block_division.scala 206:15]
    multiplierReg_134 <= io.man_a[134] @[block_division.scala 207:21]
    node multiplication_134 = mul(multiplierReg_134, io.man_b[134]) @[block_division.scala 208:42]
    node _dotProductRegs_6_T_12 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_6_T_13 = tail(_dotProductRegs_6_T_12, 1) @[block_division.scala 209:60]
    node _dotProductRegs_6_T_14 = gt(multiplication_134, _dotProductRegs_6_T_13) @[block_division.scala 209:47]
    node _dotProductRegs_6_T_15 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_6_T_16 = tail(_dotProductRegs_6_T_15, 1) @[block_division.scala 209:78]
    node _dotProductRegs_6_T_17 = mux(_dotProductRegs_6_T_14, _dotProductRegs_6_T_16, multiplication_134) @[block_division.scala 209:31]
    dotProductRegs_2[6] <= _dotProductRegs_6_T_17 @[block_division.scala 209:25]
    node _signs_6_T_2 = xor(signReg_134, io.sign_b[134]) @[block_division.scala 210:27]
    signs_2[6] <= _signs_6_T_2 @[block_division.scala 210:16]
    node _two_complement_6_T_14 = eq(signs_2[6], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_6_T_15 = cat(UInt<1>("h0"), dotProductRegs_2[6]) @[block_division.scala 213:16]
    node _two_complement_6_T_16 = not(_two_complement_6_T_15) @[block_division.scala 213:10]
    node _two_complement_6_T_17 = add(_two_complement_6_T_16, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_6_T_18 = tail(_two_complement_6_T_17, 1) @[block_division.scala 213:38]
    node _two_complement_6_T_19 = cat(UInt<1>("h0"), dotProductRegs_2[6]) @[block_division.scala 214:14]
    node _two_complement_6_T_20 = mux(_two_complement_6_T_14, _two_complement_6_T_18, _two_complement_6_T_19) @[block_division.scala 211:31]
    two_complement_2[6] <= _two_complement_6_T_20 @[block_division.scala 211:25]
    node _two_complement_buffer_6_T_2 = asSInt(two_complement_2[6]) @[block_division.scala 216:53]
    two_complement_buffer_2[6] <= _two_complement_buffer_6_T_2 @[block_division.scala 216:32]
    reg multiplierReg_135 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_135 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_135 <= io.sign_a[135] @[block_division.scala 206:15]
    multiplierReg_135 <= io.man_a[135] @[block_division.scala 207:21]
    node multiplication_135 = mul(multiplierReg_135, io.man_b[135]) @[block_division.scala 208:42]
    node _dotProductRegs_7_T_12 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_7_T_13 = tail(_dotProductRegs_7_T_12, 1) @[block_division.scala 209:60]
    node _dotProductRegs_7_T_14 = gt(multiplication_135, _dotProductRegs_7_T_13) @[block_division.scala 209:47]
    node _dotProductRegs_7_T_15 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_7_T_16 = tail(_dotProductRegs_7_T_15, 1) @[block_division.scala 209:78]
    node _dotProductRegs_7_T_17 = mux(_dotProductRegs_7_T_14, _dotProductRegs_7_T_16, multiplication_135) @[block_division.scala 209:31]
    dotProductRegs_2[7] <= _dotProductRegs_7_T_17 @[block_division.scala 209:25]
    node _signs_7_T_2 = xor(signReg_135, io.sign_b[135]) @[block_division.scala 210:27]
    signs_2[7] <= _signs_7_T_2 @[block_division.scala 210:16]
    node _two_complement_7_T_14 = eq(signs_2[7], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_7_T_15 = cat(UInt<1>("h0"), dotProductRegs_2[7]) @[block_division.scala 213:16]
    node _two_complement_7_T_16 = not(_two_complement_7_T_15) @[block_division.scala 213:10]
    node _two_complement_7_T_17 = add(_two_complement_7_T_16, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_7_T_18 = tail(_two_complement_7_T_17, 1) @[block_division.scala 213:38]
    node _two_complement_7_T_19 = cat(UInt<1>("h0"), dotProductRegs_2[7]) @[block_division.scala 214:14]
    node _two_complement_7_T_20 = mux(_two_complement_7_T_14, _two_complement_7_T_18, _two_complement_7_T_19) @[block_division.scala 211:31]
    two_complement_2[7] <= _two_complement_7_T_20 @[block_division.scala 211:25]
    node _two_complement_buffer_7_T_2 = asSInt(two_complement_2[7]) @[block_division.scala 216:53]
    two_complement_buffer_2[7] <= _two_complement_buffer_7_T_2 @[block_division.scala 216:32]
    reg multiplierReg_136 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_136 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_136 <= io.sign_a[136] @[block_division.scala 206:15]
    multiplierReg_136 <= io.man_a[136] @[block_division.scala 207:21]
    node multiplication_136 = mul(multiplierReg_136, io.man_b[136]) @[block_division.scala 208:42]
    node _dotProductRegs_8_T_12 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_8_T_13 = tail(_dotProductRegs_8_T_12, 1) @[block_division.scala 209:60]
    node _dotProductRegs_8_T_14 = gt(multiplication_136, _dotProductRegs_8_T_13) @[block_division.scala 209:47]
    node _dotProductRegs_8_T_15 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_8_T_16 = tail(_dotProductRegs_8_T_15, 1) @[block_division.scala 209:78]
    node _dotProductRegs_8_T_17 = mux(_dotProductRegs_8_T_14, _dotProductRegs_8_T_16, multiplication_136) @[block_division.scala 209:31]
    dotProductRegs_2[8] <= _dotProductRegs_8_T_17 @[block_division.scala 209:25]
    node _signs_8_T_2 = xor(signReg_136, io.sign_b[136]) @[block_division.scala 210:27]
    signs_2[8] <= _signs_8_T_2 @[block_division.scala 210:16]
    node _two_complement_8_T_14 = eq(signs_2[8], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_8_T_15 = cat(UInt<1>("h0"), dotProductRegs_2[8]) @[block_division.scala 213:16]
    node _two_complement_8_T_16 = not(_two_complement_8_T_15) @[block_division.scala 213:10]
    node _two_complement_8_T_17 = add(_two_complement_8_T_16, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_8_T_18 = tail(_two_complement_8_T_17, 1) @[block_division.scala 213:38]
    node _two_complement_8_T_19 = cat(UInt<1>("h0"), dotProductRegs_2[8]) @[block_division.scala 214:14]
    node _two_complement_8_T_20 = mux(_two_complement_8_T_14, _two_complement_8_T_18, _two_complement_8_T_19) @[block_division.scala 211:31]
    two_complement_2[8] <= _two_complement_8_T_20 @[block_division.scala 211:25]
    node _two_complement_buffer_8_T_2 = asSInt(two_complement_2[8]) @[block_division.scala 216:53]
    two_complement_buffer_2[8] <= _two_complement_buffer_8_T_2 @[block_division.scala 216:32]
    reg multiplierReg_137 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_137 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_137 <= io.sign_a[137] @[block_division.scala 206:15]
    multiplierReg_137 <= io.man_a[137] @[block_division.scala 207:21]
    node multiplication_137 = mul(multiplierReg_137, io.man_b[137]) @[block_division.scala 208:42]
    node _dotProductRegs_9_T_12 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_9_T_13 = tail(_dotProductRegs_9_T_12, 1) @[block_division.scala 209:60]
    node _dotProductRegs_9_T_14 = gt(multiplication_137, _dotProductRegs_9_T_13) @[block_division.scala 209:47]
    node _dotProductRegs_9_T_15 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_9_T_16 = tail(_dotProductRegs_9_T_15, 1) @[block_division.scala 209:78]
    node _dotProductRegs_9_T_17 = mux(_dotProductRegs_9_T_14, _dotProductRegs_9_T_16, multiplication_137) @[block_division.scala 209:31]
    dotProductRegs_2[9] <= _dotProductRegs_9_T_17 @[block_division.scala 209:25]
    node _signs_9_T_2 = xor(signReg_137, io.sign_b[137]) @[block_division.scala 210:27]
    signs_2[9] <= _signs_9_T_2 @[block_division.scala 210:16]
    node _two_complement_9_T_14 = eq(signs_2[9], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_9_T_15 = cat(UInt<1>("h0"), dotProductRegs_2[9]) @[block_division.scala 213:16]
    node _two_complement_9_T_16 = not(_two_complement_9_T_15) @[block_division.scala 213:10]
    node _two_complement_9_T_17 = add(_two_complement_9_T_16, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_9_T_18 = tail(_two_complement_9_T_17, 1) @[block_division.scala 213:38]
    node _two_complement_9_T_19 = cat(UInt<1>("h0"), dotProductRegs_2[9]) @[block_division.scala 214:14]
    node _two_complement_9_T_20 = mux(_two_complement_9_T_14, _two_complement_9_T_18, _two_complement_9_T_19) @[block_division.scala 211:31]
    two_complement_2[9] <= _two_complement_9_T_20 @[block_division.scala 211:25]
    node _two_complement_buffer_9_T_2 = asSInt(two_complement_2[9]) @[block_division.scala 216:53]
    two_complement_buffer_2[9] <= _two_complement_buffer_9_T_2 @[block_division.scala 216:32]
    reg multiplierReg_138 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_138 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_138 <= io.sign_a[138] @[block_division.scala 206:15]
    multiplierReg_138 <= io.man_a[138] @[block_division.scala 207:21]
    node multiplication_138 = mul(multiplierReg_138, io.man_b[138]) @[block_division.scala 208:42]
    node _dotProductRegs_10_T_12 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_10_T_13 = tail(_dotProductRegs_10_T_12, 1) @[block_division.scala 209:60]
    node _dotProductRegs_10_T_14 = gt(multiplication_138, _dotProductRegs_10_T_13) @[block_division.scala 209:47]
    node _dotProductRegs_10_T_15 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_10_T_16 = tail(_dotProductRegs_10_T_15, 1) @[block_division.scala 209:78]
    node _dotProductRegs_10_T_17 = mux(_dotProductRegs_10_T_14, _dotProductRegs_10_T_16, multiplication_138) @[block_division.scala 209:31]
    dotProductRegs_2[10] <= _dotProductRegs_10_T_17 @[block_division.scala 209:25]
    node _signs_10_T_2 = xor(signReg_138, io.sign_b[138]) @[block_division.scala 210:27]
    signs_2[10] <= _signs_10_T_2 @[block_division.scala 210:16]
    node _two_complement_10_T_14 = eq(signs_2[10], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_10_T_15 = cat(UInt<1>("h0"), dotProductRegs_2[10]) @[block_division.scala 213:16]
    node _two_complement_10_T_16 = not(_two_complement_10_T_15) @[block_division.scala 213:10]
    node _two_complement_10_T_17 = add(_two_complement_10_T_16, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_10_T_18 = tail(_two_complement_10_T_17, 1) @[block_division.scala 213:38]
    node _two_complement_10_T_19 = cat(UInt<1>("h0"), dotProductRegs_2[10]) @[block_division.scala 214:14]
    node _two_complement_10_T_20 = mux(_two_complement_10_T_14, _two_complement_10_T_18, _two_complement_10_T_19) @[block_division.scala 211:31]
    two_complement_2[10] <= _two_complement_10_T_20 @[block_division.scala 211:25]
    node _two_complement_buffer_10_T_2 = asSInt(two_complement_2[10]) @[block_division.scala 216:53]
    two_complement_buffer_2[10] <= _two_complement_buffer_10_T_2 @[block_division.scala 216:32]
    reg multiplierReg_139 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_139 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_139 <= io.sign_a[139] @[block_division.scala 206:15]
    multiplierReg_139 <= io.man_a[139] @[block_division.scala 207:21]
    node multiplication_139 = mul(multiplierReg_139, io.man_b[139]) @[block_division.scala 208:42]
    node _dotProductRegs_11_T_12 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_11_T_13 = tail(_dotProductRegs_11_T_12, 1) @[block_division.scala 209:60]
    node _dotProductRegs_11_T_14 = gt(multiplication_139, _dotProductRegs_11_T_13) @[block_division.scala 209:47]
    node _dotProductRegs_11_T_15 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_11_T_16 = tail(_dotProductRegs_11_T_15, 1) @[block_division.scala 209:78]
    node _dotProductRegs_11_T_17 = mux(_dotProductRegs_11_T_14, _dotProductRegs_11_T_16, multiplication_139) @[block_division.scala 209:31]
    dotProductRegs_2[11] <= _dotProductRegs_11_T_17 @[block_division.scala 209:25]
    node _signs_11_T_2 = xor(signReg_139, io.sign_b[139]) @[block_division.scala 210:27]
    signs_2[11] <= _signs_11_T_2 @[block_division.scala 210:16]
    node _two_complement_11_T_14 = eq(signs_2[11], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_11_T_15 = cat(UInt<1>("h0"), dotProductRegs_2[11]) @[block_division.scala 213:16]
    node _two_complement_11_T_16 = not(_two_complement_11_T_15) @[block_division.scala 213:10]
    node _two_complement_11_T_17 = add(_two_complement_11_T_16, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_11_T_18 = tail(_two_complement_11_T_17, 1) @[block_division.scala 213:38]
    node _two_complement_11_T_19 = cat(UInt<1>("h0"), dotProductRegs_2[11]) @[block_division.scala 214:14]
    node _two_complement_11_T_20 = mux(_two_complement_11_T_14, _two_complement_11_T_18, _two_complement_11_T_19) @[block_division.scala 211:31]
    two_complement_2[11] <= _two_complement_11_T_20 @[block_division.scala 211:25]
    node _two_complement_buffer_11_T_2 = asSInt(two_complement_2[11]) @[block_division.scala 216:53]
    two_complement_buffer_2[11] <= _two_complement_buffer_11_T_2 @[block_division.scala 216:32]
    reg multiplierReg_140 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_140 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_140 <= io.sign_a[140] @[block_division.scala 206:15]
    multiplierReg_140 <= io.man_a[140] @[block_division.scala 207:21]
    node multiplication_140 = mul(multiplierReg_140, io.man_b[140]) @[block_division.scala 208:42]
    node _dotProductRegs_12_T_12 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_12_T_13 = tail(_dotProductRegs_12_T_12, 1) @[block_division.scala 209:60]
    node _dotProductRegs_12_T_14 = gt(multiplication_140, _dotProductRegs_12_T_13) @[block_division.scala 209:47]
    node _dotProductRegs_12_T_15 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_12_T_16 = tail(_dotProductRegs_12_T_15, 1) @[block_division.scala 209:78]
    node _dotProductRegs_12_T_17 = mux(_dotProductRegs_12_T_14, _dotProductRegs_12_T_16, multiplication_140) @[block_division.scala 209:31]
    dotProductRegs_2[12] <= _dotProductRegs_12_T_17 @[block_division.scala 209:25]
    node _signs_12_T_2 = xor(signReg_140, io.sign_b[140]) @[block_division.scala 210:27]
    signs_2[12] <= _signs_12_T_2 @[block_division.scala 210:16]
    node _two_complement_12_T_14 = eq(signs_2[12], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_12_T_15 = cat(UInt<1>("h0"), dotProductRegs_2[12]) @[block_division.scala 213:16]
    node _two_complement_12_T_16 = not(_two_complement_12_T_15) @[block_division.scala 213:10]
    node _two_complement_12_T_17 = add(_two_complement_12_T_16, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_12_T_18 = tail(_two_complement_12_T_17, 1) @[block_division.scala 213:38]
    node _two_complement_12_T_19 = cat(UInt<1>("h0"), dotProductRegs_2[12]) @[block_division.scala 214:14]
    node _two_complement_12_T_20 = mux(_two_complement_12_T_14, _two_complement_12_T_18, _two_complement_12_T_19) @[block_division.scala 211:31]
    two_complement_2[12] <= _two_complement_12_T_20 @[block_division.scala 211:25]
    node _two_complement_buffer_12_T_2 = asSInt(two_complement_2[12]) @[block_division.scala 216:53]
    two_complement_buffer_2[12] <= _two_complement_buffer_12_T_2 @[block_division.scala 216:32]
    reg multiplierReg_141 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_141 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_141 <= io.sign_a[141] @[block_division.scala 206:15]
    multiplierReg_141 <= io.man_a[141] @[block_division.scala 207:21]
    node multiplication_141 = mul(multiplierReg_141, io.man_b[141]) @[block_division.scala 208:42]
    node _dotProductRegs_13_T_12 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_13_T_13 = tail(_dotProductRegs_13_T_12, 1) @[block_division.scala 209:60]
    node _dotProductRegs_13_T_14 = gt(multiplication_141, _dotProductRegs_13_T_13) @[block_division.scala 209:47]
    node _dotProductRegs_13_T_15 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_13_T_16 = tail(_dotProductRegs_13_T_15, 1) @[block_division.scala 209:78]
    node _dotProductRegs_13_T_17 = mux(_dotProductRegs_13_T_14, _dotProductRegs_13_T_16, multiplication_141) @[block_division.scala 209:31]
    dotProductRegs_2[13] <= _dotProductRegs_13_T_17 @[block_division.scala 209:25]
    node _signs_13_T_2 = xor(signReg_141, io.sign_b[141]) @[block_division.scala 210:27]
    signs_2[13] <= _signs_13_T_2 @[block_division.scala 210:16]
    node _two_complement_13_T_14 = eq(signs_2[13], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_13_T_15 = cat(UInt<1>("h0"), dotProductRegs_2[13]) @[block_division.scala 213:16]
    node _two_complement_13_T_16 = not(_two_complement_13_T_15) @[block_division.scala 213:10]
    node _two_complement_13_T_17 = add(_two_complement_13_T_16, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_13_T_18 = tail(_two_complement_13_T_17, 1) @[block_division.scala 213:38]
    node _two_complement_13_T_19 = cat(UInt<1>("h0"), dotProductRegs_2[13]) @[block_division.scala 214:14]
    node _two_complement_13_T_20 = mux(_two_complement_13_T_14, _two_complement_13_T_18, _two_complement_13_T_19) @[block_division.scala 211:31]
    two_complement_2[13] <= _two_complement_13_T_20 @[block_division.scala 211:25]
    node _two_complement_buffer_13_T_2 = asSInt(two_complement_2[13]) @[block_division.scala 216:53]
    two_complement_buffer_2[13] <= _two_complement_buffer_13_T_2 @[block_division.scala 216:32]
    reg multiplierReg_142 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_142 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_142 <= io.sign_a[142] @[block_division.scala 206:15]
    multiplierReg_142 <= io.man_a[142] @[block_division.scala 207:21]
    node multiplication_142 = mul(multiplierReg_142, io.man_b[142]) @[block_division.scala 208:42]
    node _dotProductRegs_14_T_12 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_14_T_13 = tail(_dotProductRegs_14_T_12, 1) @[block_division.scala 209:60]
    node _dotProductRegs_14_T_14 = gt(multiplication_142, _dotProductRegs_14_T_13) @[block_division.scala 209:47]
    node _dotProductRegs_14_T_15 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_14_T_16 = tail(_dotProductRegs_14_T_15, 1) @[block_division.scala 209:78]
    node _dotProductRegs_14_T_17 = mux(_dotProductRegs_14_T_14, _dotProductRegs_14_T_16, multiplication_142) @[block_division.scala 209:31]
    dotProductRegs_2[14] <= _dotProductRegs_14_T_17 @[block_division.scala 209:25]
    node _signs_14_T_2 = xor(signReg_142, io.sign_b[142]) @[block_division.scala 210:27]
    signs_2[14] <= _signs_14_T_2 @[block_division.scala 210:16]
    node _two_complement_14_T_14 = eq(signs_2[14], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_14_T_15 = cat(UInt<1>("h0"), dotProductRegs_2[14]) @[block_division.scala 213:16]
    node _two_complement_14_T_16 = not(_two_complement_14_T_15) @[block_division.scala 213:10]
    node _two_complement_14_T_17 = add(_two_complement_14_T_16, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_14_T_18 = tail(_two_complement_14_T_17, 1) @[block_division.scala 213:38]
    node _two_complement_14_T_19 = cat(UInt<1>("h0"), dotProductRegs_2[14]) @[block_division.scala 214:14]
    node _two_complement_14_T_20 = mux(_two_complement_14_T_14, _two_complement_14_T_18, _two_complement_14_T_19) @[block_division.scala 211:31]
    two_complement_2[14] <= _two_complement_14_T_20 @[block_division.scala 211:25]
    node _two_complement_buffer_14_T_2 = asSInt(two_complement_2[14]) @[block_division.scala 216:53]
    two_complement_buffer_2[14] <= _two_complement_buffer_14_T_2 @[block_division.scala 216:32]
    reg multiplierReg_143 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_143 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_143 <= io.sign_a[143] @[block_division.scala 206:15]
    multiplierReg_143 <= io.man_a[143] @[block_division.scala 207:21]
    node multiplication_143 = mul(multiplierReg_143, io.man_b[143]) @[block_division.scala 208:42]
    node _dotProductRegs_15_T_12 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_15_T_13 = tail(_dotProductRegs_15_T_12, 1) @[block_division.scala 209:60]
    node _dotProductRegs_15_T_14 = gt(multiplication_143, _dotProductRegs_15_T_13) @[block_division.scala 209:47]
    node _dotProductRegs_15_T_15 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_15_T_16 = tail(_dotProductRegs_15_T_15, 1) @[block_division.scala 209:78]
    node _dotProductRegs_15_T_17 = mux(_dotProductRegs_15_T_14, _dotProductRegs_15_T_16, multiplication_143) @[block_division.scala 209:31]
    dotProductRegs_2[15] <= _dotProductRegs_15_T_17 @[block_division.scala 209:25]
    node _signs_15_T_2 = xor(signReg_143, io.sign_b[143]) @[block_division.scala 210:27]
    signs_2[15] <= _signs_15_T_2 @[block_division.scala 210:16]
    node _two_complement_15_T_14 = eq(signs_2[15], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_15_T_15 = cat(UInt<1>("h0"), dotProductRegs_2[15]) @[block_division.scala 213:16]
    node _two_complement_15_T_16 = not(_two_complement_15_T_15) @[block_division.scala 213:10]
    node _two_complement_15_T_17 = add(_two_complement_15_T_16, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_15_T_18 = tail(_two_complement_15_T_17, 1) @[block_division.scala 213:38]
    node _two_complement_15_T_19 = cat(UInt<1>("h0"), dotProductRegs_2[15]) @[block_division.scala 214:14]
    node _two_complement_15_T_20 = mux(_two_complement_15_T_14, _two_complement_15_T_18, _two_complement_15_T_19) @[block_division.scala 211:31]
    two_complement_2[15] <= _two_complement_15_T_20 @[block_division.scala 211:25]
    node _two_complement_buffer_15_T_2 = asSInt(two_complement_2[15]) @[block_division.scala 216:53]
    two_complement_buffer_2[15] <= _two_complement_buffer_15_T_2 @[block_division.scala 216:32]
    reg multiplierReg_144 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_144 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_144 <= io.sign_a[144] @[block_division.scala 206:15]
    multiplierReg_144 <= io.man_a[144] @[block_division.scala 207:21]
    node multiplication_144 = mul(multiplierReg_144, io.man_b[144]) @[block_division.scala 208:42]
    node _dotProductRegs_16_T_12 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_16_T_13 = tail(_dotProductRegs_16_T_12, 1) @[block_division.scala 209:60]
    node _dotProductRegs_16_T_14 = gt(multiplication_144, _dotProductRegs_16_T_13) @[block_division.scala 209:47]
    node _dotProductRegs_16_T_15 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_16_T_16 = tail(_dotProductRegs_16_T_15, 1) @[block_division.scala 209:78]
    node _dotProductRegs_16_T_17 = mux(_dotProductRegs_16_T_14, _dotProductRegs_16_T_16, multiplication_144) @[block_division.scala 209:31]
    dotProductRegs_2[16] <= _dotProductRegs_16_T_17 @[block_division.scala 209:25]
    node _signs_16_T_2 = xor(signReg_144, io.sign_b[144]) @[block_division.scala 210:27]
    signs_2[16] <= _signs_16_T_2 @[block_division.scala 210:16]
    node _two_complement_16_T_14 = eq(signs_2[16], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_16_T_15 = cat(UInt<1>("h0"), dotProductRegs_2[16]) @[block_division.scala 213:16]
    node _two_complement_16_T_16 = not(_two_complement_16_T_15) @[block_division.scala 213:10]
    node _two_complement_16_T_17 = add(_two_complement_16_T_16, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_16_T_18 = tail(_two_complement_16_T_17, 1) @[block_division.scala 213:38]
    node _two_complement_16_T_19 = cat(UInt<1>("h0"), dotProductRegs_2[16]) @[block_division.scala 214:14]
    node _two_complement_16_T_20 = mux(_two_complement_16_T_14, _two_complement_16_T_18, _two_complement_16_T_19) @[block_division.scala 211:31]
    two_complement_2[16] <= _two_complement_16_T_20 @[block_division.scala 211:25]
    node _two_complement_buffer_16_T_2 = asSInt(two_complement_2[16]) @[block_division.scala 216:53]
    two_complement_buffer_2[16] <= _two_complement_buffer_16_T_2 @[block_division.scala 216:32]
    reg multiplierReg_145 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_145 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_145 <= io.sign_a[145] @[block_division.scala 206:15]
    multiplierReg_145 <= io.man_a[145] @[block_division.scala 207:21]
    node multiplication_145 = mul(multiplierReg_145, io.man_b[145]) @[block_division.scala 208:42]
    node _dotProductRegs_17_T_12 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_17_T_13 = tail(_dotProductRegs_17_T_12, 1) @[block_division.scala 209:60]
    node _dotProductRegs_17_T_14 = gt(multiplication_145, _dotProductRegs_17_T_13) @[block_division.scala 209:47]
    node _dotProductRegs_17_T_15 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_17_T_16 = tail(_dotProductRegs_17_T_15, 1) @[block_division.scala 209:78]
    node _dotProductRegs_17_T_17 = mux(_dotProductRegs_17_T_14, _dotProductRegs_17_T_16, multiplication_145) @[block_division.scala 209:31]
    dotProductRegs_2[17] <= _dotProductRegs_17_T_17 @[block_division.scala 209:25]
    node _signs_17_T_2 = xor(signReg_145, io.sign_b[145]) @[block_division.scala 210:27]
    signs_2[17] <= _signs_17_T_2 @[block_division.scala 210:16]
    node _two_complement_17_T_14 = eq(signs_2[17], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_17_T_15 = cat(UInt<1>("h0"), dotProductRegs_2[17]) @[block_division.scala 213:16]
    node _two_complement_17_T_16 = not(_two_complement_17_T_15) @[block_division.scala 213:10]
    node _two_complement_17_T_17 = add(_two_complement_17_T_16, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_17_T_18 = tail(_two_complement_17_T_17, 1) @[block_division.scala 213:38]
    node _two_complement_17_T_19 = cat(UInt<1>("h0"), dotProductRegs_2[17]) @[block_division.scala 214:14]
    node _two_complement_17_T_20 = mux(_two_complement_17_T_14, _two_complement_17_T_18, _two_complement_17_T_19) @[block_division.scala 211:31]
    two_complement_2[17] <= _two_complement_17_T_20 @[block_division.scala 211:25]
    node _two_complement_buffer_17_T_2 = asSInt(two_complement_2[17]) @[block_division.scala 216:53]
    two_complement_buffer_2[17] <= _two_complement_buffer_17_T_2 @[block_division.scala 216:32]
    reg multiplierReg_146 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_146 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_146 <= io.sign_a[146] @[block_division.scala 206:15]
    multiplierReg_146 <= io.man_a[146] @[block_division.scala 207:21]
    node multiplication_146 = mul(multiplierReg_146, io.man_b[146]) @[block_division.scala 208:42]
    node _dotProductRegs_18_T_12 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_18_T_13 = tail(_dotProductRegs_18_T_12, 1) @[block_division.scala 209:60]
    node _dotProductRegs_18_T_14 = gt(multiplication_146, _dotProductRegs_18_T_13) @[block_division.scala 209:47]
    node _dotProductRegs_18_T_15 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_18_T_16 = tail(_dotProductRegs_18_T_15, 1) @[block_division.scala 209:78]
    node _dotProductRegs_18_T_17 = mux(_dotProductRegs_18_T_14, _dotProductRegs_18_T_16, multiplication_146) @[block_division.scala 209:31]
    dotProductRegs_2[18] <= _dotProductRegs_18_T_17 @[block_division.scala 209:25]
    node _signs_18_T_2 = xor(signReg_146, io.sign_b[146]) @[block_division.scala 210:27]
    signs_2[18] <= _signs_18_T_2 @[block_division.scala 210:16]
    node _two_complement_18_T_14 = eq(signs_2[18], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_18_T_15 = cat(UInt<1>("h0"), dotProductRegs_2[18]) @[block_division.scala 213:16]
    node _two_complement_18_T_16 = not(_two_complement_18_T_15) @[block_division.scala 213:10]
    node _two_complement_18_T_17 = add(_two_complement_18_T_16, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_18_T_18 = tail(_two_complement_18_T_17, 1) @[block_division.scala 213:38]
    node _two_complement_18_T_19 = cat(UInt<1>("h0"), dotProductRegs_2[18]) @[block_division.scala 214:14]
    node _two_complement_18_T_20 = mux(_two_complement_18_T_14, _two_complement_18_T_18, _two_complement_18_T_19) @[block_division.scala 211:31]
    two_complement_2[18] <= _two_complement_18_T_20 @[block_division.scala 211:25]
    node _two_complement_buffer_18_T_2 = asSInt(two_complement_2[18]) @[block_division.scala 216:53]
    two_complement_buffer_2[18] <= _two_complement_buffer_18_T_2 @[block_division.scala 216:32]
    reg multiplierReg_147 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_147 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_147 <= io.sign_a[147] @[block_division.scala 206:15]
    multiplierReg_147 <= io.man_a[147] @[block_division.scala 207:21]
    node multiplication_147 = mul(multiplierReg_147, io.man_b[147]) @[block_division.scala 208:42]
    node _dotProductRegs_19_T_12 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_19_T_13 = tail(_dotProductRegs_19_T_12, 1) @[block_division.scala 209:60]
    node _dotProductRegs_19_T_14 = gt(multiplication_147, _dotProductRegs_19_T_13) @[block_division.scala 209:47]
    node _dotProductRegs_19_T_15 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_19_T_16 = tail(_dotProductRegs_19_T_15, 1) @[block_division.scala 209:78]
    node _dotProductRegs_19_T_17 = mux(_dotProductRegs_19_T_14, _dotProductRegs_19_T_16, multiplication_147) @[block_division.scala 209:31]
    dotProductRegs_2[19] <= _dotProductRegs_19_T_17 @[block_division.scala 209:25]
    node _signs_19_T_2 = xor(signReg_147, io.sign_b[147]) @[block_division.scala 210:27]
    signs_2[19] <= _signs_19_T_2 @[block_division.scala 210:16]
    node _two_complement_19_T_14 = eq(signs_2[19], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_19_T_15 = cat(UInt<1>("h0"), dotProductRegs_2[19]) @[block_division.scala 213:16]
    node _two_complement_19_T_16 = not(_two_complement_19_T_15) @[block_division.scala 213:10]
    node _two_complement_19_T_17 = add(_two_complement_19_T_16, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_19_T_18 = tail(_two_complement_19_T_17, 1) @[block_division.scala 213:38]
    node _two_complement_19_T_19 = cat(UInt<1>("h0"), dotProductRegs_2[19]) @[block_division.scala 214:14]
    node _two_complement_19_T_20 = mux(_two_complement_19_T_14, _two_complement_19_T_18, _two_complement_19_T_19) @[block_division.scala 211:31]
    two_complement_2[19] <= _two_complement_19_T_20 @[block_division.scala 211:25]
    node _two_complement_buffer_19_T_2 = asSInt(two_complement_2[19]) @[block_division.scala 216:53]
    two_complement_buffer_2[19] <= _two_complement_buffer_19_T_2 @[block_division.scala 216:32]
    reg multiplierReg_148 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_148 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_148 <= io.sign_a[148] @[block_division.scala 206:15]
    multiplierReg_148 <= io.man_a[148] @[block_division.scala 207:21]
    node multiplication_148 = mul(multiplierReg_148, io.man_b[148]) @[block_division.scala 208:42]
    node _dotProductRegs_20_T_12 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_20_T_13 = tail(_dotProductRegs_20_T_12, 1) @[block_division.scala 209:60]
    node _dotProductRegs_20_T_14 = gt(multiplication_148, _dotProductRegs_20_T_13) @[block_division.scala 209:47]
    node _dotProductRegs_20_T_15 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_20_T_16 = tail(_dotProductRegs_20_T_15, 1) @[block_division.scala 209:78]
    node _dotProductRegs_20_T_17 = mux(_dotProductRegs_20_T_14, _dotProductRegs_20_T_16, multiplication_148) @[block_division.scala 209:31]
    dotProductRegs_2[20] <= _dotProductRegs_20_T_17 @[block_division.scala 209:25]
    node _signs_20_T_2 = xor(signReg_148, io.sign_b[148]) @[block_division.scala 210:27]
    signs_2[20] <= _signs_20_T_2 @[block_division.scala 210:16]
    node _two_complement_20_T_14 = eq(signs_2[20], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_20_T_15 = cat(UInt<1>("h0"), dotProductRegs_2[20]) @[block_division.scala 213:16]
    node _two_complement_20_T_16 = not(_two_complement_20_T_15) @[block_division.scala 213:10]
    node _two_complement_20_T_17 = add(_two_complement_20_T_16, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_20_T_18 = tail(_two_complement_20_T_17, 1) @[block_division.scala 213:38]
    node _two_complement_20_T_19 = cat(UInt<1>("h0"), dotProductRegs_2[20]) @[block_division.scala 214:14]
    node _two_complement_20_T_20 = mux(_two_complement_20_T_14, _two_complement_20_T_18, _two_complement_20_T_19) @[block_division.scala 211:31]
    two_complement_2[20] <= _two_complement_20_T_20 @[block_division.scala 211:25]
    node _two_complement_buffer_20_T_2 = asSInt(two_complement_2[20]) @[block_division.scala 216:53]
    two_complement_buffer_2[20] <= _two_complement_buffer_20_T_2 @[block_division.scala 216:32]
    reg multiplierReg_149 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_149 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_149 <= io.sign_a[149] @[block_division.scala 206:15]
    multiplierReg_149 <= io.man_a[149] @[block_division.scala 207:21]
    node multiplication_149 = mul(multiplierReg_149, io.man_b[149]) @[block_division.scala 208:42]
    node _dotProductRegs_21_T_12 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_21_T_13 = tail(_dotProductRegs_21_T_12, 1) @[block_division.scala 209:60]
    node _dotProductRegs_21_T_14 = gt(multiplication_149, _dotProductRegs_21_T_13) @[block_division.scala 209:47]
    node _dotProductRegs_21_T_15 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_21_T_16 = tail(_dotProductRegs_21_T_15, 1) @[block_division.scala 209:78]
    node _dotProductRegs_21_T_17 = mux(_dotProductRegs_21_T_14, _dotProductRegs_21_T_16, multiplication_149) @[block_division.scala 209:31]
    dotProductRegs_2[21] <= _dotProductRegs_21_T_17 @[block_division.scala 209:25]
    node _signs_21_T_2 = xor(signReg_149, io.sign_b[149]) @[block_division.scala 210:27]
    signs_2[21] <= _signs_21_T_2 @[block_division.scala 210:16]
    node _two_complement_21_T_14 = eq(signs_2[21], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_21_T_15 = cat(UInt<1>("h0"), dotProductRegs_2[21]) @[block_division.scala 213:16]
    node _two_complement_21_T_16 = not(_two_complement_21_T_15) @[block_division.scala 213:10]
    node _two_complement_21_T_17 = add(_two_complement_21_T_16, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_21_T_18 = tail(_two_complement_21_T_17, 1) @[block_division.scala 213:38]
    node _two_complement_21_T_19 = cat(UInt<1>("h0"), dotProductRegs_2[21]) @[block_division.scala 214:14]
    node _two_complement_21_T_20 = mux(_two_complement_21_T_14, _two_complement_21_T_18, _two_complement_21_T_19) @[block_division.scala 211:31]
    two_complement_2[21] <= _two_complement_21_T_20 @[block_division.scala 211:25]
    node _two_complement_buffer_21_T_2 = asSInt(two_complement_2[21]) @[block_division.scala 216:53]
    two_complement_buffer_2[21] <= _two_complement_buffer_21_T_2 @[block_division.scala 216:32]
    reg multiplierReg_150 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_150 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_150 <= io.sign_a[150] @[block_division.scala 206:15]
    multiplierReg_150 <= io.man_a[150] @[block_division.scala 207:21]
    node multiplication_150 = mul(multiplierReg_150, io.man_b[150]) @[block_division.scala 208:42]
    node _dotProductRegs_22_T_12 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_22_T_13 = tail(_dotProductRegs_22_T_12, 1) @[block_division.scala 209:60]
    node _dotProductRegs_22_T_14 = gt(multiplication_150, _dotProductRegs_22_T_13) @[block_division.scala 209:47]
    node _dotProductRegs_22_T_15 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_22_T_16 = tail(_dotProductRegs_22_T_15, 1) @[block_division.scala 209:78]
    node _dotProductRegs_22_T_17 = mux(_dotProductRegs_22_T_14, _dotProductRegs_22_T_16, multiplication_150) @[block_division.scala 209:31]
    dotProductRegs_2[22] <= _dotProductRegs_22_T_17 @[block_division.scala 209:25]
    node _signs_22_T_2 = xor(signReg_150, io.sign_b[150]) @[block_division.scala 210:27]
    signs_2[22] <= _signs_22_T_2 @[block_division.scala 210:16]
    node _two_complement_22_T_14 = eq(signs_2[22], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_22_T_15 = cat(UInt<1>("h0"), dotProductRegs_2[22]) @[block_division.scala 213:16]
    node _two_complement_22_T_16 = not(_two_complement_22_T_15) @[block_division.scala 213:10]
    node _two_complement_22_T_17 = add(_two_complement_22_T_16, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_22_T_18 = tail(_two_complement_22_T_17, 1) @[block_division.scala 213:38]
    node _two_complement_22_T_19 = cat(UInt<1>("h0"), dotProductRegs_2[22]) @[block_division.scala 214:14]
    node _two_complement_22_T_20 = mux(_two_complement_22_T_14, _two_complement_22_T_18, _two_complement_22_T_19) @[block_division.scala 211:31]
    two_complement_2[22] <= _two_complement_22_T_20 @[block_division.scala 211:25]
    node _two_complement_buffer_22_T_2 = asSInt(two_complement_2[22]) @[block_division.scala 216:53]
    two_complement_buffer_2[22] <= _two_complement_buffer_22_T_2 @[block_division.scala 216:32]
    reg multiplierReg_151 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_151 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_151 <= io.sign_a[151] @[block_division.scala 206:15]
    multiplierReg_151 <= io.man_a[151] @[block_division.scala 207:21]
    node multiplication_151 = mul(multiplierReg_151, io.man_b[151]) @[block_division.scala 208:42]
    node _dotProductRegs_23_T_12 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_23_T_13 = tail(_dotProductRegs_23_T_12, 1) @[block_division.scala 209:60]
    node _dotProductRegs_23_T_14 = gt(multiplication_151, _dotProductRegs_23_T_13) @[block_division.scala 209:47]
    node _dotProductRegs_23_T_15 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_23_T_16 = tail(_dotProductRegs_23_T_15, 1) @[block_division.scala 209:78]
    node _dotProductRegs_23_T_17 = mux(_dotProductRegs_23_T_14, _dotProductRegs_23_T_16, multiplication_151) @[block_division.scala 209:31]
    dotProductRegs_2[23] <= _dotProductRegs_23_T_17 @[block_division.scala 209:25]
    node _signs_23_T_2 = xor(signReg_151, io.sign_b[151]) @[block_division.scala 210:27]
    signs_2[23] <= _signs_23_T_2 @[block_division.scala 210:16]
    node _two_complement_23_T_14 = eq(signs_2[23], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_23_T_15 = cat(UInt<1>("h0"), dotProductRegs_2[23]) @[block_division.scala 213:16]
    node _two_complement_23_T_16 = not(_two_complement_23_T_15) @[block_division.scala 213:10]
    node _two_complement_23_T_17 = add(_two_complement_23_T_16, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_23_T_18 = tail(_two_complement_23_T_17, 1) @[block_division.scala 213:38]
    node _two_complement_23_T_19 = cat(UInt<1>("h0"), dotProductRegs_2[23]) @[block_division.scala 214:14]
    node _two_complement_23_T_20 = mux(_two_complement_23_T_14, _two_complement_23_T_18, _two_complement_23_T_19) @[block_division.scala 211:31]
    two_complement_2[23] <= _two_complement_23_T_20 @[block_division.scala 211:25]
    node _two_complement_buffer_23_T_2 = asSInt(two_complement_2[23]) @[block_division.scala 216:53]
    two_complement_buffer_2[23] <= _two_complement_buffer_23_T_2 @[block_division.scala 216:32]
    reg multiplierReg_152 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_152 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_152 <= io.sign_a[152] @[block_division.scala 206:15]
    multiplierReg_152 <= io.man_a[152] @[block_division.scala 207:21]
    node multiplication_152 = mul(multiplierReg_152, io.man_b[152]) @[block_division.scala 208:42]
    node _dotProductRegs_24_T_12 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_24_T_13 = tail(_dotProductRegs_24_T_12, 1) @[block_division.scala 209:60]
    node _dotProductRegs_24_T_14 = gt(multiplication_152, _dotProductRegs_24_T_13) @[block_division.scala 209:47]
    node _dotProductRegs_24_T_15 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_24_T_16 = tail(_dotProductRegs_24_T_15, 1) @[block_division.scala 209:78]
    node _dotProductRegs_24_T_17 = mux(_dotProductRegs_24_T_14, _dotProductRegs_24_T_16, multiplication_152) @[block_division.scala 209:31]
    dotProductRegs_2[24] <= _dotProductRegs_24_T_17 @[block_division.scala 209:25]
    node _signs_24_T_2 = xor(signReg_152, io.sign_b[152]) @[block_division.scala 210:27]
    signs_2[24] <= _signs_24_T_2 @[block_division.scala 210:16]
    node _two_complement_24_T_14 = eq(signs_2[24], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_24_T_15 = cat(UInt<1>("h0"), dotProductRegs_2[24]) @[block_division.scala 213:16]
    node _two_complement_24_T_16 = not(_two_complement_24_T_15) @[block_division.scala 213:10]
    node _two_complement_24_T_17 = add(_two_complement_24_T_16, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_24_T_18 = tail(_two_complement_24_T_17, 1) @[block_division.scala 213:38]
    node _two_complement_24_T_19 = cat(UInt<1>("h0"), dotProductRegs_2[24]) @[block_division.scala 214:14]
    node _two_complement_24_T_20 = mux(_two_complement_24_T_14, _two_complement_24_T_18, _two_complement_24_T_19) @[block_division.scala 211:31]
    two_complement_2[24] <= _two_complement_24_T_20 @[block_division.scala 211:25]
    node _two_complement_buffer_24_T_2 = asSInt(two_complement_2[24]) @[block_division.scala 216:53]
    two_complement_buffer_2[24] <= _two_complement_buffer_24_T_2 @[block_division.scala 216:32]
    reg multiplierReg_153 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_153 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_153 <= io.sign_a[153] @[block_division.scala 206:15]
    multiplierReg_153 <= io.man_a[153] @[block_division.scala 207:21]
    node multiplication_153 = mul(multiplierReg_153, io.man_b[153]) @[block_division.scala 208:42]
    node _dotProductRegs_25_T_12 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_25_T_13 = tail(_dotProductRegs_25_T_12, 1) @[block_division.scala 209:60]
    node _dotProductRegs_25_T_14 = gt(multiplication_153, _dotProductRegs_25_T_13) @[block_division.scala 209:47]
    node _dotProductRegs_25_T_15 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_25_T_16 = tail(_dotProductRegs_25_T_15, 1) @[block_division.scala 209:78]
    node _dotProductRegs_25_T_17 = mux(_dotProductRegs_25_T_14, _dotProductRegs_25_T_16, multiplication_153) @[block_division.scala 209:31]
    dotProductRegs_2[25] <= _dotProductRegs_25_T_17 @[block_division.scala 209:25]
    node _signs_25_T_2 = xor(signReg_153, io.sign_b[153]) @[block_division.scala 210:27]
    signs_2[25] <= _signs_25_T_2 @[block_division.scala 210:16]
    node _two_complement_25_T_14 = eq(signs_2[25], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_25_T_15 = cat(UInt<1>("h0"), dotProductRegs_2[25]) @[block_division.scala 213:16]
    node _two_complement_25_T_16 = not(_two_complement_25_T_15) @[block_division.scala 213:10]
    node _two_complement_25_T_17 = add(_two_complement_25_T_16, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_25_T_18 = tail(_two_complement_25_T_17, 1) @[block_division.scala 213:38]
    node _two_complement_25_T_19 = cat(UInt<1>("h0"), dotProductRegs_2[25]) @[block_division.scala 214:14]
    node _two_complement_25_T_20 = mux(_two_complement_25_T_14, _two_complement_25_T_18, _two_complement_25_T_19) @[block_division.scala 211:31]
    two_complement_2[25] <= _two_complement_25_T_20 @[block_division.scala 211:25]
    node _two_complement_buffer_25_T_2 = asSInt(two_complement_2[25]) @[block_division.scala 216:53]
    two_complement_buffer_2[25] <= _two_complement_buffer_25_T_2 @[block_division.scala 216:32]
    reg multiplierReg_154 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_154 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_154 <= io.sign_a[154] @[block_division.scala 206:15]
    multiplierReg_154 <= io.man_a[154] @[block_division.scala 207:21]
    node multiplication_154 = mul(multiplierReg_154, io.man_b[154]) @[block_division.scala 208:42]
    node _dotProductRegs_26_T_12 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_26_T_13 = tail(_dotProductRegs_26_T_12, 1) @[block_division.scala 209:60]
    node _dotProductRegs_26_T_14 = gt(multiplication_154, _dotProductRegs_26_T_13) @[block_division.scala 209:47]
    node _dotProductRegs_26_T_15 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_26_T_16 = tail(_dotProductRegs_26_T_15, 1) @[block_division.scala 209:78]
    node _dotProductRegs_26_T_17 = mux(_dotProductRegs_26_T_14, _dotProductRegs_26_T_16, multiplication_154) @[block_division.scala 209:31]
    dotProductRegs_2[26] <= _dotProductRegs_26_T_17 @[block_division.scala 209:25]
    node _signs_26_T_2 = xor(signReg_154, io.sign_b[154]) @[block_division.scala 210:27]
    signs_2[26] <= _signs_26_T_2 @[block_division.scala 210:16]
    node _two_complement_26_T_14 = eq(signs_2[26], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_26_T_15 = cat(UInt<1>("h0"), dotProductRegs_2[26]) @[block_division.scala 213:16]
    node _two_complement_26_T_16 = not(_two_complement_26_T_15) @[block_division.scala 213:10]
    node _two_complement_26_T_17 = add(_two_complement_26_T_16, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_26_T_18 = tail(_two_complement_26_T_17, 1) @[block_division.scala 213:38]
    node _two_complement_26_T_19 = cat(UInt<1>("h0"), dotProductRegs_2[26]) @[block_division.scala 214:14]
    node _two_complement_26_T_20 = mux(_two_complement_26_T_14, _two_complement_26_T_18, _two_complement_26_T_19) @[block_division.scala 211:31]
    two_complement_2[26] <= _two_complement_26_T_20 @[block_division.scala 211:25]
    node _two_complement_buffer_26_T_2 = asSInt(two_complement_2[26]) @[block_division.scala 216:53]
    two_complement_buffer_2[26] <= _two_complement_buffer_26_T_2 @[block_division.scala 216:32]
    reg multiplierReg_155 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_155 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_155 <= io.sign_a[155] @[block_division.scala 206:15]
    multiplierReg_155 <= io.man_a[155] @[block_division.scala 207:21]
    node multiplication_155 = mul(multiplierReg_155, io.man_b[155]) @[block_division.scala 208:42]
    node _dotProductRegs_27_T_12 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_27_T_13 = tail(_dotProductRegs_27_T_12, 1) @[block_division.scala 209:60]
    node _dotProductRegs_27_T_14 = gt(multiplication_155, _dotProductRegs_27_T_13) @[block_division.scala 209:47]
    node _dotProductRegs_27_T_15 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_27_T_16 = tail(_dotProductRegs_27_T_15, 1) @[block_division.scala 209:78]
    node _dotProductRegs_27_T_17 = mux(_dotProductRegs_27_T_14, _dotProductRegs_27_T_16, multiplication_155) @[block_division.scala 209:31]
    dotProductRegs_2[27] <= _dotProductRegs_27_T_17 @[block_division.scala 209:25]
    node _signs_27_T_2 = xor(signReg_155, io.sign_b[155]) @[block_division.scala 210:27]
    signs_2[27] <= _signs_27_T_2 @[block_division.scala 210:16]
    node _two_complement_27_T_14 = eq(signs_2[27], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_27_T_15 = cat(UInt<1>("h0"), dotProductRegs_2[27]) @[block_division.scala 213:16]
    node _two_complement_27_T_16 = not(_two_complement_27_T_15) @[block_division.scala 213:10]
    node _two_complement_27_T_17 = add(_two_complement_27_T_16, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_27_T_18 = tail(_two_complement_27_T_17, 1) @[block_division.scala 213:38]
    node _two_complement_27_T_19 = cat(UInt<1>("h0"), dotProductRegs_2[27]) @[block_division.scala 214:14]
    node _two_complement_27_T_20 = mux(_two_complement_27_T_14, _two_complement_27_T_18, _two_complement_27_T_19) @[block_division.scala 211:31]
    two_complement_2[27] <= _two_complement_27_T_20 @[block_division.scala 211:25]
    node _two_complement_buffer_27_T_2 = asSInt(two_complement_2[27]) @[block_division.scala 216:53]
    two_complement_buffer_2[27] <= _two_complement_buffer_27_T_2 @[block_division.scala 216:32]
    reg multiplierReg_156 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_156 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_156 <= io.sign_a[156] @[block_division.scala 206:15]
    multiplierReg_156 <= io.man_a[156] @[block_division.scala 207:21]
    node multiplication_156 = mul(multiplierReg_156, io.man_b[156]) @[block_division.scala 208:42]
    node _dotProductRegs_28_T_12 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_28_T_13 = tail(_dotProductRegs_28_T_12, 1) @[block_division.scala 209:60]
    node _dotProductRegs_28_T_14 = gt(multiplication_156, _dotProductRegs_28_T_13) @[block_division.scala 209:47]
    node _dotProductRegs_28_T_15 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_28_T_16 = tail(_dotProductRegs_28_T_15, 1) @[block_division.scala 209:78]
    node _dotProductRegs_28_T_17 = mux(_dotProductRegs_28_T_14, _dotProductRegs_28_T_16, multiplication_156) @[block_division.scala 209:31]
    dotProductRegs_2[28] <= _dotProductRegs_28_T_17 @[block_division.scala 209:25]
    node _signs_28_T_2 = xor(signReg_156, io.sign_b[156]) @[block_division.scala 210:27]
    signs_2[28] <= _signs_28_T_2 @[block_division.scala 210:16]
    node _two_complement_28_T_14 = eq(signs_2[28], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_28_T_15 = cat(UInt<1>("h0"), dotProductRegs_2[28]) @[block_division.scala 213:16]
    node _two_complement_28_T_16 = not(_two_complement_28_T_15) @[block_division.scala 213:10]
    node _two_complement_28_T_17 = add(_two_complement_28_T_16, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_28_T_18 = tail(_two_complement_28_T_17, 1) @[block_division.scala 213:38]
    node _two_complement_28_T_19 = cat(UInt<1>("h0"), dotProductRegs_2[28]) @[block_division.scala 214:14]
    node _two_complement_28_T_20 = mux(_two_complement_28_T_14, _two_complement_28_T_18, _two_complement_28_T_19) @[block_division.scala 211:31]
    two_complement_2[28] <= _two_complement_28_T_20 @[block_division.scala 211:25]
    node _two_complement_buffer_28_T_2 = asSInt(two_complement_2[28]) @[block_division.scala 216:53]
    two_complement_buffer_2[28] <= _two_complement_buffer_28_T_2 @[block_division.scala 216:32]
    reg multiplierReg_157 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_157 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_157 <= io.sign_a[157] @[block_division.scala 206:15]
    multiplierReg_157 <= io.man_a[157] @[block_division.scala 207:21]
    node multiplication_157 = mul(multiplierReg_157, io.man_b[157]) @[block_division.scala 208:42]
    node _dotProductRegs_29_T_12 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_29_T_13 = tail(_dotProductRegs_29_T_12, 1) @[block_division.scala 209:60]
    node _dotProductRegs_29_T_14 = gt(multiplication_157, _dotProductRegs_29_T_13) @[block_division.scala 209:47]
    node _dotProductRegs_29_T_15 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_29_T_16 = tail(_dotProductRegs_29_T_15, 1) @[block_division.scala 209:78]
    node _dotProductRegs_29_T_17 = mux(_dotProductRegs_29_T_14, _dotProductRegs_29_T_16, multiplication_157) @[block_division.scala 209:31]
    dotProductRegs_2[29] <= _dotProductRegs_29_T_17 @[block_division.scala 209:25]
    node _signs_29_T_2 = xor(signReg_157, io.sign_b[157]) @[block_division.scala 210:27]
    signs_2[29] <= _signs_29_T_2 @[block_division.scala 210:16]
    node _two_complement_29_T_14 = eq(signs_2[29], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_29_T_15 = cat(UInt<1>("h0"), dotProductRegs_2[29]) @[block_division.scala 213:16]
    node _two_complement_29_T_16 = not(_two_complement_29_T_15) @[block_division.scala 213:10]
    node _two_complement_29_T_17 = add(_two_complement_29_T_16, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_29_T_18 = tail(_two_complement_29_T_17, 1) @[block_division.scala 213:38]
    node _two_complement_29_T_19 = cat(UInt<1>("h0"), dotProductRegs_2[29]) @[block_division.scala 214:14]
    node _two_complement_29_T_20 = mux(_two_complement_29_T_14, _two_complement_29_T_18, _two_complement_29_T_19) @[block_division.scala 211:31]
    two_complement_2[29] <= _two_complement_29_T_20 @[block_division.scala 211:25]
    node _two_complement_buffer_29_T_2 = asSInt(two_complement_2[29]) @[block_division.scala 216:53]
    two_complement_buffer_2[29] <= _two_complement_buffer_29_T_2 @[block_division.scala 216:32]
    reg multiplierReg_158 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_158 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_158 <= io.sign_a[158] @[block_division.scala 206:15]
    multiplierReg_158 <= io.man_a[158] @[block_division.scala 207:21]
    node multiplication_158 = mul(multiplierReg_158, io.man_b[158]) @[block_division.scala 208:42]
    node _dotProductRegs_30_T_12 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_30_T_13 = tail(_dotProductRegs_30_T_12, 1) @[block_division.scala 209:60]
    node _dotProductRegs_30_T_14 = gt(multiplication_158, _dotProductRegs_30_T_13) @[block_division.scala 209:47]
    node _dotProductRegs_30_T_15 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_30_T_16 = tail(_dotProductRegs_30_T_15, 1) @[block_division.scala 209:78]
    node _dotProductRegs_30_T_17 = mux(_dotProductRegs_30_T_14, _dotProductRegs_30_T_16, multiplication_158) @[block_division.scala 209:31]
    dotProductRegs_2[30] <= _dotProductRegs_30_T_17 @[block_division.scala 209:25]
    node _signs_30_T_2 = xor(signReg_158, io.sign_b[158]) @[block_division.scala 210:27]
    signs_2[30] <= _signs_30_T_2 @[block_division.scala 210:16]
    node _two_complement_30_T_14 = eq(signs_2[30], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_30_T_15 = cat(UInt<1>("h0"), dotProductRegs_2[30]) @[block_division.scala 213:16]
    node _two_complement_30_T_16 = not(_two_complement_30_T_15) @[block_division.scala 213:10]
    node _two_complement_30_T_17 = add(_two_complement_30_T_16, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_30_T_18 = tail(_two_complement_30_T_17, 1) @[block_division.scala 213:38]
    node _two_complement_30_T_19 = cat(UInt<1>("h0"), dotProductRegs_2[30]) @[block_division.scala 214:14]
    node _two_complement_30_T_20 = mux(_two_complement_30_T_14, _two_complement_30_T_18, _two_complement_30_T_19) @[block_division.scala 211:31]
    two_complement_2[30] <= _two_complement_30_T_20 @[block_division.scala 211:25]
    node _two_complement_buffer_30_T_2 = asSInt(two_complement_2[30]) @[block_division.scala 216:53]
    two_complement_buffer_2[30] <= _two_complement_buffer_30_T_2 @[block_division.scala 216:32]
    reg multiplierReg_159 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_159 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_159 <= io.sign_a[159] @[block_division.scala 206:15]
    multiplierReg_159 <= io.man_a[159] @[block_division.scala 207:21]
    node multiplication_159 = mul(multiplierReg_159, io.man_b[159]) @[block_division.scala 208:42]
    node _dotProductRegs_31_T_12 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_31_T_13 = tail(_dotProductRegs_31_T_12, 1) @[block_division.scala 209:60]
    node _dotProductRegs_31_T_14 = gt(multiplication_159, _dotProductRegs_31_T_13) @[block_division.scala 209:47]
    node _dotProductRegs_31_T_15 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_31_T_16 = tail(_dotProductRegs_31_T_15, 1) @[block_division.scala 209:78]
    node _dotProductRegs_31_T_17 = mux(_dotProductRegs_31_T_14, _dotProductRegs_31_T_16, multiplication_159) @[block_division.scala 209:31]
    dotProductRegs_2[31] <= _dotProductRegs_31_T_17 @[block_division.scala 209:25]
    node _signs_31_T_2 = xor(signReg_159, io.sign_b[159]) @[block_division.scala 210:27]
    signs_2[31] <= _signs_31_T_2 @[block_division.scala 210:16]
    node _two_complement_31_T_14 = eq(signs_2[31], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_31_T_15 = cat(UInt<1>("h0"), dotProductRegs_2[31]) @[block_division.scala 213:16]
    node _two_complement_31_T_16 = not(_two_complement_31_T_15) @[block_division.scala 213:10]
    node _two_complement_31_T_17 = add(_two_complement_31_T_16, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_31_T_18 = tail(_two_complement_31_T_17, 1) @[block_division.scala 213:38]
    node _two_complement_31_T_19 = cat(UInt<1>("h0"), dotProductRegs_2[31]) @[block_division.scala 214:14]
    node _two_complement_31_T_20 = mux(_two_complement_31_T_14, _two_complement_31_T_18, _two_complement_31_T_19) @[block_division.scala 211:31]
    two_complement_2[31] <= _two_complement_31_T_20 @[block_division.scala 211:25]
    node _two_complement_buffer_31_T_2 = asSInt(two_complement_2[31]) @[block_division.scala 216:53]
    two_complement_buffer_2[31] <= _two_complement_buffer_31_T_2 @[block_division.scala 216:32]
    reg multiplierReg_160 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_160 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_160 <= io.sign_a[160] @[block_division.scala 206:15]
    multiplierReg_160 <= io.man_a[160] @[block_division.scala 207:21]
    node multiplication_160 = mul(multiplierReg_160, io.man_b[160]) @[block_division.scala 208:42]
    node _dotProductRegs_32_T_12 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_32_T_13 = tail(_dotProductRegs_32_T_12, 1) @[block_division.scala 209:60]
    node _dotProductRegs_32_T_14 = gt(multiplication_160, _dotProductRegs_32_T_13) @[block_division.scala 209:47]
    node _dotProductRegs_32_T_15 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_32_T_16 = tail(_dotProductRegs_32_T_15, 1) @[block_division.scala 209:78]
    node _dotProductRegs_32_T_17 = mux(_dotProductRegs_32_T_14, _dotProductRegs_32_T_16, multiplication_160) @[block_division.scala 209:31]
    dotProductRegs_2[32] <= _dotProductRegs_32_T_17 @[block_division.scala 209:25]
    node _signs_32_T_2 = xor(signReg_160, io.sign_b[160]) @[block_division.scala 210:27]
    signs_2[32] <= _signs_32_T_2 @[block_division.scala 210:16]
    node _two_complement_32_T_14 = eq(signs_2[32], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_32_T_15 = cat(UInt<1>("h0"), dotProductRegs_2[32]) @[block_division.scala 213:16]
    node _two_complement_32_T_16 = not(_two_complement_32_T_15) @[block_division.scala 213:10]
    node _two_complement_32_T_17 = add(_two_complement_32_T_16, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_32_T_18 = tail(_two_complement_32_T_17, 1) @[block_division.scala 213:38]
    node _two_complement_32_T_19 = cat(UInt<1>("h0"), dotProductRegs_2[32]) @[block_division.scala 214:14]
    node _two_complement_32_T_20 = mux(_two_complement_32_T_14, _two_complement_32_T_18, _two_complement_32_T_19) @[block_division.scala 211:31]
    two_complement_2[32] <= _two_complement_32_T_20 @[block_division.scala 211:25]
    node _two_complement_buffer_32_T_2 = asSInt(two_complement_2[32]) @[block_division.scala 216:53]
    two_complement_buffer_2[32] <= _two_complement_buffer_32_T_2 @[block_division.scala 216:32]
    reg multiplierReg_161 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_161 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_161 <= io.sign_a[161] @[block_division.scala 206:15]
    multiplierReg_161 <= io.man_a[161] @[block_division.scala 207:21]
    node multiplication_161 = mul(multiplierReg_161, io.man_b[161]) @[block_division.scala 208:42]
    node _dotProductRegs_33_T_12 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_33_T_13 = tail(_dotProductRegs_33_T_12, 1) @[block_division.scala 209:60]
    node _dotProductRegs_33_T_14 = gt(multiplication_161, _dotProductRegs_33_T_13) @[block_division.scala 209:47]
    node _dotProductRegs_33_T_15 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_33_T_16 = tail(_dotProductRegs_33_T_15, 1) @[block_division.scala 209:78]
    node _dotProductRegs_33_T_17 = mux(_dotProductRegs_33_T_14, _dotProductRegs_33_T_16, multiplication_161) @[block_division.scala 209:31]
    dotProductRegs_2[33] <= _dotProductRegs_33_T_17 @[block_division.scala 209:25]
    node _signs_33_T_2 = xor(signReg_161, io.sign_b[161]) @[block_division.scala 210:27]
    signs_2[33] <= _signs_33_T_2 @[block_division.scala 210:16]
    node _two_complement_33_T_14 = eq(signs_2[33], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_33_T_15 = cat(UInt<1>("h0"), dotProductRegs_2[33]) @[block_division.scala 213:16]
    node _two_complement_33_T_16 = not(_two_complement_33_T_15) @[block_division.scala 213:10]
    node _two_complement_33_T_17 = add(_two_complement_33_T_16, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_33_T_18 = tail(_two_complement_33_T_17, 1) @[block_division.scala 213:38]
    node _two_complement_33_T_19 = cat(UInt<1>("h0"), dotProductRegs_2[33]) @[block_division.scala 214:14]
    node _two_complement_33_T_20 = mux(_two_complement_33_T_14, _two_complement_33_T_18, _two_complement_33_T_19) @[block_division.scala 211:31]
    two_complement_2[33] <= _two_complement_33_T_20 @[block_division.scala 211:25]
    node _two_complement_buffer_33_T_2 = asSInt(two_complement_2[33]) @[block_division.scala 216:53]
    two_complement_buffer_2[33] <= _two_complement_buffer_33_T_2 @[block_division.scala 216:32]
    reg multiplierReg_162 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_162 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_162 <= io.sign_a[162] @[block_division.scala 206:15]
    multiplierReg_162 <= io.man_a[162] @[block_division.scala 207:21]
    node multiplication_162 = mul(multiplierReg_162, io.man_b[162]) @[block_division.scala 208:42]
    node _dotProductRegs_34_T_12 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_34_T_13 = tail(_dotProductRegs_34_T_12, 1) @[block_division.scala 209:60]
    node _dotProductRegs_34_T_14 = gt(multiplication_162, _dotProductRegs_34_T_13) @[block_division.scala 209:47]
    node _dotProductRegs_34_T_15 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_34_T_16 = tail(_dotProductRegs_34_T_15, 1) @[block_division.scala 209:78]
    node _dotProductRegs_34_T_17 = mux(_dotProductRegs_34_T_14, _dotProductRegs_34_T_16, multiplication_162) @[block_division.scala 209:31]
    dotProductRegs_2[34] <= _dotProductRegs_34_T_17 @[block_division.scala 209:25]
    node _signs_34_T_2 = xor(signReg_162, io.sign_b[162]) @[block_division.scala 210:27]
    signs_2[34] <= _signs_34_T_2 @[block_division.scala 210:16]
    node _two_complement_34_T_14 = eq(signs_2[34], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_34_T_15 = cat(UInt<1>("h0"), dotProductRegs_2[34]) @[block_division.scala 213:16]
    node _two_complement_34_T_16 = not(_two_complement_34_T_15) @[block_division.scala 213:10]
    node _two_complement_34_T_17 = add(_two_complement_34_T_16, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_34_T_18 = tail(_two_complement_34_T_17, 1) @[block_division.scala 213:38]
    node _two_complement_34_T_19 = cat(UInt<1>("h0"), dotProductRegs_2[34]) @[block_division.scala 214:14]
    node _two_complement_34_T_20 = mux(_two_complement_34_T_14, _two_complement_34_T_18, _two_complement_34_T_19) @[block_division.scala 211:31]
    two_complement_2[34] <= _two_complement_34_T_20 @[block_division.scala 211:25]
    node _two_complement_buffer_34_T_2 = asSInt(two_complement_2[34]) @[block_division.scala 216:53]
    two_complement_buffer_2[34] <= _two_complement_buffer_34_T_2 @[block_division.scala 216:32]
    reg multiplierReg_163 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_163 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_163 <= io.sign_a[163] @[block_division.scala 206:15]
    multiplierReg_163 <= io.man_a[163] @[block_division.scala 207:21]
    node multiplication_163 = mul(multiplierReg_163, io.man_b[163]) @[block_division.scala 208:42]
    node _dotProductRegs_35_T_12 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_35_T_13 = tail(_dotProductRegs_35_T_12, 1) @[block_division.scala 209:60]
    node _dotProductRegs_35_T_14 = gt(multiplication_163, _dotProductRegs_35_T_13) @[block_division.scala 209:47]
    node _dotProductRegs_35_T_15 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_35_T_16 = tail(_dotProductRegs_35_T_15, 1) @[block_division.scala 209:78]
    node _dotProductRegs_35_T_17 = mux(_dotProductRegs_35_T_14, _dotProductRegs_35_T_16, multiplication_163) @[block_division.scala 209:31]
    dotProductRegs_2[35] <= _dotProductRegs_35_T_17 @[block_division.scala 209:25]
    node _signs_35_T_2 = xor(signReg_163, io.sign_b[163]) @[block_division.scala 210:27]
    signs_2[35] <= _signs_35_T_2 @[block_division.scala 210:16]
    node _two_complement_35_T_14 = eq(signs_2[35], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_35_T_15 = cat(UInt<1>("h0"), dotProductRegs_2[35]) @[block_division.scala 213:16]
    node _two_complement_35_T_16 = not(_two_complement_35_T_15) @[block_division.scala 213:10]
    node _two_complement_35_T_17 = add(_two_complement_35_T_16, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_35_T_18 = tail(_two_complement_35_T_17, 1) @[block_division.scala 213:38]
    node _two_complement_35_T_19 = cat(UInt<1>("h0"), dotProductRegs_2[35]) @[block_division.scala 214:14]
    node _two_complement_35_T_20 = mux(_two_complement_35_T_14, _two_complement_35_T_18, _two_complement_35_T_19) @[block_division.scala 211:31]
    two_complement_2[35] <= _two_complement_35_T_20 @[block_division.scala 211:25]
    node _two_complement_buffer_35_T_2 = asSInt(two_complement_2[35]) @[block_division.scala 216:53]
    two_complement_buffer_2[35] <= _two_complement_buffer_35_T_2 @[block_division.scala 216:32]
    reg multiplierReg_164 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_164 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_164 <= io.sign_a[164] @[block_division.scala 206:15]
    multiplierReg_164 <= io.man_a[164] @[block_division.scala 207:21]
    node multiplication_164 = mul(multiplierReg_164, io.man_b[164]) @[block_division.scala 208:42]
    node _dotProductRegs_36_T_12 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_36_T_13 = tail(_dotProductRegs_36_T_12, 1) @[block_division.scala 209:60]
    node _dotProductRegs_36_T_14 = gt(multiplication_164, _dotProductRegs_36_T_13) @[block_division.scala 209:47]
    node _dotProductRegs_36_T_15 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_36_T_16 = tail(_dotProductRegs_36_T_15, 1) @[block_division.scala 209:78]
    node _dotProductRegs_36_T_17 = mux(_dotProductRegs_36_T_14, _dotProductRegs_36_T_16, multiplication_164) @[block_division.scala 209:31]
    dotProductRegs_2[36] <= _dotProductRegs_36_T_17 @[block_division.scala 209:25]
    node _signs_36_T_2 = xor(signReg_164, io.sign_b[164]) @[block_division.scala 210:27]
    signs_2[36] <= _signs_36_T_2 @[block_division.scala 210:16]
    node _two_complement_36_T_14 = eq(signs_2[36], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_36_T_15 = cat(UInt<1>("h0"), dotProductRegs_2[36]) @[block_division.scala 213:16]
    node _two_complement_36_T_16 = not(_two_complement_36_T_15) @[block_division.scala 213:10]
    node _two_complement_36_T_17 = add(_two_complement_36_T_16, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_36_T_18 = tail(_two_complement_36_T_17, 1) @[block_division.scala 213:38]
    node _two_complement_36_T_19 = cat(UInt<1>("h0"), dotProductRegs_2[36]) @[block_division.scala 214:14]
    node _two_complement_36_T_20 = mux(_two_complement_36_T_14, _two_complement_36_T_18, _two_complement_36_T_19) @[block_division.scala 211:31]
    two_complement_2[36] <= _two_complement_36_T_20 @[block_division.scala 211:25]
    node _two_complement_buffer_36_T_2 = asSInt(two_complement_2[36]) @[block_division.scala 216:53]
    two_complement_buffer_2[36] <= _two_complement_buffer_36_T_2 @[block_division.scala 216:32]
    reg multiplierReg_165 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_165 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_165 <= io.sign_a[165] @[block_division.scala 206:15]
    multiplierReg_165 <= io.man_a[165] @[block_division.scala 207:21]
    node multiplication_165 = mul(multiplierReg_165, io.man_b[165]) @[block_division.scala 208:42]
    node _dotProductRegs_37_T_12 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_37_T_13 = tail(_dotProductRegs_37_T_12, 1) @[block_division.scala 209:60]
    node _dotProductRegs_37_T_14 = gt(multiplication_165, _dotProductRegs_37_T_13) @[block_division.scala 209:47]
    node _dotProductRegs_37_T_15 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_37_T_16 = tail(_dotProductRegs_37_T_15, 1) @[block_division.scala 209:78]
    node _dotProductRegs_37_T_17 = mux(_dotProductRegs_37_T_14, _dotProductRegs_37_T_16, multiplication_165) @[block_division.scala 209:31]
    dotProductRegs_2[37] <= _dotProductRegs_37_T_17 @[block_division.scala 209:25]
    node _signs_37_T_2 = xor(signReg_165, io.sign_b[165]) @[block_division.scala 210:27]
    signs_2[37] <= _signs_37_T_2 @[block_division.scala 210:16]
    node _two_complement_37_T_14 = eq(signs_2[37], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_37_T_15 = cat(UInt<1>("h0"), dotProductRegs_2[37]) @[block_division.scala 213:16]
    node _two_complement_37_T_16 = not(_two_complement_37_T_15) @[block_division.scala 213:10]
    node _two_complement_37_T_17 = add(_two_complement_37_T_16, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_37_T_18 = tail(_two_complement_37_T_17, 1) @[block_division.scala 213:38]
    node _two_complement_37_T_19 = cat(UInt<1>("h0"), dotProductRegs_2[37]) @[block_division.scala 214:14]
    node _two_complement_37_T_20 = mux(_two_complement_37_T_14, _two_complement_37_T_18, _two_complement_37_T_19) @[block_division.scala 211:31]
    two_complement_2[37] <= _two_complement_37_T_20 @[block_division.scala 211:25]
    node _two_complement_buffer_37_T_2 = asSInt(two_complement_2[37]) @[block_division.scala 216:53]
    two_complement_buffer_2[37] <= _two_complement_buffer_37_T_2 @[block_division.scala 216:32]
    reg multiplierReg_166 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_166 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_166 <= io.sign_a[166] @[block_division.scala 206:15]
    multiplierReg_166 <= io.man_a[166] @[block_division.scala 207:21]
    node multiplication_166 = mul(multiplierReg_166, io.man_b[166]) @[block_division.scala 208:42]
    node _dotProductRegs_38_T_12 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_38_T_13 = tail(_dotProductRegs_38_T_12, 1) @[block_division.scala 209:60]
    node _dotProductRegs_38_T_14 = gt(multiplication_166, _dotProductRegs_38_T_13) @[block_division.scala 209:47]
    node _dotProductRegs_38_T_15 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_38_T_16 = tail(_dotProductRegs_38_T_15, 1) @[block_division.scala 209:78]
    node _dotProductRegs_38_T_17 = mux(_dotProductRegs_38_T_14, _dotProductRegs_38_T_16, multiplication_166) @[block_division.scala 209:31]
    dotProductRegs_2[38] <= _dotProductRegs_38_T_17 @[block_division.scala 209:25]
    node _signs_38_T_2 = xor(signReg_166, io.sign_b[166]) @[block_division.scala 210:27]
    signs_2[38] <= _signs_38_T_2 @[block_division.scala 210:16]
    node _two_complement_38_T_14 = eq(signs_2[38], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_38_T_15 = cat(UInt<1>("h0"), dotProductRegs_2[38]) @[block_division.scala 213:16]
    node _two_complement_38_T_16 = not(_two_complement_38_T_15) @[block_division.scala 213:10]
    node _two_complement_38_T_17 = add(_two_complement_38_T_16, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_38_T_18 = tail(_two_complement_38_T_17, 1) @[block_division.scala 213:38]
    node _two_complement_38_T_19 = cat(UInt<1>("h0"), dotProductRegs_2[38]) @[block_division.scala 214:14]
    node _two_complement_38_T_20 = mux(_two_complement_38_T_14, _two_complement_38_T_18, _two_complement_38_T_19) @[block_division.scala 211:31]
    two_complement_2[38] <= _two_complement_38_T_20 @[block_division.scala 211:25]
    node _two_complement_buffer_38_T_2 = asSInt(two_complement_2[38]) @[block_division.scala 216:53]
    two_complement_buffer_2[38] <= _two_complement_buffer_38_T_2 @[block_division.scala 216:32]
    reg multiplierReg_167 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_167 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_167 <= io.sign_a[167] @[block_division.scala 206:15]
    multiplierReg_167 <= io.man_a[167] @[block_division.scala 207:21]
    node multiplication_167 = mul(multiplierReg_167, io.man_b[167]) @[block_division.scala 208:42]
    node _dotProductRegs_39_T_12 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_39_T_13 = tail(_dotProductRegs_39_T_12, 1) @[block_division.scala 209:60]
    node _dotProductRegs_39_T_14 = gt(multiplication_167, _dotProductRegs_39_T_13) @[block_division.scala 209:47]
    node _dotProductRegs_39_T_15 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_39_T_16 = tail(_dotProductRegs_39_T_15, 1) @[block_division.scala 209:78]
    node _dotProductRegs_39_T_17 = mux(_dotProductRegs_39_T_14, _dotProductRegs_39_T_16, multiplication_167) @[block_division.scala 209:31]
    dotProductRegs_2[39] <= _dotProductRegs_39_T_17 @[block_division.scala 209:25]
    node _signs_39_T_2 = xor(signReg_167, io.sign_b[167]) @[block_division.scala 210:27]
    signs_2[39] <= _signs_39_T_2 @[block_division.scala 210:16]
    node _two_complement_39_T_14 = eq(signs_2[39], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_39_T_15 = cat(UInt<1>("h0"), dotProductRegs_2[39]) @[block_division.scala 213:16]
    node _two_complement_39_T_16 = not(_two_complement_39_T_15) @[block_division.scala 213:10]
    node _two_complement_39_T_17 = add(_two_complement_39_T_16, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_39_T_18 = tail(_two_complement_39_T_17, 1) @[block_division.scala 213:38]
    node _two_complement_39_T_19 = cat(UInt<1>("h0"), dotProductRegs_2[39]) @[block_division.scala 214:14]
    node _two_complement_39_T_20 = mux(_two_complement_39_T_14, _two_complement_39_T_18, _two_complement_39_T_19) @[block_division.scala 211:31]
    two_complement_2[39] <= _two_complement_39_T_20 @[block_division.scala 211:25]
    node _two_complement_buffer_39_T_2 = asSInt(two_complement_2[39]) @[block_division.scala 216:53]
    two_complement_buffer_2[39] <= _two_complement_buffer_39_T_2 @[block_division.scala 216:32]
    reg multiplierReg_168 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_168 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_168 <= io.sign_a[168] @[block_division.scala 206:15]
    multiplierReg_168 <= io.man_a[168] @[block_division.scala 207:21]
    node multiplication_168 = mul(multiplierReg_168, io.man_b[168]) @[block_division.scala 208:42]
    node _dotProductRegs_40_T_12 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_40_T_13 = tail(_dotProductRegs_40_T_12, 1) @[block_division.scala 209:60]
    node _dotProductRegs_40_T_14 = gt(multiplication_168, _dotProductRegs_40_T_13) @[block_division.scala 209:47]
    node _dotProductRegs_40_T_15 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_40_T_16 = tail(_dotProductRegs_40_T_15, 1) @[block_division.scala 209:78]
    node _dotProductRegs_40_T_17 = mux(_dotProductRegs_40_T_14, _dotProductRegs_40_T_16, multiplication_168) @[block_division.scala 209:31]
    dotProductRegs_2[40] <= _dotProductRegs_40_T_17 @[block_division.scala 209:25]
    node _signs_40_T_2 = xor(signReg_168, io.sign_b[168]) @[block_division.scala 210:27]
    signs_2[40] <= _signs_40_T_2 @[block_division.scala 210:16]
    node _two_complement_40_T_14 = eq(signs_2[40], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_40_T_15 = cat(UInt<1>("h0"), dotProductRegs_2[40]) @[block_division.scala 213:16]
    node _two_complement_40_T_16 = not(_two_complement_40_T_15) @[block_division.scala 213:10]
    node _two_complement_40_T_17 = add(_two_complement_40_T_16, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_40_T_18 = tail(_two_complement_40_T_17, 1) @[block_division.scala 213:38]
    node _two_complement_40_T_19 = cat(UInt<1>("h0"), dotProductRegs_2[40]) @[block_division.scala 214:14]
    node _two_complement_40_T_20 = mux(_two_complement_40_T_14, _two_complement_40_T_18, _two_complement_40_T_19) @[block_division.scala 211:31]
    two_complement_2[40] <= _two_complement_40_T_20 @[block_division.scala 211:25]
    node _two_complement_buffer_40_T_2 = asSInt(two_complement_2[40]) @[block_division.scala 216:53]
    two_complement_buffer_2[40] <= _two_complement_buffer_40_T_2 @[block_division.scala 216:32]
    reg multiplierReg_169 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_169 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_169 <= io.sign_a[169] @[block_division.scala 206:15]
    multiplierReg_169 <= io.man_a[169] @[block_division.scala 207:21]
    node multiplication_169 = mul(multiplierReg_169, io.man_b[169]) @[block_division.scala 208:42]
    node _dotProductRegs_41_T_12 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_41_T_13 = tail(_dotProductRegs_41_T_12, 1) @[block_division.scala 209:60]
    node _dotProductRegs_41_T_14 = gt(multiplication_169, _dotProductRegs_41_T_13) @[block_division.scala 209:47]
    node _dotProductRegs_41_T_15 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_41_T_16 = tail(_dotProductRegs_41_T_15, 1) @[block_division.scala 209:78]
    node _dotProductRegs_41_T_17 = mux(_dotProductRegs_41_T_14, _dotProductRegs_41_T_16, multiplication_169) @[block_division.scala 209:31]
    dotProductRegs_2[41] <= _dotProductRegs_41_T_17 @[block_division.scala 209:25]
    node _signs_41_T_2 = xor(signReg_169, io.sign_b[169]) @[block_division.scala 210:27]
    signs_2[41] <= _signs_41_T_2 @[block_division.scala 210:16]
    node _two_complement_41_T_14 = eq(signs_2[41], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_41_T_15 = cat(UInt<1>("h0"), dotProductRegs_2[41]) @[block_division.scala 213:16]
    node _two_complement_41_T_16 = not(_two_complement_41_T_15) @[block_division.scala 213:10]
    node _two_complement_41_T_17 = add(_two_complement_41_T_16, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_41_T_18 = tail(_two_complement_41_T_17, 1) @[block_division.scala 213:38]
    node _two_complement_41_T_19 = cat(UInt<1>("h0"), dotProductRegs_2[41]) @[block_division.scala 214:14]
    node _two_complement_41_T_20 = mux(_two_complement_41_T_14, _two_complement_41_T_18, _two_complement_41_T_19) @[block_division.scala 211:31]
    two_complement_2[41] <= _two_complement_41_T_20 @[block_division.scala 211:25]
    node _two_complement_buffer_41_T_2 = asSInt(two_complement_2[41]) @[block_division.scala 216:53]
    two_complement_buffer_2[41] <= _two_complement_buffer_41_T_2 @[block_division.scala 216:32]
    reg multiplierReg_170 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_170 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_170 <= io.sign_a[170] @[block_division.scala 206:15]
    multiplierReg_170 <= io.man_a[170] @[block_division.scala 207:21]
    node multiplication_170 = mul(multiplierReg_170, io.man_b[170]) @[block_division.scala 208:42]
    node _dotProductRegs_42_T_12 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_42_T_13 = tail(_dotProductRegs_42_T_12, 1) @[block_division.scala 209:60]
    node _dotProductRegs_42_T_14 = gt(multiplication_170, _dotProductRegs_42_T_13) @[block_division.scala 209:47]
    node _dotProductRegs_42_T_15 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_42_T_16 = tail(_dotProductRegs_42_T_15, 1) @[block_division.scala 209:78]
    node _dotProductRegs_42_T_17 = mux(_dotProductRegs_42_T_14, _dotProductRegs_42_T_16, multiplication_170) @[block_division.scala 209:31]
    dotProductRegs_2[42] <= _dotProductRegs_42_T_17 @[block_division.scala 209:25]
    node _signs_42_T_2 = xor(signReg_170, io.sign_b[170]) @[block_division.scala 210:27]
    signs_2[42] <= _signs_42_T_2 @[block_division.scala 210:16]
    node _two_complement_42_T_14 = eq(signs_2[42], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_42_T_15 = cat(UInt<1>("h0"), dotProductRegs_2[42]) @[block_division.scala 213:16]
    node _two_complement_42_T_16 = not(_two_complement_42_T_15) @[block_division.scala 213:10]
    node _two_complement_42_T_17 = add(_two_complement_42_T_16, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_42_T_18 = tail(_two_complement_42_T_17, 1) @[block_division.scala 213:38]
    node _two_complement_42_T_19 = cat(UInt<1>("h0"), dotProductRegs_2[42]) @[block_division.scala 214:14]
    node _two_complement_42_T_20 = mux(_two_complement_42_T_14, _two_complement_42_T_18, _two_complement_42_T_19) @[block_division.scala 211:31]
    two_complement_2[42] <= _two_complement_42_T_20 @[block_division.scala 211:25]
    node _two_complement_buffer_42_T_2 = asSInt(two_complement_2[42]) @[block_division.scala 216:53]
    two_complement_buffer_2[42] <= _two_complement_buffer_42_T_2 @[block_division.scala 216:32]
    reg multiplierReg_171 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_171 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_171 <= io.sign_a[171] @[block_division.scala 206:15]
    multiplierReg_171 <= io.man_a[171] @[block_division.scala 207:21]
    node multiplication_171 = mul(multiplierReg_171, io.man_b[171]) @[block_division.scala 208:42]
    node _dotProductRegs_43_T_12 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_43_T_13 = tail(_dotProductRegs_43_T_12, 1) @[block_division.scala 209:60]
    node _dotProductRegs_43_T_14 = gt(multiplication_171, _dotProductRegs_43_T_13) @[block_division.scala 209:47]
    node _dotProductRegs_43_T_15 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_43_T_16 = tail(_dotProductRegs_43_T_15, 1) @[block_division.scala 209:78]
    node _dotProductRegs_43_T_17 = mux(_dotProductRegs_43_T_14, _dotProductRegs_43_T_16, multiplication_171) @[block_division.scala 209:31]
    dotProductRegs_2[43] <= _dotProductRegs_43_T_17 @[block_division.scala 209:25]
    node _signs_43_T_2 = xor(signReg_171, io.sign_b[171]) @[block_division.scala 210:27]
    signs_2[43] <= _signs_43_T_2 @[block_division.scala 210:16]
    node _two_complement_43_T_14 = eq(signs_2[43], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_43_T_15 = cat(UInt<1>("h0"), dotProductRegs_2[43]) @[block_division.scala 213:16]
    node _two_complement_43_T_16 = not(_two_complement_43_T_15) @[block_division.scala 213:10]
    node _two_complement_43_T_17 = add(_two_complement_43_T_16, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_43_T_18 = tail(_two_complement_43_T_17, 1) @[block_division.scala 213:38]
    node _two_complement_43_T_19 = cat(UInt<1>("h0"), dotProductRegs_2[43]) @[block_division.scala 214:14]
    node _two_complement_43_T_20 = mux(_two_complement_43_T_14, _two_complement_43_T_18, _two_complement_43_T_19) @[block_division.scala 211:31]
    two_complement_2[43] <= _two_complement_43_T_20 @[block_division.scala 211:25]
    node _two_complement_buffer_43_T_2 = asSInt(two_complement_2[43]) @[block_division.scala 216:53]
    two_complement_buffer_2[43] <= _two_complement_buffer_43_T_2 @[block_division.scala 216:32]
    reg multiplierReg_172 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_172 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_172 <= io.sign_a[172] @[block_division.scala 206:15]
    multiplierReg_172 <= io.man_a[172] @[block_division.scala 207:21]
    node multiplication_172 = mul(multiplierReg_172, io.man_b[172]) @[block_division.scala 208:42]
    node _dotProductRegs_44_T_12 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_44_T_13 = tail(_dotProductRegs_44_T_12, 1) @[block_division.scala 209:60]
    node _dotProductRegs_44_T_14 = gt(multiplication_172, _dotProductRegs_44_T_13) @[block_division.scala 209:47]
    node _dotProductRegs_44_T_15 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_44_T_16 = tail(_dotProductRegs_44_T_15, 1) @[block_division.scala 209:78]
    node _dotProductRegs_44_T_17 = mux(_dotProductRegs_44_T_14, _dotProductRegs_44_T_16, multiplication_172) @[block_division.scala 209:31]
    dotProductRegs_2[44] <= _dotProductRegs_44_T_17 @[block_division.scala 209:25]
    node _signs_44_T_2 = xor(signReg_172, io.sign_b[172]) @[block_division.scala 210:27]
    signs_2[44] <= _signs_44_T_2 @[block_division.scala 210:16]
    node _two_complement_44_T_14 = eq(signs_2[44], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_44_T_15 = cat(UInt<1>("h0"), dotProductRegs_2[44]) @[block_division.scala 213:16]
    node _two_complement_44_T_16 = not(_two_complement_44_T_15) @[block_division.scala 213:10]
    node _two_complement_44_T_17 = add(_two_complement_44_T_16, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_44_T_18 = tail(_two_complement_44_T_17, 1) @[block_division.scala 213:38]
    node _two_complement_44_T_19 = cat(UInt<1>("h0"), dotProductRegs_2[44]) @[block_division.scala 214:14]
    node _two_complement_44_T_20 = mux(_two_complement_44_T_14, _two_complement_44_T_18, _two_complement_44_T_19) @[block_division.scala 211:31]
    two_complement_2[44] <= _two_complement_44_T_20 @[block_division.scala 211:25]
    node _two_complement_buffer_44_T_2 = asSInt(two_complement_2[44]) @[block_division.scala 216:53]
    two_complement_buffer_2[44] <= _two_complement_buffer_44_T_2 @[block_division.scala 216:32]
    reg multiplierReg_173 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_173 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_173 <= io.sign_a[173] @[block_division.scala 206:15]
    multiplierReg_173 <= io.man_a[173] @[block_division.scala 207:21]
    node multiplication_173 = mul(multiplierReg_173, io.man_b[173]) @[block_division.scala 208:42]
    node _dotProductRegs_45_T_12 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_45_T_13 = tail(_dotProductRegs_45_T_12, 1) @[block_division.scala 209:60]
    node _dotProductRegs_45_T_14 = gt(multiplication_173, _dotProductRegs_45_T_13) @[block_division.scala 209:47]
    node _dotProductRegs_45_T_15 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_45_T_16 = tail(_dotProductRegs_45_T_15, 1) @[block_division.scala 209:78]
    node _dotProductRegs_45_T_17 = mux(_dotProductRegs_45_T_14, _dotProductRegs_45_T_16, multiplication_173) @[block_division.scala 209:31]
    dotProductRegs_2[45] <= _dotProductRegs_45_T_17 @[block_division.scala 209:25]
    node _signs_45_T_2 = xor(signReg_173, io.sign_b[173]) @[block_division.scala 210:27]
    signs_2[45] <= _signs_45_T_2 @[block_division.scala 210:16]
    node _two_complement_45_T_14 = eq(signs_2[45], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_45_T_15 = cat(UInt<1>("h0"), dotProductRegs_2[45]) @[block_division.scala 213:16]
    node _two_complement_45_T_16 = not(_two_complement_45_T_15) @[block_division.scala 213:10]
    node _two_complement_45_T_17 = add(_two_complement_45_T_16, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_45_T_18 = tail(_two_complement_45_T_17, 1) @[block_division.scala 213:38]
    node _two_complement_45_T_19 = cat(UInt<1>("h0"), dotProductRegs_2[45]) @[block_division.scala 214:14]
    node _two_complement_45_T_20 = mux(_two_complement_45_T_14, _two_complement_45_T_18, _two_complement_45_T_19) @[block_division.scala 211:31]
    two_complement_2[45] <= _two_complement_45_T_20 @[block_division.scala 211:25]
    node _two_complement_buffer_45_T_2 = asSInt(two_complement_2[45]) @[block_division.scala 216:53]
    two_complement_buffer_2[45] <= _two_complement_buffer_45_T_2 @[block_division.scala 216:32]
    reg multiplierReg_174 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_174 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_174 <= io.sign_a[174] @[block_division.scala 206:15]
    multiplierReg_174 <= io.man_a[174] @[block_division.scala 207:21]
    node multiplication_174 = mul(multiplierReg_174, io.man_b[174]) @[block_division.scala 208:42]
    node _dotProductRegs_46_T_12 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_46_T_13 = tail(_dotProductRegs_46_T_12, 1) @[block_division.scala 209:60]
    node _dotProductRegs_46_T_14 = gt(multiplication_174, _dotProductRegs_46_T_13) @[block_division.scala 209:47]
    node _dotProductRegs_46_T_15 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_46_T_16 = tail(_dotProductRegs_46_T_15, 1) @[block_division.scala 209:78]
    node _dotProductRegs_46_T_17 = mux(_dotProductRegs_46_T_14, _dotProductRegs_46_T_16, multiplication_174) @[block_division.scala 209:31]
    dotProductRegs_2[46] <= _dotProductRegs_46_T_17 @[block_division.scala 209:25]
    node _signs_46_T_2 = xor(signReg_174, io.sign_b[174]) @[block_division.scala 210:27]
    signs_2[46] <= _signs_46_T_2 @[block_division.scala 210:16]
    node _two_complement_46_T_14 = eq(signs_2[46], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_46_T_15 = cat(UInt<1>("h0"), dotProductRegs_2[46]) @[block_division.scala 213:16]
    node _two_complement_46_T_16 = not(_two_complement_46_T_15) @[block_division.scala 213:10]
    node _two_complement_46_T_17 = add(_two_complement_46_T_16, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_46_T_18 = tail(_two_complement_46_T_17, 1) @[block_division.scala 213:38]
    node _two_complement_46_T_19 = cat(UInt<1>("h0"), dotProductRegs_2[46]) @[block_division.scala 214:14]
    node _two_complement_46_T_20 = mux(_two_complement_46_T_14, _two_complement_46_T_18, _two_complement_46_T_19) @[block_division.scala 211:31]
    two_complement_2[46] <= _two_complement_46_T_20 @[block_division.scala 211:25]
    node _two_complement_buffer_46_T_2 = asSInt(two_complement_2[46]) @[block_division.scala 216:53]
    two_complement_buffer_2[46] <= _two_complement_buffer_46_T_2 @[block_division.scala 216:32]
    reg multiplierReg_175 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_175 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_175 <= io.sign_a[175] @[block_division.scala 206:15]
    multiplierReg_175 <= io.man_a[175] @[block_division.scala 207:21]
    node multiplication_175 = mul(multiplierReg_175, io.man_b[175]) @[block_division.scala 208:42]
    node _dotProductRegs_47_T_12 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_47_T_13 = tail(_dotProductRegs_47_T_12, 1) @[block_division.scala 209:60]
    node _dotProductRegs_47_T_14 = gt(multiplication_175, _dotProductRegs_47_T_13) @[block_division.scala 209:47]
    node _dotProductRegs_47_T_15 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_47_T_16 = tail(_dotProductRegs_47_T_15, 1) @[block_division.scala 209:78]
    node _dotProductRegs_47_T_17 = mux(_dotProductRegs_47_T_14, _dotProductRegs_47_T_16, multiplication_175) @[block_division.scala 209:31]
    dotProductRegs_2[47] <= _dotProductRegs_47_T_17 @[block_division.scala 209:25]
    node _signs_47_T_2 = xor(signReg_175, io.sign_b[175]) @[block_division.scala 210:27]
    signs_2[47] <= _signs_47_T_2 @[block_division.scala 210:16]
    node _two_complement_47_T_14 = eq(signs_2[47], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_47_T_15 = cat(UInt<1>("h0"), dotProductRegs_2[47]) @[block_division.scala 213:16]
    node _two_complement_47_T_16 = not(_two_complement_47_T_15) @[block_division.scala 213:10]
    node _two_complement_47_T_17 = add(_two_complement_47_T_16, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_47_T_18 = tail(_two_complement_47_T_17, 1) @[block_division.scala 213:38]
    node _two_complement_47_T_19 = cat(UInt<1>("h0"), dotProductRegs_2[47]) @[block_division.scala 214:14]
    node _two_complement_47_T_20 = mux(_two_complement_47_T_14, _two_complement_47_T_18, _two_complement_47_T_19) @[block_division.scala 211:31]
    two_complement_2[47] <= _two_complement_47_T_20 @[block_division.scala 211:25]
    node _two_complement_buffer_47_T_2 = asSInt(two_complement_2[47]) @[block_division.scala 216:53]
    two_complement_buffer_2[47] <= _two_complement_buffer_47_T_2 @[block_division.scala 216:32]
    reg multiplierReg_176 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_176 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_176 <= io.sign_a[176] @[block_division.scala 206:15]
    multiplierReg_176 <= io.man_a[176] @[block_division.scala 207:21]
    node multiplication_176 = mul(multiplierReg_176, io.man_b[176]) @[block_division.scala 208:42]
    node _dotProductRegs_48_T_12 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_48_T_13 = tail(_dotProductRegs_48_T_12, 1) @[block_division.scala 209:60]
    node _dotProductRegs_48_T_14 = gt(multiplication_176, _dotProductRegs_48_T_13) @[block_division.scala 209:47]
    node _dotProductRegs_48_T_15 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_48_T_16 = tail(_dotProductRegs_48_T_15, 1) @[block_division.scala 209:78]
    node _dotProductRegs_48_T_17 = mux(_dotProductRegs_48_T_14, _dotProductRegs_48_T_16, multiplication_176) @[block_division.scala 209:31]
    dotProductRegs_2[48] <= _dotProductRegs_48_T_17 @[block_division.scala 209:25]
    node _signs_48_T_2 = xor(signReg_176, io.sign_b[176]) @[block_division.scala 210:27]
    signs_2[48] <= _signs_48_T_2 @[block_division.scala 210:16]
    node _two_complement_48_T_14 = eq(signs_2[48], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_48_T_15 = cat(UInt<1>("h0"), dotProductRegs_2[48]) @[block_division.scala 213:16]
    node _two_complement_48_T_16 = not(_two_complement_48_T_15) @[block_division.scala 213:10]
    node _two_complement_48_T_17 = add(_two_complement_48_T_16, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_48_T_18 = tail(_two_complement_48_T_17, 1) @[block_division.scala 213:38]
    node _two_complement_48_T_19 = cat(UInt<1>("h0"), dotProductRegs_2[48]) @[block_division.scala 214:14]
    node _two_complement_48_T_20 = mux(_two_complement_48_T_14, _two_complement_48_T_18, _two_complement_48_T_19) @[block_division.scala 211:31]
    two_complement_2[48] <= _two_complement_48_T_20 @[block_division.scala 211:25]
    node _two_complement_buffer_48_T_2 = asSInt(two_complement_2[48]) @[block_division.scala 216:53]
    two_complement_buffer_2[48] <= _two_complement_buffer_48_T_2 @[block_division.scala 216:32]
    reg multiplierReg_177 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_177 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_177 <= io.sign_a[177] @[block_division.scala 206:15]
    multiplierReg_177 <= io.man_a[177] @[block_division.scala 207:21]
    node multiplication_177 = mul(multiplierReg_177, io.man_b[177]) @[block_division.scala 208:42]
    node _dotProductRegs_49_T_12 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_49_T_13 = tail(_dotProductRegs_49_T_12, 1) @[block_division.scala 209:60]
    node _dotProductRegs_49_T_14 = gt(multiplication_177, _dotProductRegs_49_T_13) @[block_division.scala 209:47]
    node _dotProductRegs_49_T_15 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_49_T_16 = tail(_dotProductRegs_49_T_15, 1) @[block_division.scala 209:78]
    node _dotProductRegs_49_T_17 = mux(_dotProductRegs_49_T_14, _dotProductRegs_49_T_16, multiplication_177) @[block_division.scala 209:31]
    dotProductRegs_2[49] <= _dotProductRegs_49_T_17 @[block_division.scala 209:25]
    node _signs_49_T_2 = xor(signReg_177, io.sign_b[177]) @[block_division.scala 210:27]
    signs_2[49] <= _signs_49_T_2 @[block_division.scala 210:16]
    node _two_complement_49_T_14 = eq(signs_2[49], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_49_T_15 = cat(UInt<1>("h0"), dotProductRegs_2[49]) @[block_division.scala 213:16]
    node _two_complement_49_T_16 = not(_two_complement_49_T_15) @[block_division.scala 213:10]
    node _two_complement_49_T_17 = add(_two_complement_49_T_16, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_49_T_18 = tail(_two_complement_49_T_17, 1) @[block_division.scala 213:38]
    node _two_complement_49_T_19 = cat(UInt<1>("h0"), dotProductRegs_2[49]) @[block_division.scala 214:14]
    node _two_complement_49_T_20 = mux(_two_complement_49_T_14, _two_complement_49_T_18, _two_complement_49_T_19) @[block_division.scala 211:31]
    two_complement_2[49] <= _two_complement_49_T_20 @[block_division.scala 211:25]
    node _two_complement_buffer_49_T_2 = asSInt(two_complement_2[49]) @[block_division.scala 216:53]
    two_complement_buffer_2[49] <= _two_complement_buffer_49_T_2 @[block_division.scala 216:32]
    reg multiplierReg_178 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_178 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_178 <= io.sign_a[178] @[block_division.scala 206:15]
    multiplierReg_178 <= io.man_a[178] @[block_division.scala 207:21]
    node multiplication_178 = mul(multiplierReg_178, io.man_b[178]) @[block_division.scala 208:42]
    node _dotProductRegs_50_T_12 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_50_T_13 = tail(_dotProductRegs_50_T_12, 1) @[block_division.scala 209:60]
    node _dotProductRegs_50_T_14 = gt(multiplication_178, _dotProductRegs_50_T_13) @[block_division.scala 209:47]
    node _dotProductRegs_50_T_15 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_50_T_16 = tail(_dotProductRegs_50_T_15, 1) @[block_division.scala 209:78]
    node _dotProductRegs_50_T_17 = mux(_dotProductRegs_50_T_14, _dotProductRegs_50_T_16, multiplication_178) @[block_division.scala 209:31]
    dotProductRegs_2[50] <= _dotProductRegs_50_T_17 @[block_division.scala 209:25]
    node _signs_50_T_2 = xor(signReg_178, io.sign_b[178]) @[block_division.scala 210:27]
    signs_2[50] <= _signs_50_T_2 @[block_division.scala 210:16]
    node _two_complement_50_T_14 = eq(signs_2[50], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_50_T_15 = cat(UInt<1>("h0"), dotProductRegs_2[50]) @[block_division.scala 213:16]
    node _two_complement_50_T_16 = not(_two_complement_50_T_15) @[block_division.scala 213:10]
    node _two_complement_50_T_17 = add(_two_complement_50_T_16, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_50_T_18 = tail(_two_complement_50_T_17, 1) @[block_division.scala 213:38]
    node _two_complement_50_T_19 = cat(UInt<1>("h0"), dotProductRegs_2[50]) @[block_division.scala 214:14]
    node _two_complement_50_T_20 = mux(_two_complement_50_T_14, _two_complement_50_T_18, _two_complement_50_T_19) @[block_division.scala 211:31]
    two_complement_2[50] <= _two_complement_50_T_20 @[block_division.scala 211:25]
    node _two_complement_buffer_50_T_2 = asSInt(two_complement_2[50]) @[block_division.scala 216:53]
    two_complement_buffer_2[50] <= _two_complement_buffer_50_T_2 @[block_division.scala 216:32]
    reg multiplierReg_179 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_179 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_179 <= io.sign_a[179] @[block_division.scala 206:15]
    multiplierReg_179 <= io.man_a[179] @[block_division.scala 207:21]
    node multiplication_179 = mul(multiplierReg_179, io.man_b[179]) @[block_division.scala 208:42]
    node _dotProductRegs_51_T_12 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_51_T_13 = tail(_dotProductRegs_51_T_12, 1) @[block_division.scala 209:60]
    node _dotProductRegs_51_T_14 = gt(multiplication_179, _dotProductRegs_51_T_13) @[block_division.scala 209:47]
    node _dotProductRegs_51_T_15 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_51_T_16 = tail(_dotProductRegs_51_T_15, 1) @[block_division.scala 209:78]
    node _dotProductRegs_51_T_17 = mux(_dotProductRegs_51_T_14, _dotProductRegs_51_T_16, multiplication_179) @[block_division.scala 209:31]
    dotProductRegs_2[51] <= _dotProductRegs_51_T_17 @[block_division.scala 209:25]
    node _signs_51_T_2 = xor(signReg_179, io.sign_b[179]) @[block_division.scala 210:27]
    signs_2[51] <= _signs_51_T_2 @[block_division.scala 210:16]
    node _two_complement_51_T_14 = eq(signs_2[51], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_51_T_15 = cat(UInt<1>("h0"), dotProductRegs_2[51]) @[block_division.scala 213:16]
    node _two_complement_51_T_16 = not(_two_complement_51_T_15) @[block_division.scala 213:10]
    node _two_complement_51_T_17 = add(_two_complement_51_T_16, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_51_T_18 = tail(_two_complement_51_T_17, 1) @[block_division.scala 213:38]
    node _two_complement_51_T_19 = cat(UInt<1>("h0"), dotProductRegs_2[51]) @[block_division.scala 214:14]
    node _two_complement_51_T_20 = mux(_two_complement_51_T_14, _two_complement_51_T_18, _two_complement_51_T_19) @[block_division.scala 211:31]
    two_complement_2[51] <= _two_complement_51_T_20 @[block_division.scala 211:25]
    node _two_complement_buffer_51_T_2 = asSInt(two_complement_2[51]) @[block_division.scala 216:53]
    two_complement_buffer_2[51] <= _two_complement_buffer_51_T_2 @[block_division.scala 216:32]
    reg multiplierReg_180 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_180 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_180 <= io.sign_a[180] @[block_division.scala 206:15]
    multiplierReg_180 <= io.man_a[180] @[block_division.scala 207:21]
    node multiplication_180 = mul(multiplierReg_180, io.man_b[180]) @[block_division.scala 208:42]
    node _dotProductRegs_52_T_12 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_52_T_13 = tail(_dotProductRegs_52_T_12, 1) @[block_division.scala 209:60]
    node _dotProductRegs_52_T_14 = gt(multiplication_180, _dotProductRegs_52_T_13) @[block_division.scala 209:47]
    node _dotProductRegs_52_T_15 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_52_T_16 = tail(_dotProductRegs_52_T_15, 1) @[block_division.scala 209:78]
    node _dotProductRegs_52_T_17 = mux(_dotProductRegs_52_T_14, _dotProductRegs_52_T_16, multiplication_180) @[block_division.scala 209:31]
    dotProductRegs_2[52] <= _dotProductRegs_52_T_17 @[block_division.scala 209:25]
    node _signs_52_T_2 = xor(signReg_180, io.sign_b[180]) @[block_division.scala 210:27]
    signs_2[52] <= _signs_52_T_2 @[block_division.scala 210:16]
    node _two_complement_52_T_14 = eq(signs_2[52], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_52_T_15 = cat(UInt<1>("h0"), dotProductRegs_2[52]) @[block_division.scala 213:16]
    node _two_complement_52_T_16 = not(_two_complement_52_T_15) @[block_division.scala 213:10]
    node _two_complement_52_T_17 = add(_two_complement_52_T_16, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_52_T_18 = tail(_two_complement_52_T_17, 1) @[block_division.scala 213:38]
    node _two_complement_52_T_19 = cat(UInt<1>("h0"), dotProductRegs_2[52]) @[block_division.scala 214:14]
    node _two_complement_52_T_20 = mux(_two_complement_52_T_14, _two_complement_52_T_18, _two_complement_52_T_19) @[block_division.scala 211:31]
    two_complement_2[52] <= _two_complement_52_T_20 @[block_division.scala 211:25]
    node _two_complement_buffer_52_T_2 = asSInt(two_complement_2[52]) @[block_division.scala 216:53]
    two_complement_buffer_2[52] <= _two_complement_buffer_52_T_2 @[block_division.scala 216:32]
    reg multiplierReg_181 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_181 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_181 <= io.sign_a[181] @[block_division.scala 206:15]
    multiplierReg_181 <= io.man_a[181] @[block_division.scala 207:21]
    node multiplication_181 = mul(multiplierReg_181, io.man_b[181]) @[block_division.scala 208:42]
    node _dotProductRegs_53_T_12 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_53_T_13 = tail(_dotProductRegs_53_T_12, 1) @[block_division.scala 209:60]
    node _dotProductRegs_53_T_14 = gt(multiplication_181, _dotProductRegs_53_T_13) @[block_division.scala 209:47]
    node _dotProductRegs_53_T_15 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_53_T_16 = tail(_dotProductRegs_53_T_15, 1) @[block_division.scala 209:78]
    node _dotProductRegs_53_T_17 = mux(_dotProductRegs_53_T_14, _dotProductRegs_53_T_16, multiplication_181) @[block_division.scala 209:31]
    dotProductRegs_2[53] <= _dotProductRegs_53_T_17 @[block_division.scala 209:25]
    node _signs_53_T_2 = xor(signReg_181, io.sign_b[181]) @[block_division.scala 210:27]
    signs_2[53] <= _signs_53_T_2 @[block_division.scala 210:16]
    node _two_complement_53_T_14 = eq(signs_2[53], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_53_T_15 = cat(UInt<1>("h0"), dotProductRegs_2[53]) @[block_division.scala 213:16]
    node _two_complement_53_T_16 = not(_two_complement_53_T_15) @[block_division.scala 213:10]
    node _two_complement_53_T_17 = add(_two_complement_53_T_16, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_53_T_18 = tail(_two_complement_53_T_17, 1) @[block_division.scala 213:38]
    node _two_complement_53_T_19 = cat(UInt<1>("h0"), dotProductRegs_2[53]) @[block_division.scala 214:14]
    node _two_complement_53_T_20 = mux(_two_complement_53_T_14, _two_complement_53_T_18, _two_complement_53_T_19) @[block_division.scala 211:31]
    two_complement_2[53] <= _two_complement_53_T_20 @[block_division.scala 211:25]
    node _two_complement_buffer_53_T_2 = asSInt(two_complement_2[53]) @[block_division.scala 216:53]
    two_complement_buffer_2[53] <= _two_complement_buffer_53_T_2 @[block_division.scala 216:32]
    reg multiplierReg_182 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_182 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_182 <= io.sign_a[182] @[block_division.scala 206:15]
    multiplierReg_182 <= io.man_a[182] @[block_division.scala 207:21]
    node multiplication_182 = mul(multiplierReg_182, io.man_b[182]) @[block_division.scala 208:42]
    node _dotProductRegs_54_T_12 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_54_T_13 = tail(_dotProductRegs_54_T_12, 1) @[block_division.scala 209:60]
    node _dotProductRegs_54_T_14 = gt(multiplication_182, _dotProductRegs_54_T_13) @[block_division.scala 209:47]
    node _dotProductRegs_54_T_15 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_54_T_16 = tail(_dotProductRegs_54_T_15, 1) @[block_division.scala 209:78]
    node _dotProductRegs_54_T_17 = mux(_dotProductRegs_54_T_14, _dotProductRegs_54_T_16, multiplication_182) @[block_division.scala 209:31]
    dotProductRegs_2[54] <= _dotProductRegs_54_T_17 @[block_division.scala 209:25]
    node _signs_54_T_2 = xor(signReg_182, io.sign_b[182]) @[block_division.scala 210:27]
    signs_2[54] <= _signs_54_T_2 @[block_division.scala 210:16]
    node _two_complement_54_T_14 = eq(signs_2[54], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_54_T_15 = cat(UInt<1>("h0"), dotProductRegs_2[54]) @[block_division.scala 213:16]
    node _two_complement_54_T_16 = not(_two_complement_54_T_15) @[block_division.scala 213:10]
    node _two_complement_54_T_17 = add(_two_complement_54_T_16, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_54_T_18 = tail(_two_complement_54_T_17, 1) @[block_division.scala 213:38]
    node _two_complement_54_T_19 = cat(UInt<1>("h0"), dotProductRegs_2[54]) @[block_division.scala 214:14]
    node _two_complement_54_T_20 = mux(_two_complement_54_T_14, _two_complement_54_T_18, _two_complement_54_T_19) @[block_division.scala 211:31]
    two_complement_2[54] <= _two_complement_54_T_20 @[block_division.scala 211:25]
    node _two_complement_buffer_54_T_2 = asSInt(two_complement_2[54]) @[block_division.scala 216:53]
    two_complement_buffer_2[54] <= _two_complement_buffer_54_T_2 @[block_division.scala 216:32]
    reg multiplierReg_183 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_183 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_183 <= io.sign_a[183] @[block_division.scala 206:15]
    multiplierReg_183 <= io.man_a[183] @[block_division.scala 207:21]
    node multiplication_183 = mul(multiplierReg_183, io.man_b[183]) @[block_division.scala 208:42]
    node _dotProductRegs_55_T_12 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_55_T_13 = tail(_dotProductRegs_55_T_12, 1) @[block_division.scala 209:60]
    node _dotProductRegs_55_T_14 = gt(multiplication_183, _dotProductRegs_55_T_13) @[block_division.scala 209:47]
    node _dotProductRegs_55_T_15 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_55_T_16 = tail(_dotProductRegs_55_T_15, 1) @[block_division.scala 209:78]
    node _dotProductRegs_55_T_17 = mux(_dotProductRegs_55_T_14, _dotProductRegs_55_T_16, multiplication_183) @[block_division.scala 209:31]
    dotProductRegs_2[55] <= _dotProductRegs_55_T_17 @[block_division.scala 209:25]
    node _signs_55_T_2 = xor(signReg_183, io.sign_b[183]) @[block_division.scala 210:27]
    signs_2[55] <= _signs_55_T_2 @[block_division.scala 210:16]
    node _two_complement_55_T_14 = eq(signs_2[55], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_55_T_15 = cat(UInt<1>("h0"), dotProductRegs_2[55]) @[block_division.scala 213:16]
    node _two_complement_55_T_16 = not(_two_complement_55_T_15) @[block_division.scala 213:10]
    node _two_complement_55_T_17 = add(_two_complement_55_T_16, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_55_T_18 = tail(_two_complement_55_T_17, 1) @[block_division.scala 213:38]
    node _two_complement_55_T_19 = cat(UInt<1>("h0"), dotProductRegs_2[55]) @[block_division.scala 214:14]
    node _two_complement_55_T_20 = mux(_two_complement_55_T_14, _two_complement_55_T_18, _two_complement_55_T_19) @[block_division.scala 211:31]
    two_complement_2[55] <= _two_complement_55_T_20 @[block_division.scala 211:25]
    node _two_complement_buffer_55_T_2 = asSInt(two_complement_2[55]) @[block_division.scala 216:53]
    two_complement_buffer_2[55] <= _two_complement_buffer_55_T_2 @[block_division.scala 216:32]
    reg multiplierReg_184 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_184 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_184 <= io.sign_a[184] @[block_division.scala 206:15]
    multiplierReg_184 <= io.man_a[184] @[block_division.scala 207:21]
    node multiplication_184 = mul(multiplierReg_184, io.man_b[184]) @[block_division.scala 208:42]
    node _dotProductRegs_56_T_12 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_56_T_13 = tail(_dotProductRegs_56_T_12, 1) @[block_division.scala 209:60]
    node _dotProductRegs_56_T_14 = gt(multiplication_184, _dotProductRegs_56_T_13) @[block_division.scala 209:47]
    node _dotProductRegs_56_T_15 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_56_T_16 = tail(_dotProductRegs_56_T_15, 1) @[block_division.scala 209:78]
    node _dotProductRegs_56_T_17 = mux(_dotProductRegs_56_T_14, _dotProductRegs_56_T_16, multiplication_184) @[block_division.scala 209:31]
    dotProductRegs_2[56] <= _dotProductRegs_56_T_17 @[block_division.scala 209:25]
    node _signs_56_T_2 = xor(signReg_184, io.sign_b[184]) @[block_division.scala 210:27]
    signs_2[56] <= _signs_56_T_2 @[block_division.scala 210:16]
    node _two_complement_56_T_14 = eq(signs_2[56], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_56_T_15 = cat(UInt<1>("h0"), dotProductRegs_2[56]) @[block_division.scala 213:16]
    node _two_complement_56_T_16 = not(_two_complement_56_T_15) @[block_division.scala 213:10]
    node _two_complement_56_T_17 = add(_two_complement_56_T_16, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_56_T_18 = tail(_two_complement_56_T_17, 1) @[block_division.scala 213:38]
    node _two_complement_56_T_19 = cat(UInt<1>("h0"), dotProductRegs_2[56]) @[block_division.scala 214:14]
    node _two_complement_56_T_20 = mux(_two_complement_56_T_14, _two_complement_56_T_18, _two_complement_56_T_19) @[block_division.scala 211:31]
    two_complement_2[56] <= _two_complement_56_T_20 @[block_division.scala 211:25]
    node _two_complement_buffer_56_T_2 = asSInt(two_complement_2[56]) @[block_division.scala 216:53]
    two_complement_buffer_2[56] <= _two_complement_buffer_56_T_2 @[block_division.scala 216:32]
    reg multiplierReg_185 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_185 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_185 <= io.sign_a[185] @[block_division.scala 206:15]
    multiplierReg_185 <= io.man_a[185] @[block_division.scala 207:21]
    node multiplication_185 = mul(multiplierReg_185, io.man_b[185]) @[block_division.scala 208:42]
    node _dotProductRegs_57_T_12 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_57_T_13 = tail(_dotProductRegs_57_T_12, 1) @[block_division.scala 209:60]
    node _dotProductRegs_57_T_14 = gt(multiplication_185, _dotProductRegs_57_T_13) @[block_division.scala 209:47]
    node _dotProductRegs_57_T_15 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_57_T_16 = tail(_dotProductRegs_57_T_15, 1) @[block_division.scala 209:78]
    node _dotProductRegs_57_T_17 = mux(_dotProductRegs_57_T_14, _dotProductRegs_57_T_16, multiplication_185) @[block_division.scala 209:31]
    dotProductRegs_2[57] <= _dotProductRegs_57_T_17 @[block_division.scala 209:25]
    node _signs_57_T_2 = xor(signReg_185, io.sign_b[185]) @[block_division.scala 210:27]
    signs_2[57] <= _signs_57_T_2 @[block_division.scala 210:16]
    node _two_complement_57_T_14 = eq(signs_2[57], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_57_T_15 = cat(UInt<1>("h0"), dotProductRegs_2[57]) @[block_division.scala 213:16]
    node _two_complement_57_T_16 = not(_two_complement_57_T_15) @[block_division.scala 213:10]
    node _two_complement_57_T_17 = add(_two_complement_57_T_16, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_57_T_18 = tail(_two_complement_57_T_17, 1) @[block_division.scala 213:38]
    node _two_complement_57_T_19 = cat(UInt<1>("h0"), dotProductRegs_2[57]) @[block_division.scala 214:14]
    node _two_complement_57_T_20 = mux(_two_complement_57_T_14, _two_complement_57_T_18, _two_complement_57_T_19) @[block_division.scala 211:31]
    two_complement_2[57] <= _two_complement_57_T_20 @[block_division.scala 211:25]
    node _two_complement_buffer_57_T_2 = asSInt(two_complement_2[57]) @[block_division.scala 216:53]
    two_complement_buffer_2[57] <= _two_complement_buffer_57_T_2 @[block_division.scala 216:32]
    reg multiplierReg_186 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_186 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_186 <= io.sign_a[186] @[block_division.scala 206:15]
    multiplierReg_186 <= io.man_a[186] @[block_division.scala 207:21]
    node multiplication_186 = mul(multiplierReg_186, io.man_b[186]) @[block_division.scala 208:42]
    node _dotProductRegs_58_T_12 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_58_T_13 = tail(_dotProductRegs_58_T_12, 1) @[block_division.scala 209:60]
    node _dotProductRegs_58_T_14 = gt(multiplication_186, _dotProductRegs_58_T_13) @[block_division.scala 209:47]
    node _dotProductRegs_58_T_15 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_58_T_16 = tail(_dotProductRegs_58_T_15, 1) @[block_division.scala 209:78]
    node _dotProductRegs_58_T_17 = mux(_dotProductRegs_58_T_14, _dotProductRegs_58_T_16, multiplication_186) @[block_division.scala 209:31]
    dotProductRegs_2[58] <= _dotProductRegs_58_T_17 @[block_division.scala 209:25]
    node _signs_58_T_2 = xor(signReg_186, io.sign_b[186]) @[block_division.scala 210:27]
    signs_2[58] <= _signs_58_T_2 @[block_division.scala 210:16]
    node _two_complement_58_T_14 = eq(signs_2[58], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_58_T_15 = cat(UInt<1>("h0"), dotProductRegs_2[58]) @[block_division.scala 213:16]
    node _two_complement_58_T_16 = not(_two_complement_58_T_15) @[block_division.scala 213:10]
    node _two_complement_58_T_17 = add(_two_complement_58_T_16, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_58_T_18 = tail(_two_complement_58_T_17, 1) @[block_division.scala 213:38]
    node _two_complement_58_T_19 = cat(UInt<1>("h0"), dotProductRegs_2[58]) @[block_division.scala 214:14]
    node _two_complement_58_T_20 = mux(_two_complement_58_T_14, _two_complement_58_T_18, _two_complement_58_T_19) @[block_division.scala 211:31]
    two_complement_2[58] <= _two_complement_58_T_20 @[block_division.scala 211:25]
    node _two_complement_buffer_58_T_2 = asSInt(two_complement_2[58]) @[block_division.scala 216:53]
    two_complement_buffer_2[58] <= _two_complement_buffer_58_T_2 @[block_division.scala 216:32]
    reg multiplierReg_187 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_187 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_187 <= io.sign_a[187] @[block_division.scala 206:15]
    multiplierReg_187 <= io.man_a[187] @[block_division.scala 207:21]
    node multiplication_187 = mul(multiplierReg_187, io.man_b[187]) @[block_division.scala 208:42]
    node _dotProductRegs_59_T_12 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_59_T_13 = tail(_dotProductRegs_59_T_12, 1) @[block_division.scala 209:60]
    node _dotProductRegs_59_T_14 = gt(multiplication_187, _dotProductRegs_59_T_13) @[block_division.scala 209:47]
    node _dotProductRegs_59_T_15 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_59_T_16 = tail(_dotProductRegs_59_T_15, 1) @[block_division.scala 209:78]
    node _dotProductRegs_59_T_17 = mux(_dotProductRegs_59_T_14, _dotProductRegs_59_T_16, multiplication_187) @[block_division.scala 209:31]
    dotProductRegs_2[59] <= _dotProductRegs_59_T_17 @[block_division.scala 209:25]
    node _signs_59_T_2 = xor(signReg_187, io.sign_b[187]) @[block_division.scala 210:27]
    signs_2[59] <= _signs_59_T_2 @[block_division.scala 210:16]
    node _two_complement_59_T_14 = eq(signs_2[59], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_59_T_15 = cat(UInt<1>("h0"), dotProductRegs_2[59]) @[block_division.scala 213:16]
    node _two_complement_59_T_16 = not(_two_complement_59_T_15) @[block_division.scala 213:10]
    node _two_complement_59_T_17 = add(_two_complement_59_T_16, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_59_T_18 = tail(_two_complement_59_T_17, 1) @[block_division.scala 213:38]
    node _two_complement_59_T_19 = cat(UInt<1>("h0"), dotProductRegs_2[59]) @[block_division.scala 214:14]
    node _two_complement_59_T_20 = mux(_two_complement_59_T_14, _two_complement_59_T_18, _two_complement_59_T_19) @[block_division.scala 211:31]
    two_complement_2[59] <= _two_complement_59_T_20 @[block_division.scala 211:25]
    node _two_complement_buffer_59_T_2 = asSInt(two_complement_2[59]) @[block_division.scala 216:53]
    two_complement_buffer_2[59] <= _two_complement_buffer_59_T_2 @[block_division.scala 216:32]
    reg multiplierReg_188 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_188 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_188 <= io.sign_a[188] @[block_division.scala 206:15]
    multiplierReg_188 <= io.man_a[188] @[block_division.scala 207:21]
    node multiplication_188 = mul(multiplierReg_188, io.man_b[188]) @[block_division.scala 208:42]
    node _dotProductRegs_60_T_12 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_60_T_13 = tail(_dotProductRegs_60_T_12, 1) @[block_division.scala 209:60]
    node _dotProductRegs_60_T_14 = gt(multiplication_188, _dotProductRegs_60_T_13) @[block_division.scala 209:47]
    node _dotProductRegs_60_T_15 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_60_T_16 = tail(_dotProductRegs_60_T_15, 1) @[block_division.scala 209:78]
    node _dotProductRegs_60_T_17 = mux(_dotProductRegs_60_T_14, _dotProductRegs_60_T_16, multiplication_188) @[block_division.scala 209:31]
    dotProductRegs_2[60] <= _dotProductRegs_60_T_17 @[block_division.scala 209:25]
    node _signs_60_T_2 = xor(signReg_188, io.sign_b[188]) @[block_division.scala 210:27]
    signs_2[60] <= _signs_60_T_2 @[block_division.scala 210:16]
    node _two_complement_60_T_14 = eq(signs_2[60], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_60_T_15 = cat(UInt<1>("h0"), dotProductRegs_2[60]) @[block_division.scala 213:16]
    node _two_complement_60_T_16 = not(_two_complement_60_T_15) @[block_division.scala 213:10]
    node _two_complement_60_T_17 = add(_two_complement_60_T_16, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_60_T_18 = tail(_two_complement_60_T_17, 1) @[block_division.scala 213:38]
    node _two_complement_60_T_19 = cat(UInt<1>("h0"), dotProductRegs_2[60]) @[block_division.scala 214:14]
    node _two_complement_60_T_20 = mux(_two_complement_60_T_14, _two_complement_60_T_18, _two_complement_60_T_19) @[block_division.scala 211:31]
    two_complement_2[60] <= _two_complement_60_T_20 @[block_division.scala 211:25]
    node _two_complement_buffer_60_T_2 = asSInt(two_complement_2[60]) @[block_division.scala 216:53]
    two_complement_buffer_2[60] <= _two_complement_buffer_60_T_2 @[block_division.scala 216:32]
    reg multiplierReg_189 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_189 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_189 <= io.sign_a[189] @[block_division.scala 206:15]
    multiplierReg_189 <= io.man_a[189] @[block_division.scala 207:21]
    node multiplication_189 = mul(multiplierReg_189, io.man_b[189]) @[block_division.scala 208:42]
    node _dotProductRegs_61_T_12 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_61_T_13 = tail(_dotProductRegs_61_T_12, 1) @[block_division.scala 209:60]
    node _dotProductRegs_61_T_14 = gt(multiplication_189, _dotProductRegs_61_T_13) @[block_division.scala 209:47]
    node _dotProductRegs_61_T_15 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_61_T_16 = tail(_dotProductRegs_61_T_15, 1) @[block_division.scala 209:78]
    node _dotProductRegs_61_T_17 = mux(_dotProductRegs_61_T_14, _dotProductRegs_61_T_16, multiplication_189) @[block_division.scala 209:31]
    dotProductRegs_2[61] <= _dotProductRegs_61_T_17 @[block_division.scala 209:25]
    node _signs_61_T_2 = xor(signReg_189, io.sign_b[189]) @[block_division.scala 210:27]
    signs_2[61] <= _signs_61_T_2 @[block_division.scala 210:16]
    node _two_complement_61_T_14 = eq(signs_2[61], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_61_T_15 = cat(UInt<1>("h0"), dotProductRegs_2[61]) @[block_division.scala 213:16]
    node _two_complement_61_T_16 = not(_two_complement_61_T_15) @[block_division.scala 213:10]
    node _two_complement_61_T_17 = add(_two_complement_61_T_16, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_61_T_18 = tail(_two_complement_61_T_17, 1) @[block_division.scala 213:38]
    node _two_complement_61_T_19 = cat(UInt<1>("h0"), dotProductRegs_2[61]) @[block_division.scala 214:14]
    node _two_complement_61_T_20 = mux(_two_complement_61_T_14, _two_complement_61_T_18, _two_complement_61_T_19) @[block_division.scala 211:31]
    two_complement_2[61] <= _two_complement_61_T_20 @[block_division.scala 211:25]
    node _two_complement_buffer_61_T_2 = asSInt(two_complement_2[61]) @[block_division.scala 216:53]
    two_complement_buffer_2[61] <= _two_complement_buffer_61_T_2 @[block_division.scala 216:32]
    reg multiplierReg_190 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_190 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_190 <= io.sign_a[190] @[block_division.scala 206:15]
    multiplierReg_190 <= io.man_a[190] @[block_division.scala 207:21]
    node multiplication_190 = mul(multiplierReg_190, io.man_b[190]) @[block_division.scala 208:42]
    node _dotProductRegs_62_T_12 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_62_T_13 = tail(_dotProductRegs_62_T_12, 1) @[block_division.scala 209:60]
    node _dotProductRegs_62_T_14 = gt(multiplication_190, _dotProductRegs_62_T_13) @[block_division.scala 209:47]
    node _dotProductRegs_62_T_15 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_62_T_16 = tail(_dotProductRegs_62_T_15, 1) @[block_division.scala 209:78]
    node _dotProductRegs_62_T_17 = mux(_dotProductRegs_62_T_14, _dotProductRegs_62_T_16, multiplication_190) @[block_division.scala 209:31]
    dotProductRegs_2[62] <= _dotProductRegs_62_T_17 @[block_division.scala 209:25]
    node _signs_62_T_2 = xor(signReg_190, io.sign_b[190]) @[block_division.scala 210:27]
    signs_2[62] <= _signs_62_T_2 @[block_division.scala 210:16]
    node _two_complement_62_T_14 = eq(signs_2[62], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_62_T_15 = cat(UInt<1>("h0"), dotProductRegs_2[62]) @[block_division.scala 213:16]
    node _two_complement_62_T_16 = not(_two_complement_62_T_15) @[block_division.scala 213:10]
    node _two_complement_62_T_17 = add(_two_complement_62_T_16, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_62_T_18 = tail(_two_complement_62_T_17, 1) @[block_division.scala 213:38]
    node _two_complement_62_T_19 = cat(UInt<1>("h0"), dotProductRegs_2[62]) @[block_division.scala 214:14]
    node _two_complement_62_T_20 = mux(_two_complement_62_T_14, _two_complement_62_T_18, _two_complement_62_T_19) @[block_division.scala 211:31]
    two_complement_2[62] <= _two_complement_62_T_20 @[block_division.scala 211:25]
    node _two_complement_buffer_62_T_2 = asSInt(two_complement_2[62]) @[block_division.scala 216:53]
    two_complement_buffer_2[62] <= _two_complement_buffer_62_T_2 @[block_division.scala 216:32]
    reg multiplierReg_191 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_191 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_191 <= io.sign_a[191] @[block_division.scala 206:15]
    multiplierReg_191 <= io.man_a[191] @[block_division.scala 207:21]
    node multiplication_191 = mul(multiplierReg_191, io.man_b[191]) @[block_division.scala 208:42]
    node _dotProductRegs_63_T_12 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_63_T_13 = tail(_dotProductRegs_63_T_12, 1) @[block_division.scala 209:60]
    node _dotProductRegs_63_T_14 = gt(multiplication_191, _dotProductRegs_63_T_13) @[block_division.scala 209:47]
    node _dotProductRegs_63_T_15 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_63_T_16 = tail(_dotProductRegs_63_T_15, 1) @[block_division.scala 209:78]
    node _dotProductRegs_63_T_17 = mux(_dotProductRegs_63_T_14, _dotProductRegs_63_T_16, multiplication_191) @[block_division.scala 209:31]
    dotProductRegs_2[63] <= _dotProductRegs_63_T_17 @[block_division.scala 209:25]
    node _signs_63_T_2 = xor(signReg_191, io.sign_b[191]) @[block_division.scala 210:27]
    signs_2[63] <= _signs_63_T_2 @[block_division.scala 210:16]
    node _two_complement_63_T_14 = eq(signs_2[63], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_63_T_15 = cat(UInt<1>("h0"), dotProductRegs_2[63]) @[block_division.scala 213:16]
    node _two_complement_63_T_16 = not(_two_complement_63_T_15) @[block_division.scala 213:10]
    node _two_complement_63_T_17 = add(_two_complement_63_T_16, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_63_T_18 = tail(_two_complement_63_T_17, 1) @[block_division.scala 213:38]
    node _two_complement_63_T_19 = cat(UInt<1>("h0"), dotProductRegs_2[63]) @[block_division.scala 214:14]
    node _two_complement_63_T_20 = mux(_two_complement_63_T_14, _two_complement_63_T_18, _two_complement_63_T_19) @[block_division.scala 211:31]
    two_complement_2[63] <= _two_complement_63_T_20 @[block_division.scala 211:25]
    node _two_complement_buffer_63_T_2 = asSInt(two_complement_2[63]) @[block_division.scala 216:53]
    two_complement_buffer_2[63] <= _two_complement_buffer_63_T_2 @[block_division.scala 216:32]
    node _sum_T_124 = add(two_complement_buffer_2[0], two_complement_buffer_2[1]) @[block_division.scala 218:46]
    node _sum_T_125 = add(_sum_T_124, two_complement_buffer_2[2]) @[block_division.scala 218:46]
    node _sum_T_126 = add(_sum_T_125, two_complement_buffer_2[3]) @[block_division.scala 218:46]
    node _sum_T_127 = add(_sum_T_126, two_complement_buffer_2[4]) @[block_division.scala 218:46]
    node _sum_T_128 = add(_sum_T_127, two_complement_buffer_2[5]) @[block_division.scala 218:46]
    node _sum_T_129 = add(_sum_T_128, two_complement_buffer_2[6]) @[block_division.scala 218:46]
    node _sum_T_130 = add(_sum_T_129, two_complement_buffer_2[7]) @[block_division.scala 218:46]
    node _sum_T_131 = add(_sum_T_130, two_complement_buffer_2[8]) @[block_division.scala 218:46]
    node _sum_T_132 = add(_sum_T_131, two_complement_buffer_2[9]) @[block_division.scala 218:46]
    node _sum_T_133 = add(_sum_T_132, two_complement_buffer_2[10]) @[block_division.scala 218:46]
    node _sum_T_134 = add(_sum_T_133, two_complement_buffer_2[11]) @[block_division.scala 218:46]
    node _sum_T_135 = add(_sum_T_134, two_complement_buffer_2[12]) @[block_division.scala 218:46]
    node _sum_T_136 = add(_sum_T_135, two_complement_buffer_2[13]) @[block_division.scala 218:46]
    node _sum_T_137 = add(_sum_T_136, two_complement_buffer_2[14]) @[block_division.scala 218:46]
    node _sum_T_138 = add(_sum_T_137, two_complement_buffer_2[15]) @[block_division.scala 218:46]
    node _sum_T_139 = add(_sum_T_138, two_complement_buffer_2[16]) @[block_division.scala 218:46]
    node _sum_T_140 = add(_sum_T_139, two_complement_buffer_2[17]) @[block_division.scala 218:46]
    node _sum_T_141 = add(_sum_T_140, two_complement_buffer_2[18]) @[block_division.scala 218:46]
    node _sum_T_142 = add(_sum_T_141, two_complement_buffer_2[19]) @[block_division.scala 218:46]
    node _sum_T_143 = add(_sum_T_142, two_complement_buffer_2[20]) @[block_division.scala 218:46]
    node _sum_T_144 = add(_sum_T_143, two_complement_buffer_2[21]) @[block_division.scala 218:46]
    node _sum_T_145 = add(_sum_T_144, two_complement_buffer_2[22]) @[block_division.scala 218:46]
    node _sum_T_146 = add(_sum_T_145, two_complement_buffer_2[23]) @[block_division.scala 218:46]
    node _sum_T_147 = add(_sum_T_146, two_complement_buffer_2[24]) @[block_division.scala 218:46]
    node _sum_T_148 = add(_sum_T_147, two_complement_buffer_2[25]) @[block_division.scala 218:46]
    node _sum_T_149 = add(_sum_T_148, two_complement_buffer_2[26]) @[block_division.scala 218:46]
    node _sum_T_150 = add(_sum_T_149, two_complement_buffer_2[27]) @[block_division.scala 218:46]
    node _sum_T_151 = add(_sum_T_150, two_complement_buffer_2[28]) @[block_division.scala 218:46]
    node _sum_T_152 = add(_sum_T_151, two_complement_buffer_2[29]) @[block_division.scala 218:46]
    node _sum_T_153 = add(_sum_T_152, two_complement_buffer_2[30]) @[block_division.scala 218:46]
    node _sum_T_154 = add(_sum_T_153, two_complement_buffer_2[31]) @[block_division.scala 218:46]
    node _sum_T_155 = add(_sum_T_154, two_complement_buffer_2[32]) @[block_division.scala 218:46]
    node _sum_T_156 = add(_sum_T_155, two_complement_buffer_2[33]) @[block_division.scala 218:46]
    node _sum_T_157 = add(_sum_T_156, two_complement_buffer_2[34]) @[block_division.scala 218:46]
    node _sum_T_158 = add(_sum_T_157, two_complement_buffer_2[35]) @[block_division.scala 218:46]
    node _sum_T_159 = add(_sum_T_158, two_complement_buffer_2[36]) @[block_division.scala 218:46]
    node _sum_T_160 = add(_sum_T_159, two_complement_buffer_2[37]) @[block_division.scala 218:46]
    node _sum_T_161 = add(_sum_T_160, two_complement_buffer_2[38]) @[block_division.scala 218:46]
    node _sum_T_162 = add(_sum_T_161, two_complement_buffer_2[39]) @[block_division.scala 218:46]
    node _sum_T_163 = add(_sum_T_162, two_complement_buffer_2[40]) @[block_division.scala 218:46]
    node _sum_T_164 = add(_sum_T_163, two_complement_buffer_2[41]) @[block_division.scala 218:46]
    node _sum_T_165 = add(_sum_T_164, two_complement_buffer_2[42]) @[block_division.scala 218:46]
    node _sum_T_166 = add(_sum_T_165, two_complement_buffer_2[43]) @[block_division.scala 218:46]
    node _sum_T_167 = add(_sum_T_166, two_complement_buffer_2[44]) @[block_division.scala 218:46]
    node _sum_T_168 = add(_sum_T_167, two_complement_buffer_2[45]) @[block_division.scala 218:46]
    node _sum_T_169 = add(_sum_T_168, two_complement_buffer_2[46]) @[block_division.scala 218:46]
    node _sum_T_170 = add(_sum_T_169, two_complement_buffer_2[47]) @[block_division.scala 218:46]
    node _sum_T_171 = add(_sum_T_170, two_complement_buffer_2[48]) @[block_division.scala 218:46]
    node _sum_T_172 = add(_sum_T_171, two_complement_buffer_2[49]) @[block_division.scala 218:46]
    node _sum_T_173 = add(_sum_T_172, two_complement_buffer_2[50]) @[block_division.scala 218:46]
    node _sum_T_174 = add(_sum_T_173, two_complement_buffer_2[51]) @[block_division.scala 218:46]
    node _sum_T_175 = add(_sum_T_174, two_complement_buffer_2[52]) @[block_division.scala 218:46]
    node _sum_T_176 = add(_sum_T_175, two_complement_buffer_2[53]) @[block_division.scala 218:46]
    node _sum_T_177 = add(_sum_T_176, two_complement_buffer_2[54]) @[block_division.scala 218:46]
    node _sum_T_178 = add(_sum_T_177, two_complement_buffer_2[55]) @[block_division.scala 218:46]
    node _sum_T_179 = add(_sum_T_178, two_complement_buffer_2[56]) @[block_division.scala 218:46]
    node _sum_T_180 = add(_sum_T_179, two_complement_buffer_2[57]) @[block_division.scala 218:46]
    node _sum_T_181 = add(_sum_T_180, two_complement_buffer_2[58]) @[block_division.scala 218:46]
    node _sum_T_182 = add(_sum_T_181, two_complement_buffer_2[59]) @[block_division.scala 218:46]
    node _sum_T_183 = add(_sum_T_182, two_complement_buffer_2[60]) @[block_division.scala 218:46]
    node _sum_T_184 = add(_sum_T_183, two_complement_buffer_2[61]) @[block_division.scala 218:46]
    node _sum_T_185 = add(_sum_T_184, two_complement_buffer_2[62]) @[block_division.scala 218:46]
    node sum_2 = add(_sum_T_185, two_complement_buffer_2[63]) @[block_division.scala 218:46]
    node _acc_2_T = bits(sum_2, 68, 68) @[block_division.scala 219:22]
    node _acc_2_T_1 = eq(_acc_2_T, UInt<1>("h1")) @[block_division.scala 219:44]
    node _acc_2_T_2 = bits(sum_2, 67, 0) @[block_division.scala 219:61]
    node _acc_2_T_3 = not(_acc_2_T_2) @[block_division.scala 219:57]
    node _acc_2_T_4 = add(_acc_2_T_3, UInt<1>("h1")) @[block_division.scala 219:86]
    node _acc_2_T_5 = tail(_acc_2_T_4, 1) @[block_division.scala 219:86]
    node _acc_2_T_6 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 219:106]
    node _acc_2_T_7 = tail(_acc_2_T_6, 1) @[block_division.scala 219:106]
    node _acc_2_T_8 = gt(_acc_2_T_5, _acc_2_T_7) @[block_division.scala 219:93]
    node _acc_2_T_9 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 219:127]
    node _acc_2_T_10 = tail(_acc_2_T_9, 1) @[block_division.scala 219:127]
    node _acc_2_T_11 = not(_acc_2_T_10) @[block_division.scala 219:114]
    node _acc_2_T_12 = add(_acc_2_T_11, UInt<1>("h1")) @[block_division.scala 219:135]
    node _acc_2_T_13 = tail(_acc_2_T_12, 1) @[block_division.scala 219:135]
    node _acc_2_T_14 = bits(sum_2, 68, 0) @[block_division.scala 219:145]
    node _acc_2_T_15 = mux(_acc_2_T_8, _acc_2_T_13, _acc_2_T_14) @[block_division.scala 219:55]
    node _acc_2_T_16 = bits(sum_2, 67, 0) @[block_division.scala 220:10]
    node _acc_2_T_17 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 220:49]
    node _acc_2_T_18 = tail(_acc_2_T_17, 1) @[block_division.scala 220:49]
    node _acc_2_T_19 = gt(_acc_2_T_16, _acc_2_T_18) @[block_division.scala 220:36]
    node _acc_2_T_20 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 220:67]
    node _acc_2_T_21 = tail(_acc_2_T_20, 1) @[block_division.scala 220:67]
    node _acc_2_T_22 = bits(sum_2, 68, 0) @[block_division.scala 220:77]
    node _acc_2_T_23 = mux(_acc_2_T_19, _acc_2_T_21, _acc_2_T_22) @[block_division.scala 220:6]
    node _acc_2_T_24 = mux(_acc_2_T_1, _acc_2_T_15, _acc_2_T_23) @[block_division.scala 219:18]
    acc_2 <= _acc_2_T_24 @[block_division.scala 219:12]
    node _exp_output_3_T = add(io.exp_a[3], io.exp_b[3]) @[block_division.scala 198:34]
    exp_output_3 <= _exp_output_3_T @[block_division.scala 198:19]
    reg dotProductRegs_3 : UInt<5>[64], clock with :
      reset => (UInt<1>("h0"), dotProductRegs_3) @[block_division.scala 199:29]
    reg signs_3 : UInt<1>[64], clock with :
      reset => (UInt<1>("h0"), signs_3) @[block_division.scala 200:20]
    reg two_complement_3 : UInt<6>[64], clock with :
      reset => (UInt<1>("h0"), two_complement_3) @[block_division.scala 201:29]
    reg two_complement_buffer_3 : SInt<6>[64], clock with :
      reset => (UInt<1>("h0"), two_complement_buffer_3) @[block_division.scala 202:36]
    reg multiplierReg_192 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_192 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_192 <= io.sign_a[192] @[block_division.scala 206:15]
    multiplierReg_192 <= io.man_a[192] @[block_division.scala 207:21]
    node multiplication_192 = mul(multiplierReg_192, io.man_b[192]) @[block_division.scala 208:42]
    node _dotProductRegs_0_T_18 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_0_T_19 = tail(_dotProductRegs_0_T_18, 1) @[block_division.scala 209:60]
    node _dotProductRegs_0_T_20 = gt(multiplication_192, _dotProductRegs_0_T_19) @[block_division.scala 209:47]
    node _dotProductRegs_0_T_21 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_0_T_22 = tail(_dotProductRegs_0_T_21, 1) @[block_division.scala 209:78]
    node _dotProductRegs_0_T_23 = mux(_dotProductRegs_0_T_20, _dotProductRegs_0_T_22, multiplication_192) @[block_division.scala 209:31]
    dotProductRegs_3[0] <= _dotProductRegs_0_T_23 @[block_division.scala 209:25]
    node _signs_0_T_3 = xor(signReg_192, io.sign_b[192]) @[block_division.scala 210:27]
    signs_3[0] <= _signs_0_T_3 @[block_division.scala 210:16]
    node _two_complement_0_T_21 = eq(signs_3[0], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_0_T_22 = cat(UInt<1>("h0"), dotProductRegs_3[0]) @[block_division.scala 213:16]
    node _two_complement_0_T_23 = not(_two_complement_0_T_22) @[block_division.scala 213:10]
    node _two_complement_0_T_24 = add(_two_complement_0_T_23, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_0_T_25 = tail(_two_complement_0_T_24, 1) @[block_division.scala 213:38]
    node _two_complement_0_T_26 = cat(UInt<1>("h0"), dotProductRegs_3[0]) @[block_division.scala 214:14]
    node _two_complement_0_T_27 = mux(_two_complement_0_T_21, _two_complement_0_T_25, _two_complement_0_T_26) @[block_division.scala 211:31]
    two_complement_3[0] <= _two_complement_0_T_27 @[block_division.scala 211:25]
    node _two_complement_buffer_0_T_3 = asSInt(two_complement_3[0]) @[block_division.scala 216:53]
    two_complement_buffer_3[0] <= _two_complement_buffer_0_T_3 @[block_division.scala 216:32]
    reg multiplierReg_193 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_193 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_193 <= io.sign_a[193] @[block_division.scala 206:15]
    multiplierReg_193 <= io.man_a[193] @[block_division.scala 207:21]
    node multiplication_193 = mul(multiplierReg_193, io.man_b[193]) @[block_division.scala 208:42]
    node _dotProductRegs_1_T_18 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_1_T_19 = tail(_dotProductRegs_1_T_18, 1) @[block_division.scala 209:60]
    node _dotProductRegs_1_T_20 = gt(multiplication_193, _dotProductRegs_1_T_19) @[block_division.scala 209:47]
    node _dotProductRegs_1_T_21 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_1_T_22 = tail(_dotProductRegs_1_T_21, 1) @[block_division.scala 209:78]
    node _dotProductRegs_1_T_23 = mux(_dotProductRegs_1_T_20, _dotProductRegs_1_T_22, multiplication_193) @[block_division.scala 209:31]
    dotProductRegs_3[1] <= _dotProductRegs_1_T_23 @[block_division.scala 209:25]
    node _signs_1_T_3 = xor(signReg_193, io.sign_b[193]) @[block_division.scala 210:27]
    signs_3[1] <= _signs_1_T_3 @[block_division.scala 210:16]
    node _two_complement_1_T_21 = eq(signs_3[1], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_1_T_22 = cat(UInt<1>("h0"), dotProductRegs_3[1]) @[block_division.scala 213:16]
    node _two_complement_1_T_23 = not(_two_complement_1_T_22) @[block_division.scala 213:10]
    node _two_complement_1_T_24 = add(_two_complement_1_T_23, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_1_T_25 = tail(_two_complement_1_T_24, 1) @[block_division.scala 213:38]
    node _two_complement_1_T_26 = cat(UInt<1>("h0"), dotProductRegs_3[1]) @[block_division.scala 214:14]
    node _two_complement_1_T_27 = mux(_two_complement_1_T_21, _two_complement_1_T_25, _two_complement_1_T_26) @[block_division.scala 211:31]
    two_complement_3[1] <= _two_complement_1_T_27 @[block_division.scala 211:25]
    node _two_complement_buffer_1_T_3 = asSInt(two_complement_3[1]) @[block_division.scala 216:53]
    two_complement_buffer_3[1] <= _two_complement_buffer_1_T_3 @[block_division.scala 216:32]
    reg multiplierReg_194 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_194 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_194 <= io.sign_a[194] @[block_division.scala 206:15]
    multiplierReg_194 <= io.man_a[194] @[block_division.scala 207:21]
    node multiplication_194 = mul(multiplierReg_194, io.man_b[194]) @[block_division.scala 208:42]
    node _dotProductRegs_2_T_18 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_2_T_19 = tail(_dotProductRegs_2_T_18, 1) @[block_division.scala 209:60]
    node _dotProductRegs_2_T_20 = gt(multiplication_194, _dotProductRegs_2_T_19) @[block_division.scala 209:47]
    node _dotProductRegs_2_T_21 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_2_T_22 = tail(_dotProductRegs_2_T_21, 1) @[block_division.scala 209:78]
    node _dotProductRegs_2_T_23 = mux(_dotProductRegs_2_T_20, _dotProductRegs_2_T_22, multiplication_194) @[block_division.scala 209:31]
    dotProductRegs_3[2] <= _dotProductRegs_2_T_23 @[block_division.scala 209:25]
    node _signs_2_T_3 = xor(signReg_194, io.sign_b[194]) @[block_division.scala 210:27]
    signs_3[2] <= _signs_2_T_3 @[block_division.scala 210:16]
    node _two_complement_2_T_21 = eq(signs_3[2], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_2_T_22 = cat(UInt<1>("h0"), dotProductRegs_3[2]) @[block_division.scala 213:16]
    node _two_complement_2_T_23 = not(_two_complement_2_T_22) @[block_division.scala 213:10]
    node _two_complement_2_T_24 = add(_two_complement_2_T_23, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_2_T_25 = tail(_two_complement_2_T_24, 1) @[block_division.scala 213:38]
    node _two_complement_2_T_26 = cat(UInt<1>("h0"), dotProductRegs_3[2]) @[block_division.scala 214:14]
    node _two_complement_2_T_27 = mux(_two_complement_2_T_21, _two_complement_2_T_25, _two_complement_2_T_26) @[block_division.scala 211:31]
    two_complement_3[2] <= _two_complement_2_T_27 @[block_division.scala 211:25]
    node _two_complement_buffer_2_T_3 = asSInt(two_complement_3[2]) @[block_division.scala 216:53]
    two_complement_buffer_3[2] <= _two_complement_buffer_2_T_3 @[block_division.scala 216:32]
    reg multiplierReg_195 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_195 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_195 <= io.sign_a[195] @[block_division.scala 206:15]
    multiplierReg_195 <= io.man_a[195] @[block_division.scala 207:21]
    node multiplication_195 = mul(multiplierReg_195, io.man_b[195]) @[block_division.scala 208:42]
    node _dotProductRegs_3_T_18 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_3_T_19 = tail(_dotProductRegs_3_T_18, 1) @[block_division.scala 209:60]
    node _dotProductRegs_3_T_20 = gt(multiplication_195, _dotProductRegs_3_T_19) @[block_division.scala 209:47]
    node _dotProductRegs_3_T_21 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_3_T_22 = tail(_dotProductRegs_3_T_21, 1) @[block_division.scala 209:78]
    node _dotProductRegs_3_T_23 = mux(_dotProductRegs_3_T_20, _dotProductRegs_3_T_22, multiplication_195) @[block_division.scala 209:31]
    dotProductRegs_3[3] <= _dotProductRegs_3_T_23 @[block_division.scala 209:25]
    node _signs_3_T_3 = xor(signReg_195, io.sign_b[195]) @[block_division.scala 210:27]
    signs_3[3] <= _signs_3_T_3 @[block_division.scala 210:16]
    node _two_complement_3_T_21 = eq(signs_3[3], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_3_T_22 = cat(UInt<1>("h0"), dotProductRegs_3[3]) @[block_division.scala 213:16]
    node _two_complement_3_T_23 = not(_two_complement_3_T_22) @[block_division.scala 213:10]
    node _two_complement_3_T_24 = add(_two_complement_3_T_23, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_3_T_25 = tail(_two_complement_3_T_24, 1) @[block_division.scala 213:38]
    node _two_complement_3_T_26 = cat(UInt<1>("h0"), dotProductRegs_3[3]) @[block_division.scala 214:14]
    node _two_complement_3_T_27 = mux(_two_complement_3_T_21, _two_complement_3_T_25, _two_complement_3_T_26) @[block_division.scala 211:31]
    two_complement_3[3] <= _two_complement_3_T_27 @[block_division.scala 211:25]
    node _two_complement_buffer_3_T_3 = asSInt(two_complement_3[3]) @[block_division.scala 216:53]
    two_complement_buffer_3[3] <= _two_complement_buffer_3_T_3 @[block_division.scala 216:32]
    reg multiplierReg_196 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_196 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_196 <= io.sign_a[196] @[block_division.scala 206:15]
    multiplierReg_196 <= io.man_a[196] @[block_division.scala 207:21]
    node multiplication_196 = mul(multiplierReg_196, io.man_b[196]) @[block_division.scala 208:42]
    node _dotProductRegs_4_T_18 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_4_T_19 = tail(_dotProductRegs_4_T_18, 1) @[block_division.scala 209:60]
    node _dotProductRegs_4_T_20 = gt(multiplication_196, _dotProductRegs_4_T_19) @[block_division.scala 209:47]
    node _dotProductRegs_4_T_21 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_4_T_22 = tail(_dotProductRegs_4_T_21, 1) @[block_division.scala 209:78]
    node _dotProductRegs_4_T_23 = mux(_dotProductRegs_4_T_20, _dotProductRegs_4_T_22, multiplication_196) @[block_division.scala 209:31]
    dotProductRegs_3[4] <= _dotProductRegs_4_T_23 @[block_division.scala 209:25]
    node _signs_4_T_3 = xor(signReg_196, io.sign_b[196]) @[block_division.scala 210:27]
    signs_3[4] <= _signs_4_T_3 @[block_division.scala 210:16]
    node _two_complement_4_T_21 = eq(signs_3[4], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_4_T_22 = cat(UInt<1>("h0"), dotProductRegs_3[4]) @[block_division.scala 213:16]
    node _two_complement_4_T_23 = not(_two_complement_4_T_22) @[block_division.scala 213:10]
    node _two_complement_4_T_24 = add(_two_complement_4_T_23, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_4_T_25 = tail(_two_complement_4_T_24, 1) @[block_division.scala 213:38]
    node _two_complement_4_T_26 = cat(UInt<1>("h0"), dotProductRegs_3[4]) @[block_division.scala 214:14]
    node _two_complement_4_T_27 = mux(_two_complement_4_T_21, _two_complement_4_T_25, _two_complement_4_T_26) @[block_division.scala 211:31]
    two_complement_3[4] <= _two_complement_4_T_27 @[block_division.scala 211:25]
    node _two_complement_buffer_4_T_3 = asSInt(two_complement_3[4]) @[block_division.scala 216:53]
    two_complement_buffer_3[4] <= _two_complement_buffer_4_T_3 @[block_division.scala 216:32]
    reg multiplierReg_197 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_197 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_197 <= io.sign_a[197] @[block_division.scala 206:15]
    multiplierReg_197 <= io.man_a[197] @[block_division.scala 207:21]
    node multiplication_197 = mul(multiplierReg_197, io.man_b[197]) @[block_division.scala 208:42]
    node _dotProductRegs_5_T_18 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_5_T_19 = tail(_dotProductRegs_5_T_18, 1) @[block_division.scala 209:60]
    node _dotProductRegs_5_T_20 = gt(multiplication_197, _dotProductRegs_5_T_19) @[block_division.scala 209:47]
    node _dotProductRegs_5_T_21 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_5_T_22 = tail(_dotProductRegs_5_T_21, 1) @[block_division.scala 209:78]
    node _dotProductRegs_5_T_23 = mux(_dotProductRegs_5_T_20, _dotProductRegs_5_T_22, multiplication_197) @[block_division.scala 209:31]
    dotProductRegs_3[5] <= _dotProductRegs_5_T_23 @[block_division.scala 209:25]
    node _signs_5_T_3 = xor(signReg_197, io.sign_b[197]) @[block_division.scala 210:27]
    signs_3[5] <= _signs_5_T_3 @[block_division.scala 210:16]
    node _two_complement_5_T_21 = eq(signs_3[5], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_5_T_22 = cat(UInt<1>("h0"), dotProductRegs_3[5]) @[block_division.scala 213:16]
    node _two_complement_5_T_23 = not(_two_complement_5_T_22) @[block_division.scala 213:10]
    node _two_complement_5_T_24 = add(_two_complement_5_T_23, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_5_T_25 = tail(_two_complement_5_T_24, 1) @[block_division.scala 213:38]
    node _two_complement_5_T_26 = cat(UInt<1>("h0"), dotProductRegs_3[5]) @[block_division.scala 214:14]
    node _two_complement_5_T_27 = mux(_two_complement_5_T_21, _two_complement_5_T_25, _two_complement_5_T_26) @[block_division.scala 211:31]
    two_complement_3[5] <= _two_complement_5_T_27 @[block_division.scala 211:25]
    node _two_complement_buffer_5_T_3 = asSInt(two_complement_3[5]) @[block_division.scala 216:53]
    two_complement_buffer_3[5] <= _two_complement_buffer_5_T_3 @[block_division.scala 216:32]
    reg multiplierReg_198 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_198 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_198 <= io.sign_a[198] @[block_division.scala 206:15]
    multiplierReg_198 <= io.man_a[198] @[block_division.scala 207:21]
    node multiplication_198 = mul(multiplierReg_198, io.man_b[198]) @[block_division.scala 208:42]
    node _dotProductRegs_6_T_18 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_6_T_19 = tail(_dotProductRegs_6_T_18, 1) @[block_division.scala 209:60]
    node _dotProductRegs_6_T_20 = gt(multiplication_198, _dotProductRegs_6_T_19) @[block_division.scala 209:47]
    node _dotProductRegs_6_T_21 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_6_T_22 = tail(_dotProductRegs_6_T_21, 1) @[block_division.scala 209:78]
    node _dotProductRegs_6_T_23 = mux(_dotProductRegs_6_T_20, _dotProductRegs_6_T_22, multiplication_198) @[block_division.scala 209:31]
    dotProductRegs_3[6] <= _dotProductRegs_6_T_23 @[block_division.scala 209:25]
    node _signs_6_T_3 = xor(signReg_198, io.sign_b[198]) @[block_division.scala 210:27]
    signs_3[6] <= _signs_6_T_3 @[block_division.scala 210:16]
    node _two_complement_6_T_21 = eq(signs_3[6], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_6_T_22 = cat(UInt<1>("h0"), dotProductRegs_3[6]) @[block_division.scala 213:16]
    node _two_complement_6_T_23 = not(_two_complement_6_T_22) @[block_division.scala 213:10]
    node _two_complement_6_T_24 = add(_two_complement_6_T_23, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_6_T_25 = tail(_two_complement_6_T_24, 1) @[block_division.scala 213:38]
    node _two_complement_6_T_26 = cat(UInt<1>("h0"), dotProductRegs_3[6]) @[block_division.scala 214:14]
    node _two_complement_6_T_27 = mux(_two_complement_6_T_21, _two_complement_6_T_25, _two_complement_6_T_26) @[block_division.scala 211:31]
    two_complement_3[6] <= _two_complement_6_T_27 @[block_division.scala 211:25]
    node _two_complement_buffer_6_T_3 = asSInt(two_complement_3[6]) @[block_division.scala 216:53]
    two_complement_buffer_3[6] <= _two_complement_buffer_6_T_3 @[block_division.scala 216:32]
    reg multiplierReg_199 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_199 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_199 <= io.sign_a[199] @[block_division.scala 206:15]
    multiplierReg_199 <= io.man_a[199] @[block_division.scala 207:21]
    node multiplication_199 = mul(multiplierReg_199, io.man_b[199]) @[block_division.scala 208:42]
    node _dotProductRegs_7_T_18 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_7_T_19 = tail(_dotProductRegs_7_T_18, 1) @[block_division.scala 209:60]
    node _dotProductRegs_7_T_20 = gt(multiplication_199, _dotProductRegs_7_T_19) @[block_division.scala 209:47]
    node _dotProductRegs_7_T_21 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_7_T_22 = tail(_dotProductRegs_7_T_21, 1) @[block_division.scala 209:78]
    node _dotProductRegs_7_T_23 = mux(_dotProductRegs_7_T_20, _dotProductRegs_7_T_22, multiplication_199) @[block_division.scala 209:31]
    dotProductRegs_3[7] <= _dotProductRegs_7_T_23 @[block_division.scala 209:25]
    node _signs_7_T_3 = xor(signReg_199, io.sign_b[199]) @[block_division.scala 210:27]
    signs_3[7] <= _signs_7_T_3 @[block_division.scala 210:16]
    node _two_complement_7_T_21 = eq(signs_3[7], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_7_T_22 = cat(UInt<1>("h0"), dotProductRegs_3[7]) @[block_division.scala 213:16]
    node _two_complement_7_T_23 = not(_two_complement_7_T_22) @[block_division.scala 213:10]
    node _two_complement_7_T_24 = add(_two_complement_7_T_23, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_7_T_25 = tail(_two_complement_7_T_24, 1) @[block_division.scala 213:38]
    node _two_complement_7_T_26 = cat(UInt<1>("h0"), dotProductRegs_3[7]) @[block_division.scala 214:14]
    node _two_complement_7_T_27 = mux(_two_complement_7_T_21, _two_complement_7_T_25, _two_complement_7_T_26) @[block_division.scala 211:31]
    two_complement_3[7] <= _two_complement_7_T_27 @[block_division.scala 211:25]
    node _two_complement_buffer_7_T_3 = asSInt(two_complement_3[7]) @[block_division.scala 216:53]
    two_complement_buffer_3[7] <= _two_complement_buffer_7_T_3 @[block_division.scala 216:32]
    reg multiplierReg_200 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_200 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_200 <= io.sign_a[200] @[block_division.scala 206:15]
    multiplierReg_200 <= io.man_a[200] @[block_division.scala 207:21]
    node multiplication_200 = mul(multiplierReg_200, io.man_b[200]) @[block_division.scala 208:42]
    node _dotProductRegs_8_T_18 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_8_T_19 = tail(_dotProductRegs_8_T_18, 1) @[block_division.scala 209:60]
    node _dotProductRegs_8_T_20 = gt(multiplication_200, _dotProductRegs_8_T_19) @[block_division.scala 209:47]
    node _dotProductRegs_8_T_21 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_8_T_22 = tail(_dotProductRegs_8_T_21, 1) @[block_division.scala 209:78]
    node _dotProductRegs_8_T_23 = mux(_dotProductRegs_8_T_20, _dotProductRegs_8_T_22, multiplication_200) @[block_division.scala 209:31]
    dotProductRegs_3[8] <= _dotProductRegs_8_T_23 @[block_division.scala 209:25]
    node _signs_8_T_3 = xor(signReg_200, io.sign_b[200]) @[block_division.scala 210:27]
    signs_3[8] <= _signs_8_T_3 @[block_division.scala 210:16]
    node _two_complement_8_T_21 = eq(signs_3[8], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_8_T_22 = cat(UInt<1>("h0"), dotProductRegs_3[8]) @[block_division.scala 213:16]
    node _two_complement_8_T_23 = not(_two_complement_8_T_22) @[block_division.scala 213:10]
    node _two_complement_8_T_24 = add(_two_complement_8_T_23, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_8_T_25 = tail(_two_complement_8_T_24, 1) @[block_division.scala 213:38]
    node _two_complement_8_T_26 = cat(UInt<1>("h0"), dotProductRegs_3[8]) @[block_division.scala 214:14]
    node _two_complement_8_T_27 = mux(_two_complement_8_T_21, _two_complement_8_T_25, _two_complement_8_T_26) @[block_division.scala 211:31]
    two_complement_3[8] <= _two_complement_8_T_27 @[block_division.scala 211:25]
    node _two_complement_buffer_8_T_3 = asSInt(two_complement_3[8]) @[block_division.scala 216:53]
    two_complement_buffer_3[8] <= _two_complement_buffer_8_T_3 @[block_division.scala 216:32]
    reg multiplierReg_201 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_201 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_201 <= io.sign_a[201] @[block_division.scala 206:15]
    multiplierReg_201 <= io.man_a[201] @[block_division.scala 207:21]
    node multiplication_201 = mul(multiplierReg_201, io.man_b[201]) @[block_division.scala 208:42]
    node _dotProductRegs_9_T_18 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_9_T_19 = tail(_dotProductRegs_9_T_18, 1) @[block_division.scala 209:60]
    node _dotProductRegs_9_T_20 = gt(multiplication_201, _dotProductRegs_9_T_19) @[block_division.scala 209:47]
    node _dotProductRegs_9_T_21 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_9_T_22 = tail(_dotProductRegs_9_T_21, 1) @[block_division.scala 209:78]
    node _dotProductRegs_9_T_23 = mux(_dotProductRegs_9_T_20, _dotProductRegs_9_T_22, multiplication_201) @[block_division.scala 209:31]
    dotProductRegs_3[9] <= _dotProductRegs_9_T_23 @[block_division.scala 209:25]
    node _signs_9_T_3 = xor(signReg_201, io.sign_b[201]) @[block_division.scala 210:27]
    signs_3[9] <= _signs_9_T_3 @[block_division.scala 210:16]
    node _two_complement_9_T_21 = eq(signs_3[9], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_9_T_22 = cat(UInt<1>("h0"), dotProductRegs_3[9]) @[block_division.scala 213:16]
    node _two_complement_9_T_23 = not(_two_complement_9_T_22) @[block_division.scala 213:10]
    node _two_complement_9_T_24 = add(_two_complement_9_T_23, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_9_T_25 = tail(_two_complement_9_T_24, 1) @[block_division.scala 213:38]
    node _two_complement_9_T_26 = cat(UInt<1>("h0"), dotProductRegs_3[9]) @[block_division.scala 214:14]
    node _two_complement_9_T_27 = mux(_two_complement_9_T_21, _two_complement_9_T_25, _two_complement_9_T_26) @[block_division.scala 211:31]
    two_complement_3[9] <= _two_complement_9_T_27 @[block_division.scala 211:25]
    node _two_complement_buffer_9_T_3 = asSInt(two_complement_3[9]) @[block_division.scala 216:53]
    two_complement_buffer_3[9] <= _two_complement_buffer_9_T_3 @[block_division.scala 216:32]
    reg multiplierReg_202 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_202 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_202 <= io.sign_a[202] @[block_division.scala 206:15]
    multiplierReg_202 <= io.man_a[202] @[block_division.scala 207:21]
    node multiplication_202 = mul(multiplierReg_202, io.man_b[202]) @[block_division.scala 208:42]
    node _dotProductRegs_10_T_18 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_10_T_19 = tail(_dotProductRegs_10_T_18, 1) @[block_division.scala 209:60]
    node _dotProductRegs_10_T_20 = gt(multiplication_202, _dotProductRegs_10_T_19) @[block_division.scala 209:47]
    node _dotProductRegs_10_T_21 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_10_T_22 = tail(_dotProductRegs_10_T_21, 1) @[block_division.scala 209:78]
    node _dotProductRegs_10_T_23 = mux(_dotProductRegs_10_T_20, _dotProductRegs_10_T_22, multiplication_202) @[block_division.scala 209:31]
    dotProductRegs_3[10] <= _dotProductRegs_10_T_23 @[block_division.scala 209:25]
    node _signs_10_T_3 = xor(signReg_202, io.sign_b[202]) @[block_division.scala 210:27]
    signs_3[10] <= _signs_10_T_3 @[block_division.scala 210:16]
    node _two_complement_10_T_21 = eq(signs_3[10], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_10_T_22 = cat(UInt<1>("h0"), dotProductRegs_3[10]) @[block_division.scala 213:16]
    node _two_complement_10_T_23 = not(_two_complement_10_T_22) @[block_division.scala 213:10]
    node _two_complement_10_T_24 = add(_two_complement_10_T_23, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_10_T_25 = tail(_two_complement_10_T_24, 1) @[block_division.scala 213:38]
    node _two_complement_10_T_26 = cat(UInt<1>("h0"), dotProductRegs_3[10]) @[block_division.scala 214:14]
    node _two_complement_10_T_27 = mux(_two_complement_10_T_21, _two_complement_10_T_25, _two_complement_10_T_26) @[block_division.scala 211:31]
    two_complement_3[10] <= _two_complement_10_T_27 @[block_division.scala 211:25]
    node _two_complement_buffer_10_T_3 = asSInt(two_complement_3[10]) @[block_division.scala 216:53]
    two_complement_buffer_3[10] <= _two_complement_buffer_10_T_3 @[block_division.scala 216:32]
    reg multiplierReg_203 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_203 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_203 <= io.sign_a[203] @[block_division.scala 206:15]
    multiplierReg_203 <= io.man_a[203] @[block_division.scala 207:21]
    node multiplication_203 = mul(multiplierReg_203, io.man_b[203]) @[block_division.scala 208:42]
    node _dotProductRegs_11_T_18 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_11_T_19 = tail(_dotProductRegs_11_T_18, 1) @[block_division.scala 209:60]
    node _dotProductRegs_11_T_20 = gt(multiplication_203, _dotProductRegs_11_T_19) @[block_division.scala 209:47]
    node _dotProductRegs_11_T_21 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_11_T_22 = tail(_dotProductRegs_11_T_21, 1) @[block_division.scala 209:78]
    node _dotProductRegs_11_T_23 = mux(_dotProductRegs_11_T_20, _dotProductRegs_11_T_22, multiplication_203) @[block_division.scala 209:31]
    dotProductRegs_3[11] <= _dotProductRegs_11_T_23 @[block_division.scala 209:25]
    node _signs_11_T_3 = xor(signReg_203, io.sign_b[203]) @[block_division.scala 210:27]
    signs_3[11] <= _signs_11_T_3 @[block_division.scala 210:16]
    node _two_complement_11_T_21 = eq(signs_3[11], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_11_T_22 = cat(UInt<1>("h0"), dotProductRegs_3[11]) @[block_division.scala 213:16]
    node _two_complement_11_T_23 = not(_two_complement_11_T_22) @[block_division.scala 213:10]
    node _two_complement_11_T_24 = add(_two_complement_11_T_23, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_11_T_25 = tail(_two_complement_11_T_24, 1) @[block_division.scala 213:38]
    node _two_complement_11_T_26 = cat(UInt<1>("h0"), dotProductRegs_3[11]) @[block_division.scala 214:14]
    node _two_complement_11_T_27 = mux(_two_complement_11_T_21, _two_complement_11_T_25, _two_complement_11_T_26) @[block_division.scala 211:31]
    two_complement_3[11] <= _two_complement_11_T_27 @[block_division.scala 211:25]
    node _two_complement_buffer_11_T_3 = asSInt(two_complement_3[11]) @[block_division.scala 216:53]
    two_complement_buffer_3[11] <= _two_complement_buffer_11_T_3 @[block_division.scala 216:32]
    reg multiplierReg_204 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_204 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_204 <= io.sign_a[204] @[block_division.scala 206:15]
    multiplierReg_204 <= io.man_a[204] @[block_division.scala 207:21]
    node multiplication_204 = mul(multiplierReg_204, io.man_b[204]) @[block_division.scala 208:42]
    node _dotProductRegs_12_T_18 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_12_T_19 = tail(_dotProductRegs_12_T_18, 1) @[block_division.scala 209:60]
    node _dotProductRegs_12_T_20 = gt(multiplication_204, _dotProductRegs_12_T_19) @[block_division.scala 209:47]
    node _dotProductRegs_12_T_21 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_12_T_22 = tail(_dotProductRegs_12_T_21, 1) @[block_division.scala 209:78]
    node _dotProductRegs_12_T_23 = mux(_dotProductRegs_12_T_20, _dotProductRegs_12_T_22, multiplication_204) @[block_division.scala 209:31]
    dotProductRegs_3[12] <= _dotProductRegs_12_T_23 @[block_division.scala 209:25]
    node _signs_12_T_3 = xor(signReg_204, io.sign_b[204]) @[block_division.scala 210:27]
    signs_3[12] <= _signs_12_T_3 @[block_division.scala 210:16]
    node _two_complement_12_T_21 = eq(signs_3[12], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_12_T_22 = cat(UInt<1>("h0"), dotProductRegs_3[12]) @[block_division.scala 213:16]
    node _two_complement_12_T_23 = not(_two_complement_12_T_22) @[block_division.scala 213:10]
    node _two_complement_12_T_24 = add(_two_complement_12_T_23, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_12_T_25 = tail(_two_complement_12_T_24, 1) @[block_division.scala 213:38]
    node _two_complement_12_T_26 = cat(UInt<1>("h0"), dotProductRegs_3[12]) @[block_division.scala 214:14]
    node _two_complement_12_T_27 = mux(_two_complement_12_T_21, _two_complement_12_T_25, _two_complement_12_T_26) @[block_division.scala 211:31]
    two_complement_3[12] <= _two_complement_12_T_27 @[block_division.scala 211:25]
    node _two_complement_buffer_12_T_3 = asSInt(two_complement_3[12]) @[block_division.scala 216:53]
    two_complement_buffer_3[12] <= _two_complement_buffer_12_T_3 @[block_division.scala 216:32]
    reg multiplierReg_205 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_205 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_205 <= io.sign_a[205] @[block_division.scala 206:15]
    multiplierReg_205 <= io.man_a[205] @[block_division.scala 207:21]
    node multiplication_205 = mul(multiplierReg_205, io.man_b[205]) @[block_division.scala 208:42]
    node _dotProductRegs_13_T_18 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_13_T_19 = tail(_dotProductRegs_13_T_18, 1) @[block_division.scala 209:60]
    node _dotProductRegs_13_T_20 = gt(multiplication_205, _dotProductRegs_13_T_19) @[block_division.scala 209:47]
    node _dotProductRegs_13_T_21 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_13_T_22 = tail(_dotProductRegs_13_T_21, 1) @[block_division.scala 209:78]
    node _dotProductRegs_13_T_23 = mux(_dotProductRegs_13_T_20, _dotProductRegs_13_T_22, multiplication_205) @[block_division.scala 209:31]
    dotProductRegs_3[13] <= _dotProductRegs_13_T_23 @[block_division.scala 209:25]
    node _signs_13_T_3 = xor(signReg_205, io.sign_b[205]) @[block_division.scala 210:27]
    signs_3[13] <= _signs_13_T_3 @[block_division.scala 210:16]
    node _two_complement_13_T_21 = eq(signs_3[13], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_13_T_22 = cat(UInt<1>("h0"), dotProductRegs_3[13]) @[block_division.scala 213:16]
    node _two_complement_13_T_23 = not(_two_complement_13_T_22) @[block_division.scala 213:10]
    node _two_complement_13_T_24 = add(_two_complement_13_T_23, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_13_T_25 = tail(_two_complement_13_T_24, 1) @[block_division.scala 213:38]
    node _two_complement_13_T_26 = cat(UInt<1>("h0"), dotProductRegs_3[13]) @[block_division.scala 214:14]
    node _two_complement_13_T_27 = mux(_two_complement_13_T_21, _two_complement_13_T_25, _two_complement_13_T_26) @[block_division.scala 211:31]
    two_complement_3[13] <= _two_complement_13_T_27 @[block_division.scala 211:25]
    node _two_complement_buffer_13_T_3 = asSInt(two_complement_3[13]) @[block_division.scala 216:53]
    two_complement_buffer_3[13] <= _two_complement_buffer_13_T_3 @[block_division.scala 216:32]
    reg multiplierReg_206 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_206 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_206 <= io.sign_a[206] @[block_division.scala 206:15]
    multiplierReg_206 <= io.man_a[206] @[block_division.scala 207:21]
    node multiplication_206 = mul(multiplierReg_206, io.man_b[206]) @[block_division.scala 208:42]
    node _dotProductRegs_14_T_18 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_14_T_19 = tail(_dotProductRegs_14_T_18, 1) @[block_division.scala 209:60]
    node _dotProductRegs_14_T_20 = gt(multiplication_206, _dotProductRegs_14_T_19) @[block_division.scala 209:47]
    node _dotProductRegs_14_T_21 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_14_T_22 = tail(_dotProductRegs_14_T_21, 1) @[block_division.scala 209:78]
    node _dotProductRegs_14_T_23 = mux(_dotProductRegs_14_T_20, _dotProductRegs_14_T_22, multiplication_206) @[block_division.scala 209:31]
    dotProductRegs_3[14] <= _dotProductRegs_14_T_23 @[block_division.scala 209:25]
    node _signs_14_T_3 = xor(signReg_206, io.sign_b[206]) @[block_division.scala 210:27]
    signs_3[14] <= _signs_14_T_3 @[block_division.scala 210:16]
    node _two_complement_14_T_21 = eq(signs_3[14], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_14_T_22 = cat(UInt<1>("h0"), dotProductRegs_3[14]) @[block_division.scala 213:16]
    node _two_complement_14_T_23 = not(_two_complement_14_T_22) @[block_division.scala 213:10]
    node _two_complement_14_T_24 = add(_two_complement_14_T_23, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_14_T_25 = tail(_two_complement_14_T_24, 1) @[block_division.scala 213:38]
    node _two_complement_14_T_26 = cat(UInt<1>("h0"), dotProductRegs_3[14]) @[block_division.scala 214:14]
    node _two_complement_14_T_27 = mux(_two_complement_14_T_21, _two_complement_14_T_25, _two_complement_14_T_26) @[block_division.scala 211:31]
    two_complement_3[14] <= _two_complement_14_T_27 @[block_division.scala 211:25]
    node _two_complement_buffer_14_T_3 = asSInt(two_complement_3[14]) @[block_division.scala 216:53]
    two_complement_buffer_3[14] <= _two_complement_buffer_14_T_3 @[block_division.scala 216:32]
    reg multiplierReg_207 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_207 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_207 <= io.sign_a[207] @[block_division.scala 206:15]
    multiplierReg_207 <= io.man_a[207] @[block_division.scala 207:21]
    node multiplication_207 = mul(multiplierReg_207, io.man_b[207]) @[block_division.scala 208:42]
    node _dotProductRegs_15_T_18 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_15_T_19 = tail(_dotProductRegs_15_T_18, 1) @[block_division.scala 209:60]
    node _dotProductRegs_15_T_20 = gt(multiplication_207, _dotProductRegs_15_T_19) @[block_division.scala 209:47]
    node _dotProductRegs_15_T_21 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_15_T_22 = tail(_dotProductRegs_15_T_21, 1) @[block_division.scala 209:78]
    node _dotProductRegs_15_T_23 = mux(_dotProductRegs_15_T_20, _dotProductRegs_15_T_22, multiplication_207) @[block_division.scala 209:31]
    dotProductRegs_3[15] <= _dotProductRegs_15_T_23 @[block_division.scala 209:25]
    node _signs_15_T_3 = xor(signReg_207, io.sign_b[207]) @[block_division.scala 210:27]
    signs_3[15] <= _signs_15_T_3 @[block_division.scala 210:16]
    node _two_complement_15_T_21 = eq(signs_3[15], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_15_T_22 = cat(UInt<1>("h0"), dotProductRegs_3[15]) @[block_division.scala 213:16]
    node _two_complement_15_T_23 = not(_two_complement_15_T_22) @[block_division.scala 213:10]
    node _two_complement_15_T_24 = add(_two_complement_15_T_23, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_15_T_25 = tail(_two_complement_15_T_24, 1) @[block_division.scala 213:38]
    node _two_complement_15_T_26 = cat(UInt<1>("h0"), dotProductRegs_3[15]) @[block_division.scala 214:14]
    node _two_complement_15_T_27 = mux(_two_complement_15_T_21, _two_complement_15_T_25, _two_complement_15_T_26) @[block_division.scala 211:31]
    two_complement_3[15] <= _two_complement_15_T_27 @[block_division.scala 211:25]
    node _two_complement_buffer_15_T_3 = asSInt(two_complement_3[15]) @[block_division.scala 216:53]
    two_complement_buffer_3[15] <= _two_complement_buffer_15_T_3 @[block_division.scala 216:32]
    reg multiplierReg_208 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_208 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_208 <= io.sign_a[208] @[block_division.scala 206:15]
    multiplierReg_208 <= io.man_a[208] @[block_division.scala 207:21]
    node multiplication_208 = mul(multiplierReg_208, io.man_b[208]) @[block_division.scala 208:42]
    node _dotProductRegs_16_T_18 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_16_T_19 = tail(_dotProductRegs_16_T_18, 1) @[block_division.scala 209:60]
    node _dotProductRegs_16_T_20 = gt(multiplication_208, _dotProductRegs_16_T_19) @[block_division.scala 209:47]
    node _dotProductRegs_16_T_21 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_16_T_22 = tail(_dotProductRegs_16_T_21, 1) @[block_division.scala 209:78]
    node _dotProductRegs_16_T_23 = mux(_dotProductRegs_16_T_20, _dotProductRegs_16_T_22, multiplication_208) @[block_division.scala 209:31]
    dotProductRegs_3[16] <= _dotProductRegs_16_T_23 @[block_division.scala 209:25]
    node _signs_16_T_3 = xor(signReg_208, io.sign_b[208]) @[block_division.scala 210:27]
    signs_3[16] <= _signs_16_T_3 @[block_division.scala 210:16]
    node _two_complement_16_T_21 = eq(signs_3[16], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_16_T_22 = cat(UInt<1>("h0"), dotProductRegs_3[16]) @[block_division.scala 213:16]
    node _two_complement_16_T_23 = not(_two_complement_16_T_22) @[block_division.scala 213:10]
    node _two_complement_16_T_24 = add(_two_complement_16_T_23, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_16_T_25 = tail(_two_complement_16_T_24, 1) @[block_division.scala 213:38]
    node _two_complement_16_T_26 = cat(UInt<1>("h0"), dotProductRegs_3[16]) @[block_division.scala 214:14]
    node _two_complement_16_T_27 = mux(_two_complement_16_T_21, _two_complement_16_T_25, _two_complement_16_T_26) @[block_division.scala 211:31]
    two_complement_3[16] <= _two_complement_16_T_27 @[block_division.scala 211:25]
    node _two_complement_buffer_16_T_3 = asSInt(two_complement_3[16]) @[block_division.scala 216:53]
    two_complement_buffer_3[16] <= _two_complement_buffer_16_T_3 @[block_division.scala 216:32]
    reg multiplierReg_209 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_209 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_209 <= io.sign_a[209] @[block_division.scala 206:15]
    multiplierReg_209 <= io.man_a[209] @[block_division.scala 207:21]
    node multiplication_209 = mul(multiplierReg_209, io.man_b[209]) @[block_division.scala 208:42]
    node _dotProductRegs_17_T_18 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_17_T_19 = tail(_dotProductRegs_17_T_18, 1) @[block_division.scala 209:60]
    node _dotProductRegs_17_T_20 = gt(multiplication_209, _dotProductRegs_17_T_19) @[block_division.scala 209:47]
    node _dotProductRegs_17_T_21 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_17_T_22 = tail(_dotProductRegs_17_T_21, 1) @[block_division.scala 209:78]
    node _dotProductRegs_17_T_23 = mux(_dotProductRegs_17_T_20, _dotProductRegs_17_T_22, multiplication_209) @[block_division.scala 209:31]
    dotProductRegs_3[17] <= _dotProductRegs_17_T_23 @[block_division.scala 209:25]
    node _signs_17_T_3 = xor(signReg_209, io.sign_b[209]) @[block_division.scala 210:27]
    signs_3[17] <= _signs_17_T_3 @[block_division.scala 210:16]
    node _two_complement_17_T_21 = eq(signs_3[17], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_17_T_22 = cat(UInt<1>("h0"), dotProductRegs_3[17]) @[block_division.scala 213:16]
    node _two_complement_17_T_23 = not(_two_complement_17_T_22) @[block_division.scala 213:10]
    node _two_complement_17_T_24 = add(_two_complement_17_T_23, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_17_T_25 = tail(_two_complement_17_T_24, 1) @[block_division.scala 213:38]
    node _two_complement_17_T_26 = cat(UInt<1>("h0"), dotProductRegs_3[17]) @[block_division.scala 214:14]
    node _two_complement_17_T_27 = mux(_two_complement_17_T_21, _two_complement_17_T_25, _two_complement_17_T_26) @[block_division.scala 211:31]
    two_complement_3[17] <= _two_complement_17_T_27 @[block_division.scala 211:25]
    node _two_complement_buffer_17_T_3 = asSInt(two_complement_3[17]) @[block_division.scala 216:53]
    two_complement_buffer_3[17] <= _two_complement_buffer_17_T_3 @[block_division.scala 216:32]
    reg multiplierReg_210 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_210 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_210 <= io.sign_a[210] @[block_division.scala 206:15]
    multiplierReg_210 <= io.man_a[210] @[block_division.scala 207:21]
    node multiplication_210 = mul(multiplierReg_210, io.man_b[210]) @[block_division.scala 208:42]
    node _dotProductRegs_18_T_18 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_18_T_19 = tail(_dotProductRegs_18_T_18, 1) @[block_division.scala 209:60]
    node _dotProductRegs_18_T_20 = gt(multiplication_210, _dotProductRegs_18_T_19) @[block_division.scala 209:47]
    node _dotProductRegs_18_T_21 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_18_T_22 = tail(_dotProductRegs_18_T_21, 1) @[block_division.scala 209:78]
    node _dotProductRegs_18_T_23 = mux(_dotProductRegs_18_T_20, _dotProductRegs_18_T_22, multiplication_210) @[block_division.scala 209:31]
    dotProductRegs_3[18] <= _dotProductRegs_18_T_23 @[block_division.scala 209:25]
    node _signs_18_T_3 = xor(signReg_210, io.sign_b[210]) @[block_division.scala 210:27]
    signs_3[18] <= _signs_18_T_3 @[block_division.scala 210:16]
    node _two_complement_18_T_21 = eq(signs_3[18], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_18_T_22 = cat(UInt<1>("h0"), dotProductRegs_3[18]) @[block_division.scala 213:16]
    node _two_complement_18_T_23 = not(_two_complement_18_T_22) @[block_division.scala 213:10]
    node _two_complement_18_T_24 = add(_two_complement_18_T_23, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_18_T_25 = tail(_two_complement_18_T_24, 1) @[block_division.scala 213:38]
    node _two_complement_18_T_26 = cat(UInt<1>("h0"), dotProductRegs_3[18]) @[block_division.scala 214:14]
    node _two_complement_18_T_27 = mux(_two_complement_18_T_21, _two_complement_18_T_25, _two_complement_18_T_26) @[block_division.scala 211:31]
    two_complement_3[18] <= _two_complement_18_T_27 @[block_division.scala 211:25]
    node _two_complement_buffer_18_T_3 = asSInt(two_complement_3[18]) @[block_division.scala 216:53]
    two_complement_buffer_3[18] <= _two_complement_buffer_18_T_3 @[block_division.scala 216:32]
    reg multiplierReg_211 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_211 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_211 <= io.sign_a[211] @[block_division.scala 206:15]
    multiplierReg_211 <= io.man_a[211] @[block_division.scala 207:21]
    node multiplication_211 = mul(multiplierReg_211, io.man_b[211]) @[block_division.scala 208:42]
    node _dotProductRegs_19_T_18 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_19_T_19 = tail(_dotProductRegs_19_T_18, 1) @[block_division.scala 209:60]
    node _dotProductRegs_19_T_20 = gt(multiplication_211, _dotProductRegs_19_T_19) @[block_division.scala 209:47]
    node _dotProductRegs_19_T_21 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_19_T_22 = tail(_dotProductRegs_19_T_21, 1) @[block_division.scala 209:78]
    node _dotProductRegs_19_T_23 = mux(_dotProductRegs_19_T_20, _dotProductRegs_19_T_22, multiplication_211) @[block_division.scala 209:31]
    dotProductRegs_3[19] <= _dotProductRegs_19_T_23 @[block_division.scala 209:25]
    node _signs_19_T_3 = xor(signReg_211, io.sign_b[211]) @[block_division.scala 210:27]
    signs_3[19] <= _signs_19_T_3 @[block_division.scala 210:16]
    node _two_complement_19_T_21 = eq(signs_3[19], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_19_T_22 = cat(UInt<1>("h0"), dotProductRegs_3[19]) @[block_division.scala 213:16]
    node _two_complement_19_T_23 = not(_two_complement_19_T_22) @[block_division.scala 213:10]
    node _two_complement_19_T_24 = add(_two_complement_19_T_23, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_19_T_25 = tail(_two_complement_19_T_24, 1) @[block_division.scala 213:38]
    node _two_complement_19_T_26 = cat(UInt<1>("h0"), dotProductRegs_3[19]) @[block_division.scala 214:14]
    node _two_complement_19_T_27 = mux(_two_complement_19_T_21, _two_complement_19_T_25, _two_complement_19_T_26) @[block_division.scala 211:31]
    two_complement_3[19] <= _two_complement_19_T_27 @[block_division.scala 211:25]
    node _two_complement_buffer_19_T_3 = asSInt(two_complement_3[19]) @[block_division.scala 216:53]
    two_complement_buffer_3[19] <= _two_complement_buffer_19_T_3 @[block_division.scala 216:32]
    reg multiplierReg_212 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_212 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_212 <= io.sign_a[212] @[block_division.scala 206:15]
    multiplierReg_212 <= io.man_a[212] @[block_division.scala 207:21]
    node multiplication_212 = mul(multiplierReg_212, io.man_b[212]) @[block_division.scala 208:42]
    node _dotProductRegs_20_T_18 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_20_T_19 = tail(_dotProductRegs_20_T_18, 1) @[block_division.scala 209:60]
    node _dotProductRegs_20_T_20 = gt(multiplication_212, _dotProductRegs_20_T_19) @[block_division.scala 209:47]
    node _dotProductRegs_20_T_21 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_20_T_22 = tail(_dotProductRegs_20_T_21, 1) @[block_division.scala 209:78]
    node _dotProductRegs_20_T_23 = mux(_dotProductRegs_20_T_20, _dotProductRegs_20_T_22, multiplication_212) @[block_division.scala 209:31]
    dotProductRegs_3[20] <= _dotProductRegs_20_T_23 @[block_division.scala 209:25]
    node _signs_20_T_3 = xor(signReg_212, io.sign_b[212]) @[block_division.scala 210:27]
    signs_3[20] <= _signs_20_T_3 @[block_division.scala 210:16]
    node _two_complement_20_T_21 = eq(signs_3[20], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_20_T_22 = cat(UInt<1>("h0"), dotProductRegs_3[20]) @[block_division.scala 213:16]
    node _two_complement_20_T_23 = not(_two_complement_20_T_22) @[block_division.scala 213:10]
    node _two_complement_20_T_24 = add(_two_complement_20_T_23, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_20_T_25 = tail(_two_complement_20_T_24, 1) @[block_division.scala 213:38]
    node _two_complement_20_T_26 = cat(UInt<1>("h0"), dotProductRegs_3[20]) @[block_division.scala 214:14]
    node _two_complement_20_T_27 = mux(_two_complement_20_T_21, _two_complement_20_T_25, _two_complement_20_T_26) @[block_division.scala 211:31]
    two_complement_3[20] <= _two_complement_20_T_27 @[block_division.scala 211:25]
    node _two_complement_buffer_20_T_3 = asSInt(two_complement_3[20]) @[block_division.scala 216:53]
    two_complement_buffer_3[20] <= _two_complement_buffer_20_T_3 @[block_division.scala 216:32]
    reg multiplierReg_213 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_213 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_213 <= io.sign_a[213] @[block_division.scala 206:15]
    multiplierReg_213 <= io.man_a[213] @[block_division.scala 207:21]
    node multiplication_213 = mul(multiplierReg_213, io.man_b[213]) @[block_division.scala 208:42]
    node _dotProductRegs_21_T_18 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_21_T_19 = tail(_dotProductRegs_21_T_18, 1) @[block_division.scala 209:60]
    node _dotProductRegs_21_T_20 = gt(multiplication_213, _dotProductRegs_21_T_19) @[block_division.scala 209:47]
    node _dotProductRegs_21_T_21 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_21_T_22 = tail(_dotProductRegs_21_T_21, 1) @[block_division.scala 209:78]
    node _dotProductRegs_21_T_23 = mux(_dotProductRegs_21_T_20, _dotProductRegs_21_T_22, multiplication_213) @[block_division.scala 209:31]
    dotProductRegs_3[21] <= _dotProductRegs_21_T_23 @[block_division.scala 209:25]
    node _signs_21_T_3 = xor(signReg_213, io.sign_b[213]) @[block_division.scala 210:27]
    signs_3[21] <= _signs_21_T_3 @[block_division.scala 210:16]
    node _two_complement_21_T_21 = eq(signs_3[21], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_21_T_22 = cat(UInt<1>("h0"), dotProductRegs_3[21]) @[block_division.scala 213:16]
    node _two_complement_21_T_23 = not(_two_complement_21_T_22) @[block_division.scala 213:10]
    node _two_complement_21_T_24 = add(_two_complement_21_T_23, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_21_T_25 = tail(_two_complement_21_T_24, 1) @[block_division.scala 213:38]
    node _two_complement_21_T_26 = cat(UInt<1>("h0"), dotProductRegs_3[21]) @[block_division.scala 214:14]
    node _two_complement_21_T_27 = mux(_two_complement_21_T_21, _two_complement_21_T_25, _two_complement_21_T_26) @[block_division.scala 211:31]
    two_complement_3[21] <= _two_complement_21_T_27 @[block_division.scala 211:25]
    node _two_complement_buffer_21_T_3 = asSInt(two_complement_3[21]) @[block_division.scala 216:53]
    two_complement_buffer_3[21] <= _two_complement_buffer_21_T_3 @[block_division.scala 216:32]
    reg multiplierReg_214 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_214 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_214 <= io.sign_a[214] @[block_division.scala 206:15]
    multiplierReg_214 <= io.man_a[214] @[block_division.scala 207:21]
    node multiplication_214 = mul(multiplierReg_214, io.man_b[214]) @[block_division.scala 208:42]
    node _dotProductRegs_22_T_18 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_22_T_19 = tail(_dotProductRegs_22_T_18, 1) @[block_division.scala 209:60]
    node _dotProductRegs_22_T_20 = gt(multiplication_214, _dotProductRegs_22_T_19) @[block_division.scala 209:47]
    node _dotProductRegs_22_T_21 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_22_T_22 = tail(_dotProductRegs_22_T_21, 1) @[block_division.scala 209:78]
    node _dotProductRegs_22_T_23 = mux(_dotProductRegs_22_T_20, _dotProductRegs_22_T_22, multiplication_214) @[block_division.scala 209:31]
    dotProductRegs_3[22] <= _dotProductRegs_22_T_23 @[block_division.scala 209:25]
    node _signs_22_T_3 = xor(signReg_214, io.sign_b[214]) @[block_division.scala 210:27]
    signs_3[22] <= _signs_22_T_3 @[block_division.scala 210:16]
    node _two_complement_22_T_21 = eq(signs_3[22], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_22_T_22 = cat(UInt<1>("h0"), dotProductRegs_3[22]) @[block_division.scala 213:16]
    node _two_complement_22_T_23 = not(_two_complement_22_T_22) @[block_division.scala 213:10]
    node _two_complement_22_T_24 = add(_two_complement_22_T_23, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_22_T_25 = tail(_two_complement_22_T_24, 1) @[block_division.scala 213:38]
    node _two_complement_22_T_26 = cat(UInt<1>("h0"), dotProductRegs_3[22]) @[block_division.scala 214:14]
    node _two_complement_22_T_27 = mux(_two_complement_22_T_21, _two_complement_22_T_25, _two_complement_22_T_26) @[block_division.scala 211:31]
    two_complement_3[22] <= _two_complement_22_T_27 @[block_division.scala 211:25]
    node _two_complement_buffer_22_T_3 = asSInt(two_complement_3[22]) @[block_division.scala 216:53]
    two_complement_buffer_3[22] <= _two_complement_buffer_22_T_3 @[block_division.scala 216:32]
    reg multiplierReg_215 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_215 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_215 <= io.sign_a[215] @[block_division.scala 206:15]
    multiplierReg_215 <= io.man_a[215] @[block_division.scala 207:21]
    node multiplication_215 = mul(multiplierReg_215, io.man_b[215]) @[block_division.scala 208:42]
    node _dotProductRegs_23_T_18 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_23_T_19 = tail(_dotProductRegs_23_T_18, 1) @[block_division.scala 209:60]
    node _dotProductRegs_23_T_20 = gt(multiplication_215, _dotProductRegs_23_T_19) @[block_division.scala 209:47]
    node _dotProductRegs_23_T_21 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_23_T_22 = tail(_dotProductRegs_23_T_21, 1) @[block_division.scala 209:78]
    node _dotProductRegs_23_T_23 = mux(_dotProductRegs_23_T_20, _dotProductRegs_23_T_22, multiplication_215) @[block_division.scala 209:31]
    dotProductRegs_3[23] <= _dotProductRegs_23_T_23 @[block_division.scala 209:25]
    node _signs_23_T_3 = xor(signReg_215, io.sign_b[215]) @[block_division.scala 210:27]
    signs_3[23] <= _signs_23_T_3 @[block_division.scala 210:16]
    node _two_complement_23_T_21 = eq(signs_3[23], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_23_T_22 = cat(UInt<1>("h0"), dotProductRegs_3[23]) @[block_division.scala 213:16]
    node _two_complement_23_T_23 = not(_two_complement_23_T_22) @[block_division.scala 213:10]
    node _two_complement_23_T_24 = add(_two_complement_23_T_23, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_23_T_25 = tail(_two_complement_23_T_24, 1) @[block_division.scala 213:38]
    node _two_complement_23_T_26 = cat(UInt<1>("h0"), dotProductRegs_3[23]) @[block_division.scala 214:14]
    node _two_complement_23_T_27 = mux(_two_complement_23_T_21, _two_complement_23_T_25, _two_complement_23_T_26) @[block_division.scala 211:31]
    two_complement_3[23] <= _two_complement_23_T_27 @[block_division.scala 211:25]
    node _two_complement_buffer_23_T_3 = asSInt(two_complement_3[23]) @[block_division.scala 216:53]
    two_complement_buffer_3[23] <= _two_complement_buffer_23_T_3 @[block_division.scala 216:32]
    reg multiplierReg_216 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_216 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_216 <= io.sign_a[216] @[block_division.scala 206:15]
    multiplierReg_216 <= io.man_a[216] @[block_division.scala 207:21]
    node multiplication_216 = mul(multiplierReg_216, io.man_b[216]) @[block_division.scala 208:42]
    node _dotProductRegs_24_T_18 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_24_T_19 = tail(_dotProductRegs_24_T_18, 1) @[block_division.scala 209:60]
    node _dotProductRegs_24_T_20 = gt(multiplication_216, _dotProductRegs_24_T_19) @[block_division.scala 209:47]
    node _dotProductRegs_24_T_21 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_24_T_22 = tail(_dotProductRegs_24_T_21, 1) @[block_division.scala 209:78]
    node _dotProductRegs_24_T_23 = mux(_dotProductRegs_24_T_20, _dotProductRegs_24_T_22, multiplication_216) @[block_division.scala 209:31]
    dotProductRegs_3[24] <= _dotProductRegs_24_T_23 @[block_division.scala 209:25]
    node _signs_24_T_3 = xor(signReg_216, io.sign_b[216]) @[block_division.scala 210:27]
    signs_3[24] <= _signs_24_T_3 @[block_division.scala 210:16]
    node _two_complement_24_T_21 = eq(signs_3[24], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_24_T_22 = cat(UInt<1>("h0"), dotProductRegs_3[24]) @[block_division.scala 213:16]
    node _two_complement_24_T_23 = not(_two_complement_24_T_22) @[block_division.scala 213:10]
    node _two_complement_24_T_24 = add(_two_complement_24_T_23, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_24_T_25 = tail(_two_complement_24_T_24, 1) @[block_division.scala 213:38]
    node _two_complement_24_T_26 = cat(UInt<1>("h0"), dotProductRegs_3[24]) @[block_division.scala 214:14]
    node _two_complement_24_T_27 = mux(_two_complement_24_T_21, _two_complement_24_T_25, _two_complement_24_T_26) @[block_division.scala 211:31]
    two_complement_3[24] <= _two_complement_24_T_27 @[block_division.scala 211:25]
    node _two_complement_buffer_24_T_3 = asSInt(two_complement_3[24]) @[block_division.scala 216:53]
    two_complement_buffer_3[24] <= _two_complement_buffer_24_T_3 @[block_division.scala 216:32]
    reg multiplierReg_217 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_217 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_217 <= io.sign_a[217] @[block_division.scala 206:15]
    multiplierReg_217 <= io.man_a[217] @[block_division.scala 207:21]
    node multiplication_217 = mul(multiplierReg_217, io.man_b[217]) @[block_division.scala 208:42]
    node _dotProductRegs_25_T_18 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_25_T_19 = tail(_dotProductRegs_25_T_18, 1) @[block_division.scala 209:60]
    node _dotProductRegs_25_T_20 = gt(multiplication_217, _dotProductRegs_25_T_19) @[block_division.scala 209:47]
    node _dotProductRegs_25_T_21 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_25_T_22 = tail(_dotProductRegs_25_T_21, 1) @[block_division.scala 209:78]
    node _dotProductRegs_25_T_23 = mux(_dotProductRegs_25_T_20, _dotProductRegs_25_T_22, multiplication_217) @[block_division.scala 209:31]
    dotProductRegs_3[25] <= _dotProductRegs_25_T_23 @[block_division.scala 209:25]
    node _signs_25_T_3 = xor(signReg_217, io.sign_b[217]) @[block_division.scala 210:27]
    signs_3[25] <= _signs_25_T_3 @[block_division.scala 210:16]
    node _two_complement_25_T_21 = eq(signs_3[25], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_25_T_22 = cat(UInt<1>("h0"), dotProductRegs_3[25]) @[block_division.scala 213:16]
    node _two_complement_25_T_23 = not(_two_complement_25_T_22) @[block_division.scala 213:10]
    node _two_complement_25_T_24 = add(_two_complement_25_T_23, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_25_T_25 = tail(_two_complement_25_T_24, 1) @[block_division.scala 213:38]
    node _two_complement_25_T_26 = cat(UInt<1>("h0"), dotProductRegs_3[25]) @[block_division.scala 214:14]
    node _two_complement_25_T_27 = mux(_two_complement_25_T_21, _two_complement_25_T_25, _two_complement_25_T_26) @[block_division.scala 211:31]
    two_complement_3[25] <= _two_complement_25_T_27 @[block_division.scala 211:25]
    node _two_complement_buffer_25_T_3 = asSInt(two_complement_3[25]) @[block_division.scala 216:53]
    two_complement_buffer_3[25] <= _two_complement_buffer_25_T_3 @[block_division.scala 216:32]
    reg multiplierReg_218 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_218 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_218 <= io.sign_a[218] @[block_division.scala 206:15]
    multiplierReg_218 <= io.man_a[218] @[block_division.scala 207:21]
    node multiplication_218 = mul(multiplierReg_218, io.man_b[218]) @[block_division.scala 208:42]
    node _dotProductRegs_26_T_18 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_26_T_19 = tail(_dotProductRegs_26_T_18, 1) @[block_division.scala 209:60]
    node _dotProductRegs_26_T_20 = gt(multiplication_218, _dotProductRegs_26_T_19) @[block_division.scala 209:47]
    node _dotProductRegs_26_T_21 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_26_T_22 = tail(_dotProductRegs_26_T_21, 1) @[block_division.scala 209:78]
    node _dotProductRegs_26_T_23 = mux(_dotProductRegs_26_T_20, _dotProductRegs_26_T_22, multiplication_218) @[block_division.scala 209:31]
    dotProductRegs_3[26] <= _dotProductRegs_26_T_23 @[block_division.scala 209:25]
    node _signs_26_T_3 = xor(signReg_218, io.sign_b[218]) @[block_division.scala 210:27]
    signs_3[26] <= _signs_26_T_3 @[block_division.scala 210:16]
    node _two_complement_26_T_21 = eq(signs_3[26], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_26_T_22 = cat(UInt<1>("h0"), dotProductRegs_3[26]) @[block_division.scala 213:16]
    node _two_complement_26_T_23 = not(_two_complement_26_T_22) @[block_division.scala 213:10]
    node _two_complement_26_T_24 = add(_two_complement_26_T_23, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_26_T_25 = tail(_two_complement_26_T_24, 1) @[block_division.scala 213:38]
    node _two_complement_26_T_26 = cat(UInt<1>("h0"), dotProductRegs_3[26]) @[block_division.scala 214:14]
    node _two_complement_26_T_27 = mux(_two_complement_26_T_21, _two_complement_26_T_25, _two_complement_26_T_26) @[block_division.scala 211:31]
    two_complement_3[26] <= _two_complement_26_T_27 @[block_division.scala 211:25]
    node _two_complement_buffer_26_T_3 = asSInt(two_complement_3[26]) @[block_division.scala 216:53]
    two_complement_buffer_3[26] <= _two_complement_buffer_26_T_3 @[block_division.scala 216:32]
    reg multiplierReg_219 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_219 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_219 <= io.sign_a[219] @[block_division.scala 206:15]
    multiplierReg_219 <= io.man_a[219] @[block_division.scala 207:21]
    node multiplication_219 = mul(multiplierReg_219, io.man_b[219]) @[block_division.scala 208:42]
    node _dotProductRegs_27_T_18 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_27_T_19 = tail(_dotProductRegs_27_T_18, 1) @[block_division.scala 209:60]
    node _dotProductRegs_27_T_20 = gt(multiplication_219, _dotProductRegs_27_T_19) @[block_division.scala 209:47]
    node _dotProductRegs_27_T_21 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_27_T_22 = tail(_dotProductRegs_27_T_21, 1) @[block_division.scala 209:78]
    node _dotProductRegs_27_T_23 = mux(_dotProductRegs_27_T_20, _dotProductRegs_27_T_22, multiplication_219) @[block_division.scala 209:31]
    dotProductRegs_3[27] <= _dotProductRegs_27_T_23 @[block_division.scala 209:25]
    node _signs_27_T_3 = xor(signReg_219, io.sign_b[219]) @[block_division.scala 210:27]
    signs_3[27] <= _signs_27_T_3 @[block_division.scala 210:16]
    node _two_complement_27_T_21 = eq(signs_3[27], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_27_T_22 = cat(UInt<1>("h0"), dotProductRegs_3[27]) @[block_division.scala 213:16]
    node _two_complement_27_T_23 = not(_two_complement_27_T_22) @[block_division.scala 213:10]
    node _two_complement_27_T_24 = add(_two_complement_27_T_23, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_27_T_25 = tail(_two_complement_27_T_24, 1) @[block_division.scala 213:38]
    node _two_complement_27_T_26 = cat(UInt<1>("h0"), dotProductRegs_3[27]) @[block_division.scala 214:14]
    node _two_complement_27_T_27 = mux(_two_complement_27_T_21, _two_complement_27_T_25, _two_complement_27_T_26) @[block_division.scala 211:31]
    two_complement_3[27] <= _two_complement_27_T_27 @[block_division.scala 211:25]
    node _two_complement_buffer_27_T_3 = asSInt(two_complement_3[27]) @[block_division.scala 216:53]
    two_complement_buffer_3[27] <= _two_complement_buffer_27_T_3 @[block_division.scala 216:32]
    reg multiplierReg_220 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_220 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_220 <= io.sign_a[220] @[block_division.scala 206:15]
    multiplierReg_220 <= io.man_a[220] @[block_division.scala 207:21]
    node multiplication_220 = mul(multiplierReg_220, io.man_b[220]) @[block_division.scala 208:42]
    node _dotProductRegs_28_T_18 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_28_T_19 = tail(_dotProductRegs_28_T_18, 1) @[block_division.scala 209:60]
    node _dotProductRegs_28_T_20 = gt(multiplication_220, _dotProductRegs_28_T_19) @[block_division.scala 209:47]
    node _dotProductRegs_28_T_21 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_28_T_22 = tail(_dotProductRegs_28_T_21, 1) @[block_division.scala 209:78]
    node _dotProductRegs_28_T_23 = mux(_dotProductRegs_28_T_20, _dotProductRegs_28_T_22, multiplication_220) @[block_division.scala 209:31]
    dotProductRegs_3[28] <= _dotProductRegs_28_T_23 @[block_division.scala 209:25]
    node _signs_28_T_3 = xor(signReg_220, io.sign_b[220]) @[block_division.scala 210:27]
    signs_3[28] <= _signs_28_T_3 @[block_division.scala 210:16]
    node _two_complement_28_T_21 = eq(signs_3[28], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_28_T_22 = cat(UInt<1>("h0"), dotProductRegs_3[28]) @[block_division.scala 213:16]
    node _two_complement_28_T_23 = not(_two_complement_28_T_22) @[block_division.scala 213:10]
    node _two_complement_28_T_24 = add(_two_complement_28_T_23, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_28_T_25 = tail(_two_complement_28_T_24, 1) @[block_division.scala 213:38]
    node _two_complement_28_T_26 = cat(UInt<1>("h0"), dotProductRegs_3[28]) @[block_division.scala 214:14]
    node _two_complement_28_T_27 = mux(_two_complement_28_T_21, _two_complement_28_T_25, _two_complement_28_T_26) @[block_division.scala 211:31]
    two_complement_3[28] <= _two_complement_28_T_27 @[block_division.scala 211:25]
    node _two_complement_buffer_28_T_3 = asSInt(two_complement_3[28]) @[block_division.scala 216:53]
    two_complement_buffer_3[28] <= _two_complement_buffer_28_T_3 @[block_division.scala 216:32]
    reg multiplierReg_221 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_221 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_221 <= io.sign_a[221] @[block_division.scala 206:15]
    multiplierReg_221 <= io.man_a[221] @[block_division.scala 207:21]
    node multiplication_221 = mul(multiplierReg_221, io.man_b[221]) @[block_division.scala 208:42]
    node _dotProductRegs_29_T_18 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_29_T_19 = tail(_dotProductRegs_29_T_18, 1) @[block_division.scala 209:60]
    node _dotProductRegs_29_T_20 = gt(multiplication_221, _dotProductRegs_29_T_19) @[block_division.scala 209:47]
    node _dotProductRegs_29_T_21 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_29_T_22 = tail(_dotProductRegs_29_T_21, 1) @[block_division.scala 209:78]
    node _dotProductRegs_29_T_23 = mux(_dotProductRegs_29_T_20, _dotProductRegs_29_T_22, multiplication_221) @[block_division.scala 209:31]
    dotProductRegs_3[29] <= _dotProductRegs_29_T_23 @[block_division.scala 209:25]
    node _signs_29_T_3 = xor(signReg_221, io.sign_b[221]) @[block_division.scala 210:27]
    signs_3[29] <= _signs_29_T_3 @[block_division.scala 210:16]
    node _two_complement_29_T_21 = eq(signs_3[29], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_29_T_22 = cat(UInt<1>("h0"), dotProductRegs_3[29]) @[block_division.scala 213:16]
    node _two_complement_29_T_23 = not(_two_complement_29_T_22) @[block_division.scala 213:10]
    node _two_complement_29_T_24 = add(_two_complement_29_T_23, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_29_T_25 = tail(_two_complement_29_T_24, 1) @[block_division.scala 213:38]
    node _two_complement_29_T_26 = cat(UInt<1>("h0"), dotProductRegs_3[29]) @[block_division.scala 214:14]
    node _two_complement_29_T_27 = mux(_two_complement_29_T_21, _two_complement_29_T_25, _two_complement_29_T_26) @[block_division.scala 211:31]
    two_complement_3[29] <= _two_complement_29_T_27 @[block_division.scala 211:25]
    node _two_complement_buffer_29_T_3 = asSInt(two_complement_3[29]) @[block_division.scala 216:53]
    two_complement_buffer_3[29] <= _two_complement_buffer_29_T_3 @[block_division.scala 216:32]
    reg multiplierReg_222 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_222 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_222 <= io.sign_a[222] @[block_division.scala 206:15]
    multiplierReg_222 <= io.man_a[222] @[block_division.scala 207:21]
    node multiplication_222 = mul(multiplierReg_222, io.man_b[222]) @[block_division.scala 208:42]
    node _dotProductRegs_30_T_18 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_30_T_19 = tail(_dotProductRegs_30_T_18, 1) @[block_division.scala 209:60]
    node _dotProductRegs_30_T_20 = gt(multiplication_222, _dotProductRegs_30_T_19) @[block_division.scala 209:47]
    node _dotProductRegs_30_T_21 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_30_T_22 = tail(_dotProductRegs_30_T_21, 1) @[block_division.scala 209:78]
    node _dotProductRegs_30_T_23 = mux(_dotProductRegs_30_T_20, _dotProductRegs_30_T_22, multiplication_222) @[block_division.scala 209:31]
    dotProductRegs_3[30] <= _dotProductRegs_30_T_23 @[block_division.scala 209:25]
    node _signs_30_T_3 = xor(signReg_222, io.sign_b[222]) @[block_division.scala 210:27]
    signs_3[30] <= _signs_30_T_3 @[block_division.scala 210:16]
    node _two_complement_30_T_21 = eq(signs_3[30], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_30_T_22 = cat(UInt<1>("h0"), dotProductRegs_3[30]) @[block_division.scala 213:16]
    node _two_complement_30_T_23 = not(_two_complement_30_T_22) @[block_division.scala 213:10]
    node _two_complement_30_T_24 = add(_two_complement_30_T_23, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_30_T_25 = tail(_two_complement_30_T_24, 1) @[block_division.scala 213:38]
    node _two_complement_30_T_26 = cat(UInt<1>("h0"), dotProductRegs_3[30]) @[block_division.scala 214:14]
    node _two_complement_30_T_27 = mux(_two_complement_30_T_21, _two_complement_30_T_25, _two_complement_30_T_26) @[block_division.scala 211:31]
    two_complement_3[30] <= _two_complement_30_T_27 @[block_division.scala 211:25]
    node _two_complement_buffer_30_T_3 = asSInt(two_complement_3[30]) @[block_division.scala 216:53]
    two_complement_buffer_3[30] <= _two_complement_buffer_30_T_3 @[block_division.scala 216:32]
    reg multiplierReg_223 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_223 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_223 <= io.sign_a[223] @[block_division.scala 206:15]
    multiplierReg_223 <= io.man_a[223] @[block_division.scala 207:21]
    node multiplication_223 = mul(multiplierReg_223, io.man_b[223]) @[block_division.scala 208:42]
    node _dotProductRegs_31_T_18 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_31_T_19 = tail(_dotProductRegs_31_T_18, 1) @[block_division.scala 209:60]
    node _dotProductRegs_31_T_20 = gt(multiplication_223, _dotProductRegs_31_T_19) @[block_division.scala 209:47]
    node _dotProductRegs_31_T_21 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_31_T_22 = tail(_dotProductRegs_31_T_21, 1) @[block_division.scala 209:78]
    node _dotProductRegs_31_T_23 = mux(_dotProductRegs_31_T_20, _dotProductRegs_31_T_22, multiplication_223) @[block_division.scala 209:31]
    dotProductRegs_3[31] <= _dotProductRegs_31_T_23 @[block_division.scala 209:25]
    node _signs_31_T_3 = xor(signReg_223, io.sign_b[223]) @[block_division.scala 210:27]
    signs_3[31] <= _signs_31_T_3 @[block_division.scala 210:16]
    node _two_complement_31_T_21 = eq(signs_3[31], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_31_T_22 = cat(UInt<1>("h0"), dotProductRegs_3[31]) @[block_division.scala 213:16]
    node _two_complement_31_T_23 = not(_two_complement_31_T_22) @[block_division.scala 213:10]
    node _two_complement_31_T_24 = add(_two_complement_31_T_23, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_31_T_25 = tail(_two_complement_31_T_24, 1) @[block_division.scala 213:38]
    node _two_complement_31_T_26 = cat(UInt<1>("h0"), dotProductRegs_3[31]) @[block_division.scala 214:14]
    node _two_complement_31_T_27 = mux(_two_complement_31_T_21, _two_complement_31_T_25, _two_complement_31_T_26) @[block_division.scala 211:31]
    two_complement_3[31] <= _two_complement_31_T_27 @[block_division.scala 211:25]
    node _two_complement_buffer_31_T_3 = asSInt(two_complement_3[31]) @[block_division.scala 216:53]
    two_complement_buffer_3[31] <= _two_complement_buffer_31_T_3 @[block_division.scala 216:32]
    reg multiplierReg_224 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_224 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_224 <= io.sign_a[224] @[block_division.scala 206:15]
    multiplierReg_224 <= io.man_a[224] @[block_division.scala 207:21]
    node multiplication_224 = mul(multiplierReg_224, io.man_b[224]) @[block_division.scala 208:42]
    node _dotProductRegs_32_T_18 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_32_T_19 = tail(_dotProductRegs_32_T_18, 1) @[block_division.scala 209:60]
    node _dotProductRegs_32_T_20 = gt(multiplication_224, _dotProductRegs_32_T_19) @[block_division.scala 209:47]
    node _dotProductRegs_32_T_21 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_32_T_22 = tail(_dotProductRegs_32_T_21, 1) @[block_division.scala 209:78]
    node _dotProductRegs_32_T_23 = mux(_dotProductRegs_32_T_20, _dotProductRegs_32_T_22, multiplication_224) @[block_division.scala 209:31]
    dotProductRegs_3[32] <= _dotProductRegs_32_T_23 @[block_division.scala 209:25]
    node _signs_32_T_3 = xor(signReg_224, io.sign_b[224]) @[block_division.scala 210:27]
    signs_3[32] <= _signs_32_T_3 @[block_division.scala 210:16]
    node _two_complement_32_T_21 = eq(signs_3[32], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_32_T_22 = cat(UInt<1>("h0"), dotProductRegs_3[32]) @[block_division.scala 213:16]
    node _two_complement_32_T_23 = not(_two_complement_32_T_22) @[block_division.scala 213:10]
    node _two_complement_32_T_24 = add(_two_complement_32_T_23, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_32_T_25 = tail(_two_complement_32_T_24, 1) @[block_division.scala 213:38]
    node _two_complement_32_T_26 = cat(UInt<1>("h0"), dotProductRegs_3[32]) @[block_division.scala 214:14]
    node _two_complement_32_T_27 = mux(_two_complement_32_T_21, _two_complement_32_T_25, _two_complement_32_T_26) @[block_division.scala 211:31]
    two_complement_3[32] <= _two_complement_32_T_27 @[block_division.scala 211:25]
    node _two_complement_buffer_32_T_3 = asSInt(two_complement_3[32]) @[block_division.scala 216:53]
    two_complement_buffer_3[32] <= _two_complement_buffer_32_T_3 @[block_division.scala 216:32]
    reg multiplierReg_225 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_225 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_225 <= io.sign_a[225] @[block_division.scala 206:15]
    multiplierReg_225 <= io.man_a[225] @[block_division.scala 207:21]
    node multiplication_225 = mul(multiplierReg_225, io.man_b[225]) @[block_division.scala 208:42]
    node _dotProductRegs_33_T_18 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_33_T_19 = tail(_dotProductRegs_33_T_18, 1) @[block_division.scala 209:60]
    node _dotProductRegs_33_T_20 = gt(multiplication_225, _dotProductRegs_33_T_19) @[block_division.scala 209:47]
    node _dotProductRegs_33_T_21 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_33_T_22 = tail(_dotProductRegs_33_T_21, 1) @[block_division.scala 209:78]
    node _dotProductRegs_33_T_23 = mux(_dotProductRegs_33_T_20, _dotProductRegs_33_T_22, multiplication_225) @[block_division.scala 209:31]
    dotProductRegs_3[33] <= _dotProductRegs_33_T_23 @[block_division.scala 209:25]
    node _signs_33_T_3 = xor(signReg_225, io.sign_b[225]) @[block_division.scala 210:27]
    signs_3[33] <= _signs_33_T_3 @[block_division.scala 210:16]
    node _two_complement_33_T_21 = eq(signs_3[33], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_33_T_22 = cat(UInt<1>("h0"), dotProductRegs_3[33]) @[block_division.scala 213:16]
    node _two_complement_33_T_23 = not(_two_complement_33_T_22) @[block_division.scala 213:10]
    node _two_complement_33_T_24 = add(_two_complement_33_T_23, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_33_T_25 = tail(_two_complement_33_T_24, 1) @[block_division.scala 213:38]
    node _two_complement_33_T_26 = cat(UInt<1>("h0"), dotProductRegs_3[33]) @[block_division.scala 214:14]
    node _two_complement_33_T_27 = mux(_two_complement_33_T_21, _two_complement_33_T_25, _two_complement_33_T_26) @[block_division.scala 211:31]
    two_complement_3[33] <= _two_complement_33_T_27 @[block_division.scala 211:25]
    node _two_complement_buffer_33_T_3 = asSInt(two_complement_3[33]) @[block_division.scala 216:53]
    two_complement_buffer_3[33] <= _two_complement_buffer_33_T_3 @[block_division.scala 216:32]
    reg multiplierReg_226 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_226 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_226 <= io.sign_a[226] @[block_division.scala 206:15]
    multiplierReg_226 <= io.man_a[226] @[block_division.scala 207:21]
    node multiplication_226 = mul(multiplierReg_226, io.man_b[226]) @[block_division.scala 208:42]
    node _dotProductRegs_34_T_18 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_34_T_19 = tail(_dotProductRegs_34_T_18, 1) @[block_division.scala 209:60]
    node _dotProductRegs_34_T_20 = gt(multiplication_226, _dotProductRegs_34_T_19) @[block_division.scala 209:47]
    node _dotProductRegs_34_T_21 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_34_T_22 = tail(_dotProductRegs_34_T_21, 1) @[block_division.scala 209:78]
    node _dotProductRegs_34_T_23 = mux(_dotProductRegs_34_T_20, _dotProductRegs_34_T_22, multiplication_226) @[block_division.scala 209:31]
    dotProductRegs_3[34] <= _dotProductRegs_34_T_23 @[block_division.scala 209:25]
    node _signs_34_T_3 = xor(signReg_226, io.sign_b[226]) @[block_division.scala 210:27]
    signs_3[34] <= _signs_34_T_3 @[block_division.scala 210:16]
    node _two_complement_34_T_21 = eq(signs_3[34], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_34_T_22 = cat(UInt<1>("h0"), dotProductRegs_3[34]) @[block_division.scala 213:16]
    node _two_complement_34_T_23 = not(_two_complement_34_T_22) @[block_division.scala 213:10]
    node _two_complement_34_T_24 = add(_two_complement_34_T_23, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_34_T_25 = tail(_two_complement_34_T_24, 1) @[block_division.scala 213:38]
    node _two_complement_34_T_26 = cat(UInt<1>("h0"), dotProductRegs_3[34]) @[block_division.scala 214:14]
    node _two_complement_34_T_27 = mux(_two_complement_34_T_21, _two_complement_34_T_25, _two_complement_34_T_26) @[block_division.scala 211:31]
    two_complement_3[34] <= _two_complement_34_T_27 @[block_division.scala 211:25]
    node _two_complement_buffer_34_T_3 = asSInt(two_complement_3[34]) @[block_division.scala 216:53]
    two_complement_buffer_3[34] <= _two_complement_buffer_34_T_3 @[block_division.scala 216:32]
    reg multiplierReg_227 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_227 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_227 <= io.sign_a[227] @[block_division.scala 206:15]
    multiplierReg_227 <= io.man_a[227] @[block_division.scala 207:21]
    node multiplication_227 = mul(multiplierReg_227, io.man_b[227]) @[block_division.scala 208:42]
    node _dotProductRegs_35_T_18 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_35_T_19 = tail(_dotProductRegs_35_T_18, 1) @[block_division.scala 209:60]
    node _dotProductRegs_35_T_20 = gt(multiplication_227, _dotProductRegs_35_T_19) @[block_division.scala 209:47]
    node _dotProductRegs_35_T_21 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_35_T_22 = tail(_dotProductRegs_35_T_21, 1) @[block_division.scala 209:78]
    node _dotProductRegs_35_T_23 = mux(_dotProductRegs_35_T_20, _dotProductRegs_35_T_22, multiplication_227) @[block_division.scala 209:31]
    dotProductRegs_3[35] <= _dotProductRegs_35_T_23 @[block_division.scala 209:25]
    node _signs_35_T_3 = xor(signReg_227, io.sign_b[227]) @[block_division.scala 210:27]
    signs_3[35] <= _signs_35_T_3 @[block_division.scala 210:16]
    node _two_complement_35_T_21 = eq(signs_3[35], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_35_T_22 = cat(UInt<1>("h0"), dotProductRegs_3[35]) @[block_division.scala 213:16]
    node _two_complement_35_T_23 = not(_two_complement_35_T_22) @[block_division.scala 213:10]
    node _two_complement_35_T_24 = add(_two_complement_35_T_23, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_35_T_25 = tail(_two_complement_35_T_24, 1) @[block_division.scala 213:38]
    node _two_complement_35_T_26 = cat(UInt<1>("h0"), dotProductRegs_3[35]) @[block_division.scala 214:14]
    node _two_complement_35_T_27 = mux(_two_complement_35_T_21, _two_complement_35_T_25, _two_complement_35_T_26) @[block_division.scala 211:31]
    two_complement_3[35] <= _two_complement_35_T_27 @[block_division.scala 211:25]
    node _two_complement_buffer_35_T_3 = asSInt(two_complement_3[35]) @[block_division.scala 216:53]
    two_complement_buffer_3[35] <= _two_complement_buffer_35_T_3 @[block_division.scala 216:32]
    reg multiplierReg_228 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_228 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_228 <= io.sign_a[228] @[block_division.scala 206:15]
    multiplierReg_228 <= io.man_a[228] @[block_division.scala 207:21]
    node multiplication_228 = mul(multiplierReg_228, io.man_b[228]) @[block_division.scala 208:42]
    node _dotProductRegs_36_T_18 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_36_T_19 = tail(_dotProductRegs_36_T_18, 1) @[block_division.scala 209:60]
    node _dotProductRegs_36_T_20 = gt(multiplication_228, _dotProductRegs_36_T_19) @[block_division.scala 209:47]
    node _dotProductRegs_36_T_21 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_36_T_22 = tail(_dotProductRegs_36_T_21, 1) @[block_division.scala 209:78]
    node _dotProductRegs_36_T_23 = mux(_dotProductRegs_36_T_20, _dotProductRegs_36_T_22, multiplication_228) @[block_division.scala 209:31]
    dotProductRegs_3[36] <= _dotProductRegs_36_T_23 @[block_division.scala 209:25]
    node _signs_36_T_3 = xor(signReg_228, io.sign_b[228]) @[block_division.scala 210:27]
    signs_3[36] <= _signs_36_T_3 @[block_division.scala 210:16]
    node _two_complement_36_T_21 = eq(signs_3[36], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_36_T_22 = cat(UInt<1>("h0"), dotProductRegs_3[36]) @[block_division.scala 213:16]
    node _two_complement_36_T_23 = not(_two_complement_36_T_22) @[block_division.scala 213:10]
    node _two_complement_36_T_24 = add(_two_complement_36_T_23, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_36_T_25 = tail(_two_complement_36_T_24, 1) @[block_division.scala 213:38]
    node _two_complement_36_T_26 = cat(UInt<1>("h0"), dotProductRegs_3[36]) @[block_division.scala 214:14]
    node _two_complement_36_T_27 = mux(_two_complement_36_T_21, _two_complement_36_T_25, _two_complement_36_T_26) @[block_division.scala 211:31]
    two_complement_3[36] <= _two_complement_36_T_27 @[block_division.scala 211:25]
    node _two_complement_buffer_36_T_3 = asSInt(two_complement_3[36]) @[block_division.scala 216:53]
    two_complement_buffer_3[36] <= _two_complement_buffer_36_T_3 @[block_division.scala 216:32]
    reg multiplierReg_229 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_229 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_229 <= io.sign_a[229] @[block_division.scala 206:15]
    multiplierReg_229 <= io.man_a[229] @[block_division.scala 207:21]
    node multiplication_229 = mul(multiplierReg_229, io.man_b[229]) @[block_division.scala 208:42]
    node _dotProductRegs_37_T_18 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_37_T_19 = tail(_dotProductRegs_37_T_18, 1) @[block_division.scala 209:60]
    node _dotProductRegs_37_T_20 = gt(multiplication_229, _dotProductRegs_37_T_19) @[block_division.scala 209:47]
    node _dotProductRegs_37_T_21 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_37_T_22 = tail(_dotProductRegs_37_T_21, 1) @[block_division.scala 209:78]
    node _dotProductRegs_37_T_23 = mux(_dotProductRegs_37_T_20, _dotProductRegs_37_T_22, multiplication_229) @[block_division.scala 209:31]
    dotProductRegs_3[37] <= _dotProductRegs_37_T_23 @[block_division.scala 209:25]
    node _signs_37_T_3 = xor(signReg_229, io.sign_b[229]) @[block_division.scala 210:27]
    signs_3[37] <= _signs_37_T_3 @[block_division.scala 210:16]
    node _two_complement_37_T_21 = eq(signs_3[37], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_37_T_22 = cat(UInt<1>("h0"), dotProductRegs_3[37]) @[block_division.scala 213:16]
    node _two_complement_37_T_23 = not(_two_complement_37_T_22) @[block_division.scala 213:10]
    node _two_complement_37_T_24 = add(_two_complement_37_T_23, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_37_T_25 = tail(_two_complement_37_T_24, 1) @[block_division.scala 213:38]
    node _two_complement_37_T_26 = cat(UInt<1>("h0"), dotProductRegs_3[37]) @[block_division.scala 214:14]
    node _two_complement_37_T_27 = mux(_two_complement_37_T_21, _two_complement_37_T_25, _two_complement_37_T_26) @[block_division.scala 211:31]
    two_complement_3[37] <= _two_complement_37_T_27 @[block_division.scala 211:25]
    node _two_complement_buffer_37_T_3 = asSInt(two_complement_3[37]) @[block_division.scala 216:53]
    two_complement_buffer_3[37] <= _two_complement_buffer_37_T_3 @[block_division.scala 216:32]
    reg multiplierReg_230 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_230 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_230 <= io.sign_a[230] @[block_division.scala 206:15]
    multiplierReg_230 <= io.man_a[230] @[block_division.scala 207:21]
    node multiplication_230 = mul(multiplierReg_230, io.man_b[230]) @[block_division.scala 208:42]
    node _dotProductRegs_38_T_18 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_38_T_19 = tail(_dotProductRegs_38_T_18, 1) @[block_division.scala 209:60]
    node _dotProductRegs_38_T_20 = gt(multiplication_230, _dotProductRegs_38_T_19) @[block_division.scala 209:47]
    node _dotProductRegs_38_T_21 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_38_T_22 = tail(_dotProductRegs_38_T_21, 1) @[block_division.scala 209:78]
    node _dotProductRegs_38_T_23 = mux(_dotProductRegs_38_T_20, _dotProductRegs_38_T_22, multiplication_230) @[block_division.scala 209:31]
    dotProductRegs_3[38] <= _dotProductRegs_38_T_23 @[block_division.scala 209:25]
    node _signs_38_T_3 = xor(signReg_230, io.sign_b[230]) @[block_division.scala 210:27]
    signs_3[38] <= _signs_38_T_3 @[block_division.scala 210:16]
    node _two_complement_38_T_21 = eq(signs_3[38], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_38_T_22 = cat(UInt<1>("h0"), dotProductRegs_3[38]) @[block_division.scala 213:16]
    node _two_complement_38_T_23 = not(_two_complement_38_T_22) @[block_division.scala 213:10]
    node _two_complement_38_T_24 = add(_two_complement_38_T_23, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_38_T_25 = tail(_two_complement_38_T_24, 1) @[block_division.scala 213:38]
    node _two_complement_38_T_26 = cat(UInt<1>("h0"), dotProductRegs_3[38]) @[block_division.scala 214:14]
    node _two_complement_38_T_27 = mux(_two_complement_38_T_21, _two_complement_38_T_25, _two_complement_38_T_26) @[block_division.scala 211:31]
    two_complement_3[38] <= _two_complement_38_T_27 @[block_division.scala 211:25]
    node _two_complement_buffer_38_T_3 = asSInt(two_complement_3[38]) @[block_division.scala 216:53]
    two_complement_buffer_3[38] <= _two_complement_buffer_38_T_3 @[block_division.scala 216:32]
    reg multiplierReg_231 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_231 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_231 <= io.sign_a[231] @[block_division.scala 206:15]
    multiplierReg_231 <= io.man_a[231] @[block_division.scala 207:21]
    node multiplication_231 = mul(multiplierReg_231, io.man_b[231]) @[block_division.scala 208:42]
    node _dotProductRegs_39_T_18 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_39_T_19 = tail(_dotProductRegs_39_T_18, 1) @[block_division.scala 209:60]
    node _dotProductRegs_39_T_20 = gt(multiplication_231, _dotProductRegs_39_T_19) @[block_division.scala 209:47]
    node _dotProductRegs_39_T_21 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_39_T_22 = tail(_dotProductRegs_39_T_21, 1) @[block_division.scala 209:78]
    node _dotProductRegs_39_T_23 = mux(_dotProductRegs_39_T_20, _dotProductRegs_39_T_22, multiplication_231) @[block_division.scala 209:31]
    dotProductRegs_3[39] <= _dotProductRegs_39_T_23 @[block_division.scala 209:25]
    node _signs_39_T_3 = xor(signReg_231, io.sign_b[231]) @[block_division.scala 210:27]
    signs_3[39] <= _signs_39_T_3 @[block_division.scala 210:16]
    node _two_complement_39_T_21 = eq(signs_3[39], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_39_T_22 = cat(UInt<1>("h0"), dotProductRegs_3[39]) @[block_division.scala 213:16]
    node _two_complement_39_T_23 = not(_two_complement_39_T_22) @[block_division.scala 213:10]
    node _two_complement_39_T_24 = add(_two_complement_39_T_23, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_39_T_25 = tail(_two_complement_39_T_24, 1) @[block_division.scala 213:38]
    node _two_complement_39_T_26 = cat(UInt<1>("h0"), dotProductRegs_3[39]) @[block_division.scala 214:14]
    node _two_complement_39_T_27 = mux(_two_complement_39_T_21, _two_complement_39_T_25, _two_complement_39_T_26) @[block_division.scala 211:31]
    two_complement_3[39] <= _two_complement_39_T_27 @[block_division.scala 211:25]
    node _two_complement_buffer_39_T_3 = asSInt(two_complement_3[39]) @[block_division.scala 216:53]
    two_complement_buffer_3[39] <= _two_complement_buffer_39_T_3 @[block_division.scala 216:32]
    reg multiplierReg_232 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_232 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_232 <= io.sign_a[232] @[block_division.scala 206:15]
    multiplierReg_232 <= io.man_a[232] @[block_division.scala 207:21]
    node multiplication_232 = mul(multiplierReg_232, io.man_b[232]) @[block_division.scala 208:42]
    node _dotProductRegs_40_T_18 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_40_T_19 = tail(_dotProductRegs_40_T_18, 1) @[block_division.scala 209:60]
    node _dotProductRegs_40_T_20 = gt(multiplication_232, _dotProductRegs_40_T_19) @[block_division.scala 209:47]
    node _dotProductRegs_40_T_21 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_40_T_22 = tail(_dotProductRegs_40_T_21, 1) @[block_division.scala 209:78]
    node _dotProductRegs_40_T_23 = mux(_dotProductRegs_40_T_20, _dotProductRegs_40_T_22, multiplication_232) @[block_division.scala 209:31]
    dotProductRegs_3[40] <= _dotProductRegs_40_T_23 @[block_division.scala 209:25]
    node _signs_40_T_3 = xor(signReg_232, io.sign_b[232]) @[block_division.scala 210:27]
    signs_3[40] <= _signs_40_T_3 @[block_division.scala 210:16]
    node _two_complement_40_T_21 = eq(signs_3[40], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_40_T_22 = cat(UInt<1>("h0"), dotProductRegs_3[40]) @[block_division.scala 213:16]
    node _two_complement_40_T_23 = not(_two_complement_40_T_22) @[block_division.scala 213:10]
    node _two_complement_40_T_24 = add(_two_complement_40_T_23, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_40_T_25 = tail(_two_complement_40_T_24, 1) @[block_division.scala 213:38]
    node _two_complement_40_T_26 = cat(UInt<1>("h0"), dotProductRegs_3[40]) @[block_division.scala 214:14]
    node _two_complement_40_T_27 = mux(_two_complement_40_T_21, _two_complement_40_T_25, _two_complement_40_T_26) @[block_division.scala 211:31]
    two_complement_3[40] <= _two_complement_40_T_27 @[block_division.scala 211:25]
    node _two_complement_buffer_40_T_3 = asSInt(two_complement_3[40]) @[block_division.scala 216:53]
    two_complement_buffer_3[40] <= _two_complement_buffer_40_T_3 @[block_division.scala 216:32]
    reg multiplierReg_233 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_233 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_233 <= io.sign_a[233] @[block_division.scala 206:15]
    multiplierReg_233 <= io.man_a[233] @[block_division.scala 207:21]
    node multiplication_233 = mul(multiplierReg_233, io.man_b[233]) @[block_division.scala 208:42]
    node _dotProductRegs_41_T_18 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_41_T_19 = tail(_dotProductRegs_41_T_18, 1) @[block_division.scala 209:60]
    node _dotProductRegs_41_T_20 = gt(multiplication_233, _dotProductRegs_41_T_19) @[block_division.scala 209:47]
    node _dotProductRegs_41_T_21 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_41_T_22 = tail(_dotProductRegs_41_T_21, 1) @[block_division.scala 209:78]
    node _dotProductRegs_41_T_23 = mux(_dotProductRegs_41_T_20, _dotProductRegs_41_T_22, multiplication_233) @[block_division.scala 209:31]
    dotProductRegs_3[41] <= _dotProductRegs_41_T_23 @[block_division.scala 209:25]
    node _signs_41_T_3 = xor(signReg_233, io.sign_b[233]) @[block_division.scala 210:27]
    signs_3[41] <= _signs_41_T_3 @[block_division.scala 210:16]
    node _two_complement_41_T_21 = eq(signs_3[41], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_41_T_22 = cat(UInt<1>("h0"), dotProductRegs_3[41]) @[block_division.scala 213:16]
    node _two_complement_41_T_23 = not(_two_complement_41_T_22) @[block_division.scala 213:10]
    node _two_complement_41_T_24 = add(_two_complement_41_T_23, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_41_T_25 = tail(_two_complement_41_T_24, 1) @[block_division.scala 213:38]
    node _two_complement_41_T_26 = cat(UInt<1>("h0"), dotProductRegs_3[41]) @[block_division.scala 214:14]
    node _two_complement_41_T_27 = mux(_two_complement_41_T_21, _two_complement_41_T_25, _two_complement_41_T_26) @[block_division.scala 211:31]
    two_complement_3[41] <= _two_complement_41_T_27 @[block_division.scala 211:25]
    node _two_complement_buffer_41_T_3 = asSInt(two_complement_3[41]) @[block_division.scala 216:53]
    two_complement_buffer_3[41] <= _two_complement_buffer_41_T_3 @[block_division.scala 216:32]
    reg multiplierReg_234 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_234 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_234 <= io.sign_a[234] @[block_division.scala 206:15]
    multiplierReg_234 <= io.man_a[234] @[block_division.scala 207:21]
    node multiplication_234 = mul(multiplierReg_234, io.man_b[234]) @[block_division.scala 208:42]
    node _dotProductRegs_42_T_18 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_42_T_19 = tail(_dotProductRegs_42_T_18, 1) @[block_division.scala 209:60]
    node _dotProductRegs_42_T_20 = gt(multiplication_234, _dotProductRegs_42_T_19) @[block_division.scala 209:47]
    node _dotProductRegs_42_T_21 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_42_T_22 = tail(_dotProductRegs_42_T_21, 1) @[block_division.scala 209:78]
    node _dotProductRegs_42_T_23 = mux(_dotProductRegs_42_T_20, _dotProductRegs_42_T_22, multiplication_234) @[block_division.scala 209:31]
    dotProductRegs_3[42] <= _dotProductRegs_42_T_23 @[block_division.scala 209:25]
    node _signs_42_T_3 = xor(signReg_234, io.sign_b[234]) @[block_division.scala 210:27]
    signs_3[42] <= _signs_42_T_3 @[block_division.scala 210:16]
    node _two_complement_42_T_21 = eq(signs_3[42], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_42_T_22 = cat(UInt<1>("h0"), dotProductRegs_3[42]) @[block_division.scala 213:16]
    node _two_complement_42_T_23 = not(_two_complement_42_T_22) @[block_division.scala 213:10]
    node _two_complement_42_T_24 = add(_two_complement_42_T_23, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_42_T_25 = tail(_two_complement_42_T_24, 1) @[block_division.scala 213:38]
    node _two_complement_42_T_26 = cat(UInt<1>("h0"), dotProductRegs_3[42]) @[block_division.scala 214:14]
    node _two_complement_42_T_27 = mux(_two_complement_42_T_21, _two_complement_42_T_25, _two_complement_42_T_26) @[block_division.scala 211:31]
    two_complement_3[42] <= _two_complement_42_T_27 @[block_division.scala 211:25]
    node _two_complement_buffer_42_T_3 = asSInt(two_complement_3[42]) @[block_division.scala 216:53]
    two_complement_buffer_3[42] <= _two_complement_buffer_42_T_3 @[block_division.scala 216:32]
    reg multiplierReg_235 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_235 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_235 <= io.sign_a[235] @[block_division.scala 206:15]
    multiplierReg_235 <= io.man_a[235] @[block_division.scala 207:21]
    node multiplication_235 = mul(multiplierReg_235, io.man_b[235]) @[block_division.scala 208:42]
    node _dotProductRegs_43_T_18 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_43_T_19 = tail(_dotProductRegs_43_T_18, 1) @[block_division.scala 209:60]
    node _dotProductRegs_43_T_20 = gt(multiplication_235, _dotProductRegs_43_T_19) @[block_division.scala 209:47]
    node _dotProductRegs_43_T_21 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_43_T_22 = tail(_dotProductRegs_43_T_21, 1) @[block_division.scala 209:78]
    node _dotProductRegs_43_T_23 = mux(_dotProductRegs_43_T_20, _dotProductRegs_43_T_22, multiplication_235) @[block_division.scala 209:31]
    dotProductRegs_3[43] <= _dotProductRegs_43_T_23 @[block_division.scala 209:25]
    node _signs_43_T_3 = xor(signReg_235, io.sign_b[235]) @[block_division.scala 210:27]
    signs_3[43] <= _signs_43_T_3 @[block_division.scala 210:16]
    node _two_complement_43_T_21 = eq(signs_3[43], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_43_T_22 = cat(UInt<1>("h0"), dotProductRegs_3[43]) @[block_division.scala 213:16]
    node _two_complement_43_T_23 = not(_two_complement_43_T_22) @[block_division.scala 213:10]
    node _two_complement_43_T_24 = add(_two_complement_43_T_23, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_43_T_25 = tail(_two_complement_43_T_24, 1) @[block_division.scala 213:38]
    node _two_complement_43_T_26 = cat(UInt<1>("h0"), dotProductRegs_3[43]) @[block_division.scala 214:14]
    node _two_complement_43_T_27 = mux(_two_complement_43_T_21, _two_complement_43_T_25, _two_complement_43_T_26) @[block_division.scala 211:31]
    two_complement_3[43] <= _two_complement_43_T_27 @[block_division.scala 211:25]
    node _two_complement_buffer_43_T_3 = asSInt(two_complement_3[43]) @[block_division.scala 216:53]
    two_complement_buffer_3[43] <= _two_complement_buffer_43_T_3 @[block_division.scala 216:32]
    reg multiplierReg_236 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_236 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_236 <= io.sign_a[236] @[block_division.scala 206:15]
    multiplierReg_236 <= io.man_a[236] @[block_division.scala 207:21]
    node multiplication_236 = mul(multiplierReg_236, io.man_b[236]) @[block_division.scala 208:42]
    node _dotProductRegs_44_T_18 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_44_T_19 = tail(_dotProductRegs_44_T_18, 1) @[block_division.scala 209:60]
    node _dotProductRegs_44_T_20 = gt(multiplication_236, _dotProductRegs_44_T_19) @[block_division.scala 209:47]
    node _dotProductRegs_44_T_21 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_44_T_22 = tail(_dotProductRegs_44_T_21, 1) @[block_division.scala 209:78]
    node _dotProductRegs_44_T_23 = mux(_dotProductRegs_44_T_20, _dotProductRegs_44_T_22, multiplication_236) @[block_division.scala 209:31]
    dotProductRegs_3[44] <= _dotProductRegs_44_T_23 @[block_division.scala 209:25]
    node _signs_44_T_3 = xor(signReg_236, io.sign_b[236]) @[block_division.scala 210:27]
    signs_3[44] <= _signs_44_T_3 @[block_division.scala 210:16]
    node _two_complement_44_T_21 = eq(signs_3[44], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_44_T_22 = cat(UInt<1>("h0"), dotProductRegs_3[44]) @[block_division.scala 213:16]
    node _two_complement_44_T_23 = not(_two_complement_44_T_22) @[block_division.scala 213:10]
    node _two_complement_44_T_24 = add(_two_complement_44_T_23, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_44_T_25 = tail(_two_complement_44_T_24, 1) @[block_division.scala 213:38]
    node _two_complement_44_T_26 = cat(UInt<1>("h0"), dotProductRegs_3[44]) @[block_division.scala 214:14]
    node _two_complement_44_T_27 = mux(_two_complement_44_T_21, _two_complement_44_T_25, _two_complement_44_T_26) @[block_division.scala 211:31]
    two_complement_3[44] <= _two_complement_44_T_27 @[block_division.scala 211:25]
    node _two_complement_buffer_44_T_3 = asSInt(two_complement_3[44]) @[block_division.scala 216:53]
    two_complement_buffer_3[44] <= _two_complement_buffer_44_T_3 @[block_division.scala 216:32]
    reg multiplierReg_237 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_237 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_237 <= io.sign_a[237] @[block_division.scala 206:15]
    multiplierReg_237 <= io.man_a[237] @[block_division.scala 207:21]
    node multiplication_237 = mul(multiplierReg_237, io.man_b[237]) @[block_division.scala 208:42]
    node _dotProductRegs_45_T_18 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_45_T_19 = tail(_dotProductRegs_45_T_18, 1) @[block_division.scala 209:60]
    node _dotProductRegs_45_T_20 = gt(multiplication_237, _dotProductRegs_45_T_19) @[block_division.scala 209:47]
    node _dotProductRegs_45_T_21 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_45_T_22 = tail(_dotProductRegs_45_T_21, 1) @[block_division.scala 209:78]
    node _dotProductRegs_45_T_23 = mux(_dotProductRegs_45_T_20, _dotProductRegs_45_T_22, multiplication_237) @[block_division.scala 209:31]
    dotProductRegs_3[45] <= _dotProductRegs_45_T_23 @[block_division.scala 209:25]
    node _signs_45_T_3 = xor(signReg_237, io.sign_b[237]) @[block_division.scala 210:27]
    signs_3[45] <= _signs_45_T_3 @[block_division.scala 210:16]
    node _two_complement_45_T_21 = eq(signs_3[45], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_45_T_22 = cat(UInt<1>("h0"), dotProductRegs_3[45]) @[block_division.scala 213:16]
    node _two_complement_45_T_23 = not(_two_complement_45_T_22) @[block_division.scala 213:10]
    node _two_complement_45_T_24 = add(_two_complement_45_T_23, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_45_T_25 = tail(_two_complement_45_T_24, 1) @[block_division.scala 213:38]
    node _two_complement_45_T_26 = cat(UInt<1>("h0"), dotProductRegs_3[45]) @[block_division.scala 214:14]
    node _two_complement_45_T_27 = mux(_two_complement_45_T_21, _two_complement_45_T_25, _two_complement_45_T_26) @[block_division.scala 211:31]
    two_complement_3[45] <= _two_complement_45_T_27 @[block_division.scala 211:25]
    node _two_complement_buffer_45_T_3 = asSInt(two_complement_3[45]) @[block_division.scala 216:53]
    two_complement_buffer_3[45] <= _two_complement_buffer_45_T_3 @[block_division.scala 216:32]
    reg multiplierReg_238 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_238 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_238 <= io.sign_a[238] @[block_division.scala 206:15]
    multiplierReg_238 <= io.man_a[238] @[block_division.scala 207:21]
    node multiplication_238 = mul(multiplierReg_238, io.man_b[238]) @[block_division.scala 208:42]
    node _dotProductRegs_46_T_18 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_46_T_19 = tail(_dotProductRegs_46_T_18, 1) @[block_division.scala 209:60]
    node _dotProductRegs_46_T_20 = gt(multiplication_238, _dotProductRegs_46_T_19) @[block_division.scala 209:47]
    node _dotProductRegs_46_T_21 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_46_T_22 = tail(_dotProductRegs_46_T_21, 1) @[block_division.scala 209:78]
    node _dotProductRegs_46_T_23 = mux(_dotProductRegs_46_T_20, _dotProductRegs_46_T_22, multiplication_238) @[block_division.scala 209:31]
    dotProductRegs_3[46] <= _dotProductRegs_46_T_23 @[block_division.scala 209:25]
    node _signs_46_T_3 = xor(signReg_238, io.sign_b[238]) @[block_division.scala 210:27]
    signs_3[46] <= _signs_46_T_3 @[block_division.scala 210:16]
    node _two_complement_46_T_21 = eq(signs_3[46], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_46_T_22 = cat(UInt<1>("h0"), dotProductRegs_3[46]) @[block_division.scala 213:16]
    node _two_complement_46_T_23 = not(_two_complement_46_T_22) @[block_division.scala 213:10]
    node _two_complement_46_T_24 = add(_two_complement_46_T_23, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_46_T_25 = tail(_two_complement_46_T_24, 1) @[block_division.scala 213:38]
    node _two_complement_46_T_26 = cat(UInt<1>("h0"), dotProductRegs_3[46]) @[block_division.scala 214:14]
    node _two_complement_46_T_27 = mux(_two_complement_46_T_21, _two_complement_46_T_25, _two_complement_46_T_26) @[block_division.scala 211:31]
    two_complement_3[46] <= _two_complement_46_T_27 @[block_division.scala 211:25]
    node _two_complement_buffer_46_T_3 = asSInt(two_complement_3[46]) @[block_division.scala 216:53]
    two_complement_buffer_3[46] <= _two_complement_buffer_46_T_3 @[block_division.scala 216:32]
    reg multiplierReg_239 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_239 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_239 <= io.sign_a[239] @[block_division.scala 206:15]
    multiplierReg_239 <= io.man_a[239] @[block_division.scala 207:21]
    node multiplication_239 = mul(multiplierReg_239, io.man_b[239]) @[block_division.scala 208:42]
    node _dotProductRegs_47_T_18 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_47_T_19 = tail(_dotProductRegs_47_T_18, 1) @[block_division.scala 209:60]
    node _dotProductRegs_47_T_20 = gt(multiplication_239, _dotProductRegs_47_T_19) @[block_division.scala 209:47]
    node _dotProductRegs_47_T_21 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_47_T_22 = tail(_dotProductRegs_47_T_21, 1) @[block_division.scala 209:78]
    node _dotProductRegs_47_T_23 = mux(_dotProductRegs_47_T_20, _dotProductRegs_47_T_22, multiplication_239) @[block_division.scala 209:31]
    dotProductRegs_3[47] <= _dotProductRegs_47_T_23 @[block_division.scala 209:25]
    node _signs_47_T_3 = xor(signReg_239, io.sign_b[239]) @[block_division.scala 210:27]
    signs_3[47] <= _signs_47_T_3 @[block_division.scala 210:16]
    node _two_complement_47_T_21 = eq(signs_3[47], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_47_T_22 = cat(UInt<1>("h0"), dotProductRegs_3[47]) @[block_division.scala 213:16]
    node _two_complement_47_T_23 = not(_two_complement_47_T_22) @[block_division.scala 213:10]
    node _two_complement_47_T_24 = add(_two_complement_47_T_23, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_47_T_25 = tail(_two_complement_47_T_24, 1) @[block_division.scala 213:38]
    node _two_complement_47_T_26 = cat(UInt<1>("h0"), dotProductRegs_3[47]) @[block_division.scala 214:14]
    node _two_complement_47_T_27 = mux(_two_complement_47_T_21, _two_complement_47_T_25, _two_complement_47_T_26) @[block_division.scala 211:31]
    two_complement_3[47] <= _two_complement_47_T_27 @[block_division.scala 211:25]
    node _two_complement_buffer_47_T_3 = asSInt(two_complement_3[47]) @[block_division.scala 216:53]
    two_complement_buffer_3[47] <= _two_complement_buffer_47_T_3 @[block_division.scala 216:32]
    reg multiplierReg_240 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_240 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_240 <= io.sign_a[240] @[block_division.scala 206:15]
    multiplierReg_240 <= io.man_a[240] @[block_division.scala 207:21]
    node multiplication_240 = mul(multiplierReg_240, io.man_b[240]) @[block_division.scala 208:42]
    node _dotProductRegs_48_T_18 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_48_T_19 = tail(_dotProductRegs_48_T_18, 1) @[block_division.scala 209:60]
    node _dotProductRegs_48_T_20 = gt(multiplication_240, _dotProductRegs_48_T_19) @[block_division.scala 209:47]
    node _dotProductRegs_48_T_21 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_48_T_22 = tail(_dotProductRegs_48_T_21, 1) @[block_division.scala 209:78]
    node _dotProductRegs_48_T_23 = mux(_dotProductRegs_48_T_20, _dotProductRegs_48_T_22, multiplication_240) @[block_division.scala 209:31]
    dotProductRegs_3[48] <= _dotProductRegs_48_T_23 @[block_division.scala 209:25]
    node _signs_48_T_3 = xor(signReg_240, io.sign_b[240]) @[block_division.scala 210:27]
    signs_3[48] <= _signs_48_T_3 @[block_division.scala 210:16]
    node _two_complement_48_T_21 = eq(signs_3[48], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_48_T_22 = cat(UInt<1>("h0"), dotProductRegs_3[48]) @[block_division.scala 213:16]
    node _two_complement_48_T_23 = not(_two_complement_48_T_22) @[block_division.scala 213:10]
    node _two_complement_48_T_24 = add(_two_complement_48_T_23, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_48_T_25 = tail(_two_complement_48_T_24, 1) @[block_division.scala 213:38]
    node _two_complement_48_T_26 = cat(UInt<1>("h0"), dotProductRegs_3[48]) @[block_division.scala 214:14]
    node _two_complement_48_T_27 = mux(_two_complement_48_T_21, _two_complement_48_T_25, _two_complement_48_T_26) @[block_division.scala 211:31]
    two_complement_3[48] <= _two_complement_48_T_27 @[block_division.scala 211:25]
    node _two_complement_buffer_48_T_3 = asSInt(two_complement_3[48]) @[block_division.scala 216:53]
    two_complement_buffer_3[48] <= _two_complement_buffer_48_T_3 @[block_division.scala 216:32]
    reg multiplierReg_241 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_241 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_241 <= io.sign_a[241] @[block_division.scala 206:15]
    multiplierReg_241 <= io.man_a[241] @[block_division.scala 207:21]
    node multiplication_241 = mul(multiplierReg_241, io.man_b[241]) @[block_division.scala 208:42]
    node _dotProductRegs_49_T_18 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_49_T_19 = tail(_dotProductRegs_49_T_18, 1) @[block_division.scala 209:60]
    node _dotProductRegs_49_T_20 = gt(multiplication_241, _dotProductRegs_49_T_19) @[block_division.scala 209:47]
    node _dotProductRegs_49_T_21 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_49_T_22 = tail(_dotProductRegs_49_T_21, 1) @[block_division.scala 209:78]
    node _dotProductRegs_49_T_23 = mux(_dotProductRegs_49_T_20, _dotProductRegs_49_T_22, multiplication_241) @[block_division.scala 209:31]
    dotProductRegs_3[49] <= _dotProductRegs_49_T_23 @[block_division.scala 209:25]
    node _signs_49_T_3 = xor(signReg_241, io.sign_b[241]) @[block_division.scala 210:27]
    signs_3[49] <= _signs_49_T_3 @[block_division.scala 210:16]
    node _two_complement_49_T_21 = eq(signs_3[49], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_49_T_22 = cat(UInt<1>("h0"), dotProductRegs_3[49]) @[block_division.scala 213:16]
    node _two_complement_49_T_23 = not(_two_complement_49_T_22) @[block_division.scala 213:10]
    node _two_complement_49_T_24 = add(_two_complement_49_T_23, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_49_T_25 = tail(_two_complement_49_T_24, 1) @[block_division.scala 213:38]
    node _two_complement_49_T_26 = cat(UInt<1>("h0"), dotProductRegs_3[49]) @[block_division.scala 214:14]
    node _two_complement_49_T_27 = mux(_two_complement_49_T_21, _two_complement_49_T_25, _two_complement_49_T_26) @[block_division.scala 211:31]
    two_complement_3[49] <= _two_complement_49_T_27 @[block_division.scala 211:25]
    node _two_complement_buffer_49_T_3 = asSInt(two_complement_3[49]) @[block_division.scala 216:53]
    two_complement_buffer_3[49] <= _two_complement_buffer_49_T_3 @[block_division.scala 216:32]
    reg multiplierReg_242 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_242 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_242 <= io.sign_a[242] @[block_division.scala 206:15]
    multiplierReg_242 <= io.man_a[242] @[block_division.scala 207:21]
    node multiplication_242 = mul(multiplierReg_242, io.man_b[242]) @[block_division.scala 208:42]
    node _dotProductRegs_50_T_18 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_50_T_19 = tail(_dotProductRegs_50_T_18, 1) @[block_division.scala 209:60]
    node _dotProductRegs_50_T_20 = gt(multiplication_242, _dotProductRegs_50_T_19) @[block_division.scala 209:47]
    node _dotProductRegs_50_T_21 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_50_T_22 = tail(_dotProductRegs_50_T_21, 1) @[block_division.scala 209:78]
    node _dotProductRegs_50_T_23 = mux(_dotProductRegs_50_T_20, _dotProductRegs_50_T_22, multiplication_242) @[block_division.scala 209:31]
    dotProductRegs_3[50] <= _dotProductRegs_50_T_23 @[block_division.scala 209:25]
    node _signs_50_T_3 = xor(signReg_242, io.sign_b[242]) @[block_division.scala 210:27]
    signs_3[50] <= _signs_50_T_3 @[block_division.scala 210:16]
    node _two_complement_50_T_21 = eq(signs_3[50], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_50_T_22 = cat(UInt<1>("h0"), dotProductRegs_3[50]) @[block_division.scala 213:16]
    node _two_complement_50_T_23 = not(_two_complement_50_T_22) @[block_division.scala 213:10]
    node _two_complement_50_T_24 = add(_two_complement_50_T_23, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_50_T_25 = tail(_two_complement_50_T_24, 1) @[block_division.scala 213:38]
    node _two_complement_50_T_26 = cat(UInt<1>("h0"), dotProductRegs_3[50]) @[block_division.scala 214:14]
    node _two_complement_50_T_27 = mux(_two_complement_50_T_21, _two_complement_50_T_25, _two_complement_50_T_26) @[block_division.scala 211:31]
    two_complement_3[50] <= _two_complement_50_T_27 @[block_division.scala 211:25]
    node _two_complement_buffer_50_T_3 = asSInt(two_complement_3[50]) @[block_division.scala 216:53]
    two_complement_buffer_3[50] <= _two_complement_buffer_50_T_3 @[block_division.scala 216:32]
    reg multiplierReg_243 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_243 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_243 <= io.sign_a[243] @[block_division.scala 206:15]
    multiplierReg_243 <= io.man_a[243] @[block_division.scala 207:21]
    node multiplication_243 = mul(multiplierReg_243, io.man_b[243]) @[block_division.scala 208:42]
    node _dotProductRegs_51_T_18 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_51_T_19 = tail(_dotProductRegs_51_T_18, 1) @[block_division.scala 209:60]
    node _dotProductRegs_51_T_20 = gt(multiplication_243, _dotProductRegs_51_T_19) @[block_division.scala 209:47]
    node _dotProductRegs_51_T_21 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_51_T_22 = tail(_dotProductRegs_51_T_21, 1) @[block_division.scala 209:78]
    node _dotProductRegs_51_T_23 = mux(_dotProductRegs_51_T_20, _dotProductRegs_51_T_22, multiplication_243) @[block_division.scala 209:31]
    dotProductRegs_3[51] <= _dotProductRegs_51_T_23 @[block_division.scala 209:25]
    node _signs_51_T_3 = xor(signReg_243, io.sign_b[243]) @[block_division.scala 210:27]
    signs_3[51] <= _signs_51_T_3 @[block_division.scala 210:16]
    node _two_complement_51_T_21 = eq(signs_3[51], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_51_T_22 = cat(UInt<1>("h0"), dotProductRegs_3[51]) @[block_division.scala 213:16]
    node _two_complement_51_T_23 = not(_two_complement_51_T_22) @[block_division.scala 213:10]
    node _two_complement_51_T_24 = add(_two_complement_51_T_23, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_51_T_25 = tail(_two_complement_51_T_24, 1) @[block_division.scala 213:38]
    node _two_complement_51_T_26 = cat(UInt<1>("h0"), dotProductRegs_3[51]) @[block_division.scala 214:14]
    node _two_complement_51_T_27 = mux(_two_complement_51_T_21, _two_complement_51_T_25, _two_complement_51_T_26) @[block_division.scala 211:31]
    two_complement_3[51] <= _two_complement_51_T_27 @[block_division.scala 211:25]
    node _two_complement_buffer_51_T_3 = asSInt(two_complement_3[51]) @[block_division.scala 216:53]
    two_complement_buffer_3[51] <= _two_complement_buffer_51_T_3 @[block_division.scala 216:32]
    reg multiplierReg_244 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_244 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_244 <= io.sign_a[244] @[block_division.scala 206:15]
    multiplierReg_244 <= io.man_a[244] @[block_division.scala 207:21]
    node multiplication_244 = mul(multiplierReg_244, io.man_b[244]) @[block_division.scala 208:42]
    node _dotProductRegs_52_T_18 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_52_T_19 = tail(_dotProductRegs_52_T_18, 1) @[block_division.scala 209:60]
    node _dotProductRegs_52_T_20 = gt(multiplication_244, _dotProductRegs_52_T_19) @[block_division.scala 209:47]
    node _dotProductRegs_52_T_21 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_52_T_22 = tail(_dotProductRegs_52_T_21, 1) @[block_division.scala 209:78]
    node _dotProductRegs_52_T_23 = mux(_dotProductRegs_52_T_20, _dotProductRegs_52_T_22, multiplication_244) @[block_division.scala 209:31]
    dotProductRegs_3[52] <= _dotProductRegs_52_T_23 @[block_division.scala 209:25]
    node _signs_52_T_3 = xor(signReg_244, io.sign_b[244]) @[block_division.scala 210:27]
    signs_3[52] <= _signs_52_T_3 @[block_division.scala 210:16]
    node _two_complement_52_T_21 = eq(signs_3[52], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_52_T_22 = cat(UInt<1>("h0"), dotProductRegs_3[52]) @[block_division.scala 213:16]
    node _two_complement_52_T_23 = not(_two_complement_52_T_22) @[block_division.scala 213:10]
    node _two_complement_52_T_24 = add(_two_complement_52_T_23, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_52_T_25 = tail(_two_complement_52_T_24, 1) @[block_division.scala 213:38]
    node _two_complement_52_T_26 = cat(UInt<1>("h0"), dotProductRegs_3[52]) @[block_division.scala 214:14]
    node _two_complement_52_T_27 = mux(_two_complement_52_T_21, _two_complement_52_T_25, _two_complement_52_T_26) @[block_division.scala 211:31]
    two_complement_3[52] <= _two_complement_52_T_27 @[block_division.scala 211:25]
    node _two_complement_buffer_52_T_3 = asSInt(two_complement_3[52]) @[block_division.scala 216:53]
    two_complement_buffer_3[52] <= _two_complement_buffer_52_T_3 @[block_division.scala 216:32]
    reg multiplierReg_245 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_245 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_245 <= io.sign_a[245] @[block_division.scala 206:15]
    multiplierReg_245 <= io.man_a[245] @[block_division.scala 207:21]
    node multiplication_245 = mul(multiplierReg_245, io.man_b[245]) @[block_division.scala 208:42]
    node _dotProductRegs_53_T_18 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_53_T_19 = tail(_dotProductRegs_53_T_18, 1) @[block_division.scala 209:60]
    node _dotProductRegs_53_T_20 = gt(multiplication_245, _dotProductRegs_53_T_19) @[block_division.scala 209:47]
    node _dotProductRegs_53_T_21 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_53_T_22 = tail(_dotProductRegs_53_T_21, 1) @[block_division.scala 209:78]
    node _dotProductRegs_53_T_23 = mux(_dotProductRegs_53_T_20, _dotProductRegs_53_T_22, multiplication_245) @[block_division.scala 209:31]
    dotProductRegs_3[53] <= _dotProductRegs_53_T_23 @[block_division.scala 209:25]
    node _signs_53_T_3 = xor(signReg_245, io.sign_b[245]) @[block_division.scala 210:27]
    signs_3[53] <= _signs_53_T_3 @[block_division.scala 210:16]
    node _two_complement_53_T_21 = eq(signs_3[53], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_53_T_22 = cat(UInt<1>("h0"), dotProductRegs_3[53]) @[block_division.scala 213:16]
    node _two_complement_53_T_23 = not(_two_complement_53_T_22) @[block_division.scala 213:10]
    node _two_complement_53_T_24 = add(_two_complement_53_T_23, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_53_T_25 = tail(_two_complement_53_T_24, 1) @[block_division.scala 213:38]
    node _two_complement_53_T_26 = cat(UInt<1>("h0"), dotProductRegs_3[53]) @[block_division.scala 214:14]
    node _two_complement_53_T_27 = mux(_two_complement_53_T_21, _two_complement_53_T_25, _two_complement_53_T_26) @[block_division.scala 211:31]
    two_complement_3[53] <= _two_complement_53_T_27 @[block_division.scala 211:25]
    node _two_complement_buffer_53_T_3 = asSInt(two_complement_3[53]) @[block_division.scala 216:53]
    two_complement_buffer_3[53] <= _two_complement_buffer_53_T_3 @[block_division.scala 216:32]
    reg multiplierReg_246 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_246 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_246 <= io.sign_a[246] @[block_division.scala 206:15]
    multiplierReg_246 <= io.man_a[246] @[block_division.scala 207:21]
    node multiplication_246 = mul(multiplierReg_246, io.man_b[246]) @[block_division.scala 208:42]
    node _dotProductRegs_54_T_18 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_54_T_19 = tail(_dotProductRegs_54_T_18, 1) @[block_division.scala 209:60]
    node _dotProductRegs_54_T_20 = gt(multiplication_246, _dotProductRegs_54_T_19) @[block_division.scala 209:47]
    node _dotProductRegs_54_T_21 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_54_T_22 = tail(_dotProductRegs_54_T_21, 1) @[block_division.scala 209:78]
    node _dotProductRegs_54_T_23 = mux(_dotProductRegs_54_T_20, _dotProductRegs_54_T_22, multiplication_246) @[block_division.scala 209:31]
    dotProductRegs_3[54] <= _dotProductRegs_54_T_23 @[block_division.scala 209:25]
    node _signs_54_T_3 = xor(signReg_246, io.sign_b[246]) @[block_division.scala 210:27]
    signs_3[54] <= _signs_54_T_3 @[block_division.scala 210:16]
    node _two_complement_54_T_21 = eq(signs_3[54], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_54_T_22 = cat(UInt<1>("h0"), dotProductRegs_3[54]) @[block_division.scala 213:16]
    node _two_complement_54_T_23 = not(_two_complement_54_T_22) @[block_division.scala 213:10]
    node _two_complement_54_T_24 = add(_two_complement_54_T_23, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_54_T_25 = tail(_two_complement_54_T_24, 1) @[block_division.scala 213:38]
    node _two_complement_54_T_26 = cat(UInt<1>("h0"), dotProductRegs_3[54]) @[block_division.scala 214:14]
    node _two_complement_54_T_27 = mux(_two_complement_54_T_21, _two_complement_54_T_25, _two_complement_54_T_26) @[block_division.scala 211:31]
    two_complement_3[54] <= _two_complement_54_T_27 @[block_division.scala 211:25]
    node _two_complement_buffer_54_T_3 = asSInt(two_complement_3[54]) @[block_division.scala 216:53]
    two_complement_buffer_3[54] <= _two_complement_buffer_54_T_3 @[block_division.scala 216:32]
    reg multiplierReg_247 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_247 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_247 <= io.sign_a[247] @[block_division.scala 206:15]
    multiplierReg_247 <= io.man_a[247] @[block_division.scala 207:21]
    node multiplication_247 = mul(multiplierReg_247, io.man_b[247]) @[block_division.scala 208:42]
    node _dotProductRegs_55_T_18 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_55_T_19 = tail(_dotProductRegs_55_T_18, 1) @[block_division.scala 209:60]
    node _dotProductRegs_55_T_20 = gt(multiplication_247, _dotProductRegs_55_T_19) @[block_division.scala 209:47]
    node _dotProductRegs_55_T_21 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_55_T_22 = tail(_dotProductRegs_55_T_21, 1) @[block_division.scala 209:78]
    node _dotProductRegs_55_T_23 = mux(_dotProductRegs_55_T_20, _dotProductRegs_55_T_22, multiplication_247) @[block_division.scala 209:31]
    dotProductRegs_3[55] <= _dotProductRegs_55_T_23 @[block_division.scala 209:25]
    node _signs_55_T_3 = xor(signReg_247, io.sign_b[247]) @[block_division.scala 210:27]
    signs_3[55] <= _signs_55_T_3 @[block_division.scala 210:16]
    node _two_complement_55_T_21 = eq(signs_3[55], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_55_T_22 = cat(UInt<1>("h0"), dotProductRegs_3[55]) @[block_division.scala 213:16]
    node _two_complement_55_T_23 = not(_two_complement_55_T_22) @[block_division.scala 213:10]
    node _two_complement_55_T_24 = add(_two_complement_55_T_23, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_55_T_25 = tail(_two_complement_55_T_24, 1) @[block_division.scala 213:38]
    node _two_complement_55_T_26 = cat(UInt<1>("h0"), dotProductRegs_3[55]) @[block_division.scala 214:14]
    node _two_complement_55_T_27 = mux(_two_complement_55_T_21, _two_complement_55_T_25, _two_complement_55_T_26) @[block_division.scala 211:31]
    two_complement_3[55] <= _two_complement_55_T_27 @[block_division.scala 211:25]
    node _two_complement_buffer_55_T_3 = asSInt(two_complement_3[55]) @[block_division.scala 216:53]
    two_complement_buffer_3[55] <= _two_complement_buffer_55_T_3 @[block_division.scala 216:32]
    reg multiplierReg_248 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_248 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_248 <= io.sign_a[248] @[block_division.scala 206:15]
    multiplierReg_248 <= io.man_a[248] @[block_division.scala 207:21]
    node multiplication_248 = mul(multiplierReg_248, io.man_b[248]) @[block_division.scala 208:42]
    node _dotProductRegs_56_T_18 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_56_T_19 = tail(_dotProductRegs_56_T_18, 1) @[block_division.scala 209:60]
    node _dotProductRegs_56_T_20 = gt(multiplication_248, _dotProductRegs_56_T_19) @[block_division.scala 209:47]
    node _dotProductRegs_56_T_21 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_56_T_22 = tail(_dotProductRegs_56_T_21, 1) @[block_division.scala 209:78]
    node _dotProductRegs_56_T_23 = mux(_dotProductRegs_56_T_20, _dotProductRegs_56_T_22, multiplication_248) @[block_division.scala 209:31]
    dotProductRegs_3[56] <= _dotProductRegs_56_T_23 @[block_division.scala 209:25]
    node _signs_56_T_3 = xor(signReg_248, io.sign_b[248]) @[block_division.scala 210:27]
    signs_3[56] <= _signs_56_T_3 @[block_division.scala 210:16]
    node _two_complement_56_T_21 = eq(signs_3[56], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_56_T_22 = cat(UInt<1>("h0"), dotProductRegs_3[56]) @[block_division.scala 213:16]
    node _two_complement_56_T_23 = not(_two_complement_56_T_22) @[block_division.scala 213:10]
    node _two_complement_56_T_24 = add(_two_complement_56_T_23, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_56_T_25 = tail(_two_complement_56_T_24, 1) @[block_division.scala 213:38]
    node _two_complement_56_T_26 = cat(UInt<1>("h0"), dotProductRegs_3[56]) @[block_division.scala 214:14]
    node _two_complement_56_T_27 = mux(_two_complement_56_T_21, _two_complement_56_T_25, _two_complement_56_T_26) @[block_division.scala 211:31]
    two_complement_3[56] <= _two_complement_56_T_27 @[block_division.scala 211:25]
    node _two_complement_buffer_56_T_3 = asSInt(two_complement_3[56]) @[block_division.scala 216:53]
    two_complement_buffer_3[56] <= _two_complement_buffer_56_T_3 @[block_division.scala 216:32]
    reg multiplierReg_249 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_249 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_249 <= io.sign_a[249] @[block_division.scala 206:15]
    multiplierReg_249 <= io.man_a[249] @[block_division.scala 207:21]
    node multiplication_249 = mul(multiplierReg_249, io.man_b[249]) @[block_division.scala 208:42]
    node _dotProductRegs_57_T_18 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_57_T_19 = tail(_dotProductRegs_57_T_18, 1) @[block_division.scala 209:60]
    node _dotProductRegs_57_T_20 = gt(multiplication_249, _dotProductRegs_57_T_19) @[block_division.scala 209:47]
    node _dotProductRegs_57_T_21 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_57_T_22 = tail(_dotProductRegs_57_T_21, 1) @[block_division.scala 209:78]
    node _dotProductRegs_57_T_23 = mux(_dotProductRegs_57_T_20, _dotProductRegs_57_T_22, multiplication_249) @[block_division.scala 209:31]
    dotProductRegs_3[57] <= _dotProductRegs_57_T_23 @[block_division.scala 209:25]
    node _signs_57_T_3 = xor(signReg_249, io.sign_b[249]) @[block_division.scala 210:27]
    signs_3[57] <= _signs_57_T_3 @[block_division.scala 210:16]
    node _two_complement_57_T_21 = eq(signs_3[57], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_57_T_22 = cat(UInt<1>("h0"), dotProductRegs_3[57]) @[block_division.scala 213:16]
    node _two_complement_57_T_23 = not(_two_complement_57_T_22) @[block_division.scala 213:10]
    node _two_complement_57_T_24 = add(_two_complement_57_T_23, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_57_T_25 = tail(_two_complement_57_T_24, 1) @[block_division.scala 213:38]
    node _two_complement_57_T_26 = cat(UInt<1>("h0"), dotProductRegs_3[57]) @[block_division.scala 214:14]
    node _two_complement_57_T_27 = mux(_two_complement_57_T_21, _two_complement_57_T_25, _two_complement_57_T_26) @[block_division.scala 211:31]
    two_complement_3[57] <= _two_complement_57_T_27 @[block_division.scala 211:25]
    node _two_complement_buffer_57_T_3 = asSInt(two_complement_3[57]) @[block_division.scala 216:53]
    two_complement_buffer_3[57] <= _two_complement_buffer_57_T_3 @[block_division.scala 216:32]
    reg multiplierReg_250 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_250 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_250 <= io.sign_a[250] @[block_division.scala 206:15]
    multiplierReg_250 <= io.man_a[250] @[block_division.scala 207:21]
    node multiplication_250 = mul(multiplierReg_250, io.man_b[250]) @[block_division.scala 208:42]
    node _dotProductRegs_58_T_18 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_58_T_19 = tail(_dotProductRegs_58_T_18, 1) @[block_division.scala 209:60]
    node _dotProductRegs_58_T_20 = gt(multiplication_250, _dotProductRegs_58_T_19) @[block_division.scala 209:47]
    node _dotProductRegs_58_T_21 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_58_T_22 = tail(_dotProductRegs_58_T_21, 1) @[block_division.scala 209:78]
    node _dotProductRegs_58_T_23 = mux(_dotProductRegs_58_T_20, _dotProductRegs_58_T_22, multiplication_250) @[block_division.scala 209:31]
    dotProductRegs_3[58] <= _dotProductRegs_58_T_23 @[block_division.scala 209:25]
    node _signs_58_T_3 = xor(signReg_250, io.sign_b[250]) @[block_division.scala 210:27]
    signs_3[58] <= _signs_58_T_3 @[block_division.scala 210:16]
    node _two_complement_58_T_21 = eq(signs_3[58], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_58_T_22 = cat(UInt<1>("h0"), dotProductRegs_3[58]) @[block_division.scala 213:16]
    node _two_complement_58_T_23 = not(_two_complement_58_T_22) @[block_division.scala 213:10]
    node _two_complement_58_T_24 = add(_two_complement_58_T_23, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_58_T_25 = tail(_two_complement_58_T_24, 1) @[block_division.scala 213:38]
    node _two_complement_58_T_26 = cat(UInt<1>("h0"), dotProductRegs_3[58]) @[block_division.scala 214:14]
    node _two_complement_58_T_27 = mux(_two_complement_58_T_21, _two_complement_58_T_25, _two_complement_58_T_26) @[block_division.scala 211:31]
    two_complement_3[58] <= _two_complement_58_T_27 @[block_division.scala 211:25]
    node _two_complement_buffer_58_T_3 = asSInt(two_complement_3[58]) @[block_division.scala 216:53]
    two_complement_buffer_3[58] <= _two_complement_buffer_58_T_3 @[block_division.scala 216:32]
    reg multiplierReg_251 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_251 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_251 <= io.sign_a[251] @[block_division.scala 206:15]
    multiplierReg_251 <= io.man_a[251] @[block_division.scala 207:21]
    node multiplication_251 = mul(multiplierReg_251, io.man_b[251]) @[block_division.scala 208:42]
    node _dotProductRegs_59_T_18 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_59_T_19 = tail(_dotProductRegs_59_T_18, 1) @[block_division.scala 209:60]
    node _dotProductRegs_59_T_20 = gt(multiplication_251, _dotProductRegs_59_T_19) @[block_division.scala 209:47]
    node _dotProductRegs_59_T_21 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_59_T_22 = tail(_dotProductRegs_59_T_21, 1) @[block_division.scala 209:78]
    node _dotProductRegs_59_T_23 = mux(_dotProductRegs_59_T_20, _dotProductRegs_59_T_22, multiplication_251) @[block_division.scala 209:31]
    dotProductRegs_3[59] <= _dotProductRegs_59_T_23 @[block_division.scala 209:25]
    node _signs_59_T_3 = xor(signReg_251, io.sign_b[251]) @[block_division.scala 210:27]
    signs_3[59] <= _signs_59_T_3 @[block_division.scala 210:16]
    node _two_complement_59_T_21 = eq(signs_3[59], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_59_T_22 = cat(UInt<1>("h0"), dotProductRegs_3[59]) @[block_division.scala 213:16]
    node _two_complement_59_T_23 = not(_two_complement_59_T_22) @[block_division.scala 213:10]
    node _two_complement_59_T_24 = add(_two_complement_59_T_23, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_59_T_25 = tail(_two_complement_59_T_24, 1) @[block_division.scala 213:38]
    node _two_complement_59_T_26 = cat(UInt<1>("h0"), dotProductRegs_3[59]) @[block_division.scala 214:14]
    node _two_complement_59_T_27 = mux(_two_complement_59_T_21, _two_complement_59_T_25, _two_complement_59_T_26) @[block_division.scala 211:31]
    two_complement_3[59] <= _two_complement_59_T_27 @[block_division.scala 211:25]
    node _two_complement_buffer_59_T_3 = asSInt(two_complement_3[59]) @[block_division.scala 216:53]
    two_complement_buffer_3[59] <= _two_complement_buffer_59_T_3 @[block_division.scala 216:32]
    reg multiplierReg_252 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_252 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_252 <= io.sign_a[252] @[block_division.scala 206:15]
    multiplierReg_252 <= io.man_a[252] @[block_division.scala 207:21]
    node multiplication_252 = mul(multiplierReg_252, io.man_b[252]) @[block_division.scala 208:42]
    node _dotProductRegs_60_T_18 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_60_T_19 = tail(_dotProductRegs_60_T_18, 1) @[block_division.scala 209:60]
    node _dotProductRegs_60_T_20 = gt(multiplication_252, _dotProductRegs_60_T_19) @[block_division.scala 209:47]
    node _dotProductRegs_60_T_21 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_60_T_22 = tail(_dotProductRegs_60_T_21, 1) @[block_division.scala 209:78]
    node _dotProductRegs_60_T_23 = mux(_dotProductRegs_60_T_20, _dotProductRegs_60_T_22, multiplication_252) @[block_division.scala 209:31]
    dotProductRegs_3[60] <= _dotProductRegs_60_T_23 @[block_division.scala 209:25]
    node _signs_60_T_3 = xor(signReg_252, io.sign_b[252]) @[block_division.scala 210:27]
    signs_3[60] <= _signs_60_T_3 @[block_division.scala 210:16]
    node _two_complement_60_T_21 = eq(signs_3[60], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_60_T_22 = cat(UInt<1>("h0"), dotProductRegs_3[60]) @[block_division.scala 213:16]
    node _two_complement_60_T_23 = not(_two_complement_60_T_22) @[block_division.scala 213:10]
    node _two_complement_60_T_24 = add(_two_complement_60_T_23, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_60_T_25 = tail(_two_complement_60_T_24, 1) @[block_division.scala 213:38]
    node _two_complement_60_T_26 = cat(UInt<1>("h0"), dotProductRegs_3[60]) @[block_division.scala 214:14]
    node _two_complement_60_T_27 = mux(_two_complement_60_T_21, _two_complement_60_T_25, _two_complement_60_T_26) @[block_division.scala 211:31]
    two_complement_3[60] <= _two_complement_60_T_27 @[block_division.scala 211:25]
    node _two_complement_buffer_60_T_3 = asSInt(two_complement_3[60]) @[block_division.scala 216:53]
    two_complement_buffer_3[60] <= _two_complement_buffer_60_T_3 @[block_division.scala 216:32]
    reg multiplierReg_253 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_253 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_253 <= io.sign_a[253] @[block_division.scala 206:15]
    multiplierReg_253 <= io.man_a[253] @[block_division.scala 207:21]
    node multiplication_253 = mul(multiplierReg_253, io.man_b[253]) @[block_division.scala 208:42]
    node _dotProductRegs_61_T_18 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_61_T_19 = tail(_dotProductRegs_61_T_18, 1) @[block_division.scala 209:60]
    node _dotProductRegs_61_T_20 = gt(multiplication_253, _dotProductRegs_61_T_19) @[block_division.scala 209:47]
    node _dotProductRegs_61_T_21 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_61_T_22 = tail(_dotProductRegs_61_T_21, 1) @[block_division.scala 209:78]
    node _dotProductRegs_61_T_23 = mux(_dotProductRegs_61_T_20, _dotProductRegs_61_T_22, multiplication_253) @[block_division.scala 209:31]
    dotProductRegs_3[61] <= _dotProductRegs_61_T_23 @[block_division.scala 209:25]
    node _signs_61_T_3 = xor(signReg_253, io.sign_b[253]) @[block_division.scala 210:27]
    signs_3[61] <= _signs_61_T_3 @[block_division.scala 210:16]
    node _two_complement_61_T_21 = eq(signs_3[61], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_61_T_22 = cat(UInt<1>("h0"), dotProductRegs_3[61]) @[block_division.scala 213:16]
    node _two_complement_61_T_23 = not(_two_complement_61_T_22) @[block_division.scala 213:10]
    node _two_complement_61_T_24 = add(_two_complement_61_T_23, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_61_T_25 = tail(_two_complement_61_T_24, 1) @[block_division.scala 213:38]
    node _two_complement_61_T_26 = cat(UInt<1>("h0"), dotProductRegs_3[61]) @[block_division.scala 214:14]
    node _two_complement_61_T_27 = mux(_two_complement_61_T_21, _two_complement_61_T_25, _two_complement_61_T_26) @[block_division.scala 211:31]
    two_complement_3[61] <= _two_complement_61_T_27 @[block_division.scala 211:25]
    node _two_complement_buffer_61_T_3 = asSInt(two_complement_3[61]) @[block_division.scala 216:53]
    two_complement_buffer_3[61] <= _two_complement_buffer_61_T_3 @[block_division.scala 216:32]
    reg multiplierReg_254 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_254 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_254 <= io.sign_a[254] @[block_division.scala 206:15]
    multiplierReg_254 <= io.man_a[254] @[block_division.scala 207:21]
    node multiplication_254 = mul(multiplierReg_254, io.man_b[254]) @[block_division.scala 208:42]
    node _dotProductRegs_62_T_18 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_62_T_19 = tail(_dotProductRegs_62_T_18, 1) @[block_division.scala 209:60]
    node _dotProductRegs_62_T_20 = gt(multiplication_254, _dotProductRegs_62_T_19) @[block_division.scala 209:47]
    node _dotProductRegs_62_T_21 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_62_T_22 = tail(_dotProductRegs_62_T_21, 1) @[block_division.scala 209:78]
    node _dotProductRegs_62_T_23 = mux(_dotProductRegs_62_T_20, _dotProductRegs_62_T_22, multiplication_254) @[block_division.scala 209:31]
    dotProductRegs_3[62] <= _dotProductRegs_62_T_23 @[block_division.scala 209:25]
    node _signs_62_T_3 = xor(signReg_254, io.sign_b[254]) @[block_division.scala 210:27]
    signs_3[62] <= _signs_62_T_3 @[block_division.scala 210:16]
    node _two_complement_62_T_21 = eq(signs_3[62], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_62_T_22 = cat(UInt<1>("h0"), dotProductRegs_3[62]) @[block_division.scala 213:16]
    node _two_complement_62_T_23 = not(_two_complement_62_T_22) @[block_division.scala 213:10]
    node _two_complement_62_T_24 = add(_two_complement_62_T_23, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_62_T_25 = tail(_two_complement_62_T_24, 1) @[block_division.scala 213:38]
    node _two_complement_62_T_26 = cat(UInt<1>("h0"), dotProductRegs_3[62]) @[block_division.scala 214:14]
    node _two_complement_62_T_27 = mux(_two_complement_62_T_21, _two_complement_62_T_25, _two_complement_62_T_26) @[block_division.scala 211:31]
    two_complement_3[62] <= _two_complement_62_T_27 @[block_division.scala 211:25]
    node _two_complement_buffer_62_T_3 = asSInt(two_complement_3[62]) @[block_division.scala 216:53]
    two_complement_buffer_3[62] <= _two_complement_buffer_62_T_3 @[block_division.scala 216:32]
    reg multiplierReg_255 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[block_division.scala 204:34]
    reg signReg_255 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[block_division.scala 205:28]
    signReg_255 <= io.sign_a[255] @[block_division.scala 206:15]
    multiplierReg_255 <= io.man_a[255] @[block_division.scala 207:21]
    node multiplication_255 = mul(multiplierReg_255, io.man_b[255]) @[block_division.scala 208:42]
    node _dotProductRegs_63_T_18 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:60]
    node _dotProductRegs_63_T_19 = tail(_dotProductRegs_63_T_18, 1) @[block_division.scala 209:60]
    node _dotProductRegs_63_T_20 = gt(multiplication_255, _dotProductRegs_63_T_19) @[block_division.scala 209:47]
    node _dotProductRegs_63_T_21 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 209:78]
    node _dotProductRegs_63_T_22 = tail(_dotProductRegs_63_T_21, 1) @[block_division.scala 209:78]
    node _dotProductRegs_63_T_23 = mux(_dotProductRegs_63_T_20, _dotProductRegs_63_T_22, multiplication_255) @[block_division.scala 209:31]
    dotProductRegs_3[63] <= _dotProductRegs_63_T_23 @[block_division.scala 209:25]
    node _signs_63_T_3 = xor(signReg_255, io.sign_b[255]) @[block_division.scala 210:27]
    signs_3[63] <= _signs_63_T_3 @[block_division.scala 210:16]
    node _two_complement_63_T_21 = eq(signs_3[63], UInt<1>("h1")) @[block_division.scala 212:18]
    node _two_complement_63_T_22 = cat(UInt<1>("h0"), dotProductRegs_3[63]) @[block_division.scala 213:16]
    node _two_complement_63_T_23 = not(_two_complement_63_T_22) @[block_division.scala 213:10]
    node _two_complement_63_T_24 = add(_two_complement_63_T_23, UInt<1>("h1")) @[block_division.scala 213:38]
    node _two_complement_63_T_25 = tail(_two_complement_63_T_24, 1) @[block_division.scala 213:38]
    node _two_complement_63_T_26 = cat(UInt<1>("h0"), dotProductRegs_3[63]) @[block_division.scala 214:14]
    node _two_complement_63_T_27 = mux(_two_complement_63_T_21, _two_complement_63_T_25, _two_complement_63_T_26) @[block_division.scala 211:31]
    two_complement_3[63] <= _two_complement_63_T_27 @[block_division.scala 211:25]
    node _two_complement_buffer_63_T_3 = asSInt(two_complement_3[63]) @[block_division.scala 216:53]
    two_complement_buffer_3[63] <= _two_complement_buffer_63_T_3 @[block_division.scala 216:32]
    node _sum_T_186 = add(two_complement_buffer_3[0], two_complement_buffer_3[1]) @[block_division.scala 218:46]
    node _sum_T_187 = add(_sum_T_186, two_complement_buffer_3[2]) @[block_division.scala 218:46]
    node _sum_T_188 = add(_sum_T_187, two_complement_buffer_3[3]) @[block_division.scala 218:46]
    node _sum_T_189 = add(_sum_T_188, two_complement_buffer_3[4]) @[block_division.scala 218:46]
    node _sum_T_190 = add(_sum_T_189, two_complement_buffer_3[5]) @[block_division.scala 218:46]
    node _sum_T_191 = add(_sum_T_190, two_complement_buffer_3[6]) @[block_division.scala 218:46]
    node _sum_T_192 = add(_sum_T_191, two_complement_buffer_3[7]) @[block_division.scala 218:46]
    node _sum_T_193 = add(_sum_T_192, two_complement_buffer_3[8]) @[block_division.scala 218:46]
    node _sum_T_194 = add(_sum_T_193, two_complement_buffer_3[9]) @[block_division.scala 218:46]
    node _sum_T_195 = add(_sum_T_194, two_complement_buffer_3[10]) @[block_division.scala 218:46]
    node _sum_T_196 = add(_sum_T_195, two_complement_buffer_3[11]) @[block_division.scala 218:46]
    node _sum_T_197 = add(_sum_T_196, two_complement_buffer_3[12]) @[block_division.scala 218:46]
    node _sum_T_198 = add(_sum_T_197, two_complement_buffer_3[13]) @[block_division.scala 218:46]
    node _sum_T_199 = add(_sum_T_198, two_complement_buffer_3[14]) @[block_division.scala 218:46]
    node _sum_T_200 = add(_sum_T_199, two_complement_buffer_3[15]) @[block_division.scala 218:46]
    node _sum_T_201 = add(_sum_T_200, two_complement_buffer_3[16]) @[block_division.scala 218:46]
    node _sum_T_202 = add(_sum_T_201, two_complement_buffer_3[17]) @[block_division.scala 218:46]
    node _sum_T_203 = add(_sum_T_202, two_complement_buffer_3[18]) @[block_division.scala 218:46]
    node _sum_T_204 = add(_sum_T_203, two_complement_buffer_3[19]) @[block_division.scala 218:46]
    node _sum_T_205 = add(_sum_T_204, two_complement_buffer_3[20]) @[block_division.scala 218:46]
    node _sum_T_206 = add(_sum_T_205, two_complement_buffer_3[21]) @[block_division.scala 218:46]
    node _sum_T_207 = add(_sum_T_206, two_complement_buffer_3[22]) @[block_division.scala 218:46]
    node _sum_T_208 = add(_sum_T_207, two_complement_buffer_3[23]) @[block_division.scala 218:46]
    node _sum_T_209 = add(_sum_T_208, two_complement_buffer_3[24]) @[block_division.scala 218:46]
    node _sum_T_210 = add(_sum_T_209, two_complement_buffer_3[25]) @[block_division.scala 218:46]
    node _sum_T_211 = add(_sum_T_210, two_complement_buffer_3[26]) @[block_division.scala 218:46]
    node _sum_T_212 = add(_sum_T_211, two_complement_buffer_3[27]) @[block_division.scala 218:46]
    node _sum_T_213 = add(_sum_T_212, two_complement_buffer_3[28]) @[block_division.scala 218:46]
    node _sum_T_214 = add(_sum_T_213, two_complement_buffer_3[29]) @[block_division.scala 218:46]
    node _sum_T_215 = add(_sum_T_214, two_complement_buffer_3[30]) @[block_division.scala 218:46]
    node _sum_T_216 = add(_sum_T_215, two_complement_buffer_3[31]) @[block_division.scala 218:46]
    node _sum_T_217 = add(_sum_T_216, two_complement_buffer_3[32]) @[block_division.scala 218:46]
    node _sum_T_218 = add(_sum_T_217, two_complement_buffer_3[33]) @[block_division.scala 218:46]
    node _sum_T_219 = add(_sum_T_218, two_complement_buffer_3[34]) @[block_division.scala 218:46]
    node _sum_T_220 = add(_sum_T_219, two_complement_buffer_3[35]) @[block_division.scala 218:46]
    node _sum_T_221 = add(_sum_T_220, two_complement_buffer_3[36]) @[block_division.scala 218:46]
    node _sum_T_222 = add(_sum_T_221, two_complement_buffer_3[37]) @[block_division.scala 218:46]
    node _sum_T_223 = add(_sum_T_222, two_complement_buffer_3[38]) @[block_division.scala 218:46]
    node _sum_T_224 = add(_sum_T_223, two_complement_buffer_3[39]) @[block_division.scala 218:46]
    node _sum_T_225 = add(_sum_T_224, two_complement_buffer_3[40]) @[block_division.scala 218:46]
    node _sum_T_226 = add(_sum_T_225, two_complement_buffer_3[41]) @[block_division.scala 218:46]
    node _sum_T_227 = add(_sum_T_226, two_complement_buffer_3[42]) @[block_division.scala 218:46]
    node _sum_T_228 = add(_sum_T_227, two_complement_buffer_3[43]) @[block_division.scala 218:46]
    node _sum_T_229 = add(_sum_T_228, two_complement_buffer_3[44]) @[block_division.scala 218:46]
    node _sum_T_230 = add(_sum_T_229, two_complement_buffer_3[45]) @[block_division.scala 218:46]
    node _sum_T_231 = add(_sum_T_230, two_complement_buffer_3[46]) @[block_division.scala 218:46]
    node _sum_T_232 = add(_sum_T_231, two_complement_buffer_3[47]) @[block_division.scala 218:46]
    node _sum_T_233 = add(_sum_T_232, two_complement_buffer_3[48]) @[block_division.scala 218:46]
    node _sum_T_234 = add(_sum_T_233, two_complement_buffer_3[49]) @[block_division.scala 218:46]
    node _sum_T_235 = add(_sum_T_234, two_complement_buffer_3[50]) @[block_division.scala 218:46]
    node _sum_T_236 = add(_sum_T_235, two_complement_buffer_3[51]) @[block_division.scala 218:46]
    node _sum_T_237 = add(_sum_T_236, two_complement_buffer_3[52]) @[block_division.scala 218:46]
    node _sum_T_238 = add(_sum_T_237, two_complement_buffer_3[53]) @[block_division.scala 218:46]
    node _sum_T_239 = add(_sum_T_238, two_complement_buffer_3[54]) @[block_division.scala 218:46]
    node _sum_T_240 = add(_sum_T_239, two_complement_buffer_3[55]) @[block_division.scala 218:46]
    node _sum_T_241 = add(_sum_T_240, two_complement_buffer_3[56]) @[block_division.scala 218:46]
    node _sum_T_242 = add(_sum_T_241, two_complement_buffer_3[57]) @[block_division.scala 218:46]
    node _sum_T_243 = add(_sum_T_242, two_complement_buffer_3[58]) @[block_division.scala 218:46]
    node _sum_T_244 = add(_sum_T_243, two_complement_buffer_3[59]) @[block_division.scala 218:46]
    node _sum_T_245 = add(_sum_T_244, two_complement_buffer_3[60]) @[block_division.scala 218:46]
    node _sum_T_246 = add(_sum_T_245, two_complement_buffer_3[61]) @[block_division.scala 218:46]
    node _sum_T_247 = add(_sum_T_246, two_complement_buffer_3[62]) @[block_division.scala 218:46]
    node sum_3 = add(_sum_T_247, two_complement_buffer_3[63]) @[block_division.scala 218:46]
    node _acc_3_T = bits(sum_3, 68, 68) @[block_division.scala 219:22]
    node _acc_3_T_1 = eq(_acc_3_T, UInt<1>("h1")) @[block_division.scala 219:44]
    node _acc_3_T_2 = bits(sum_3, 67, 0) @[block_division.scala 219:61]
    node _acc_3_T_3 = not(_acc_3_T_2) @[block_division.scala 219:57]
    node _acc_3_T_4 = add(_acc_3_T_3, UInt<1>("h1")) @[block_division.scala 219:86]
    node _acc_3_T_5 = tail(_acc_3_T_4, 1) @[block_division.scala 219:86]
    node _acc_3_T_6 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 219:106]
    node _acc_3_T_7 = tail(_acc_3_T_6, 1) @[block_division.scala 219:106]
    node _acc_3_T_8 = gt(_acc_3_T_5, _acc_3_T_7) @[block_division.scala 219:93]
    node _acc_3_T_9 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 219:127]
    node _acc_3_T_10 = tail(_acc_3_T_9, 1) @[block_division.scala 219:127]
    node _acc_3_T_11 = not(_acc_3_T_10) @[block_division.scala 219:114]
    node _acc_3_T_12 = add(_acc_3_T_11, UInt<1>("h1")) @[block_division.scala 219:135]
    node _acc_3_T_13 = tail(_acc_3_T_12, 1) @[block_division.scala 219:135]
    node _acc_3_T_14 = bits(sum_3, 68, 0) @[block_division.scala 219:145]
    node _acc_3_T_15 = mux(_acc_3_T_8, _acc_3_T_13, _acc_3_T_14) @[block_division.scala 219:55]
    node _acc_3_T_16 = bits(sum_3, 67, 0) @[block_division.scala 220:10]
    node _acc_3_T_17 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 220:49]
    node _acc_3_T_18 = tail(_acc_3_T_17, 1) @[block_division.scala 220:49]
    node _acc_3_T_19 = gt(_acc_3_T_16, _acc_3_T_18) @[block_division.scala 220:36]
    node _acc_3_T_20 = sub(UInt<6>("h20"), UInt<1>("h1")) @[block_division.scala 220:67]
    node _acc_3_T_21 = tail(_acc_3_T_20, 1) @[block_division.scala 220:67]
    node _acc_3_T_22 = bits(sum_3, 68, 0) @[block_division.scala 220:77]
    node _acc_3_T_23 = mux(_acc_3_T_19, _acc_3_T_21, _acc_3_T_22) @[block_division.scala 220:6]
    node _acc_3_T_24 = mux(_acc_3_T_1, _acc_3_T_15, _acc_3_T_23) @[block_division.scala 219:18]
    acc_3 <= _acc_3_T_24 @[block_division.scala 219:12]
    inst adderTreeInst of adderTree2 @[block_division.scala 223:29]
    adderTreeInst.clock <= clock
    adderTreeInst.reset <= reset
    wire _WIRE : UInt<6>[4] @[block_division.scala 224:39]
    _WIRE[0] <= acc_0 @[block_division.scala 224:39]
    _WIRE[1] <= acc_1 @[block_division.scala 224:39]
    _WIRE[2] <= acc_2 @[block_division.scala 224:39]
    _WIRE[3] <= acc_3 @[block_division.scala 224:39]
    adderTreeInst.io.sign_man <= _WIRE @[block_division.scala 224:29]
    wire _WIRE_1 : UInt<9>[4] @[block_division.scala 225:35]
    _WIRE_1[0] <= exp_output_0 @[block_division.scala 225:35]
    _WIRE_1[1] <= exp_output_1 @[block_division.scala 225:35]
    _WIRE_1[2] <= exp_output_2 @[block_division.scala 225:35]
    _WIRE_1[3] <= exp_output_3 @[block_division.scala 225:35]
    adderTreeInst.io.exps <= _WIRE_1 @[block_division.scala 225:25]
    adderTreeInst.io.control_signal <= io.control @[block_division.scala 226:35]
    adderTreeInst.io.control_signal2 <= io.control2 @[block_division.scala 227:36]
    io.result <= adderTreeInst.io.result_tree @[block_division.scala 228:13]

