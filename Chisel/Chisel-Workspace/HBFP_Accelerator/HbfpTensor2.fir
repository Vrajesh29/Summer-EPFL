circuit HbfpTensor2 :
  module adderTree3 :
    input clock : Clock
    input reset : Reset
    output io : { flip sign_man : SInt<18>[2], flip exps : UInt<8>[2], result_tree : UInt<14>}

    reg exponent : UInt<8>, clock with :
      reset => (reset, UInt<8>("h0")) @[shit.scala 66:23]
    reg sign_mantissa : SInt<19>, clock with :
      reset => (reset, asSInt(UInt<19>("h0"))) @[shit.scala 67:28]
    reg exp_buffer : UInt<8>[2], clock with :
      reset => (UInt<1>("h0"), exp_buffer) @[shit.scala 82:27]
    reg man_buffer_two_complement : SInt<19>[2], clock with :
      reset => (UInt<1>("h0"), man_buffer_two_complement) @[shit.scala 83:42]
    node _exp_buffer_0_T = gt(io.exps[0], io.exps[1]) @[shit.scala 88:28]
    node _exp_buffer_0_T_1 = mux(_exp_buffer_0_T, io.exps[0], io.exps[1]) @[shit.scala 87:31]
    exp_buffer[0] <= _exp_buffer_0_T_1 @[shit.scala 87:25]
    node _exp_difference_T = gt(io.exps[0], io.exps[1]) @[shit.scala 93:28]
    node _exp_difference_T_1 = sub(io.exps[0], io.exps[1]) @[shit.scala 94:28]
    node _exp_difference_T_2 = tail(_exp_difference_T_1, 1) @[shit.scala 94:28]
    node _exp_difference_T_3 = sub(io.exps[1], io.exps[0]) @[shit.scala 95:32]
    node _exp_difference_T_4 = tail(_exp_difference_T_3, 1) @[shit.scala 95:32]
    node exp_difference = mux(_exp_difference_T, _exp_difference_T_2, _exp_difference_T_4) @[shit.scala 92:35]
    node _man_buffer_two_complement_0_T = gt(io.exps[0], io.exps[1]) @[shit.scala 98:28]
    node _man_buffer_two_complement_0_T_1 = dshr(io.sign_man[1], exp_difference) @[shit.scala 101:15]
    node _man_buffer_two_complement_0_T_2 = add(io.sign_man[0], _man_buffer_two_complement_0_T_1) @[shit.scala 99:32]
    node _man_buffer_two_complement_0_T_3 = tail(_man_buffer_two_complement_0_T_2, 1) @[shit.scala 99:32]
    node _man_buffer_two_complement_0_T_4 = asSInt(_man_buffer_two_complement_0_T_3) @[shit.scala 99:32]
    node _man_buffer_two_complement_0_T_5 = dshr(io.sign_man[0], exp_difference) @[shit.scala 104:15]
    node _man_buffer_two_complement_0_T_6 = add(io.sign_man[1], _man_buffer_two_complement_0_T_5) @[shit.scala 102:36]
    node _man_buffer_two_complement_0_T_7 = tail(_man_buffer_two_complement_0_T_6, 1) @[shit.scala 102:36]
    node _man_buffer_two_complement_0_T_8 = asSInt(_man_buffer_two_complement_0_T_7) @[shit.scala 102:36]
    node _man_buffer_two_complement_0_T_9 = mux(_man_buffer_two_complement_0_T, _man_buffer_two_complement_0_T_4, _man_buffer_two_complement_0_T_8) @[shit.scala 97:46]
    man_buffer_two_complement[0] <= _man_buffer_two_complement_0_T_9 @[shit.scala 97:40]
    exponent <= exp_buffer[0] @[shit.scala 141:14]
    sign_mantissa <= man_buffer_two_complement[0] @[shit.scala 142:19]
    reg sign_man_hbfp : UInt<19>, clock with :
      reset => (reset, UInt<19>("h0")) @[shit.scala 147:30]
    node _sign_man_hbfp_T = bits(sign_mantissa, 18, 18) @[shit.scala 151:18]
    node _sign_man_hbfp_T_1 = eq(_sign_man_hbfp_T, UInt<1>("h1")) @[shit.scala 153:14]
    node _sign_man_hbfp_T_2 = bits(sign_mantissa, 17, 0) @[shit.scala 154:28]
    node _sign_man_hbfp_T_3 = cat(UInt<1>("h0"), _sign_man_hbfp_T_2) @[shit.scala 154:11]
    node _sign_man_hbfp_T_4 = not(_sign_man_hbfp_T_3) @[shit.scala 154:5]
    node _sign_man_hbfp_T_5 = add(_sign_man_hbfp_T_4, UInt<1>("h1")) @[shit.scala 157:16]
    node _sign_man_hbfp_T_6 = tail(_sign_man_hbfp_T_5, 1) @[shit.scala 157:16]
    node _sign_man_hbfp_T_7 = asUInt(sign_mantissa) @[shit.scala 158:21]
    node _sign_man_hbfp_T_8 = mux(_sign_man_hbfp_T_1, _sign_man_hbfp_T_6, _sign_man_hbfp_T_7) @[shit.scala 150:23]
    sign_man_hbfp <= _sign_man_hbfp_T_8 @[shit.scala 150:17]
    reg right_shift : UInt<8>, clock with :
      reset => (reset, UInt<8>("h0")) @[shit.scala 161:28]
    reg actual_shift : UInt<8>, clock with :
      reset => (reset, UInt<8>("h0")) @[shit.scala 162:29]
    node _buf_T = bits(sign_man_hbfp, 17, 5) @[shit.scala 164:18]
    node _buf_T_1 = bits(_buf_T, 7, 0) @[Bitwise.scala 114:18]
    node _buf_T_2 = shl(UInt<4>("hf"), 4) @[Bitwise.scala 107:52]
    node _buf_T_3 = xor(UInt<8>("hff"), _buf_T_2) @[Bitwise.scala 107:21]
    node _buf_T_4 = shr(_buf_T_1, 4) @[Bitwise.scala 108:21]
    node _buf_T_5 = and(_buf_T_4, _buf_T_3) @[Bitwise.scala 108:31]
    node _buf_T_6 = bits(_buf_T_1, 3, 0) @[Bitwise.scala 108:46]
    node _buf_T_7 = shl(_buf_T_6, 4) @[Bitwise.scala 108:70]
    node _buf_T_8 = not(_buf_T_3) @[Bitwise.scala 108:82]
    node _buf_T_9 = and(_buf_T_7, _buf_T_8) @[Bitwise.scala 108:80]
    node _buf_T_10 = or(_buf_T_5, _buf_T_9) @[Bitwise.scala 108:39]
    node _buf_T_11 = bits(_buf_T_3, 5, 0) @[Bitwise.scala 107:28]
    node _buf_T_12 = shl(_buf_T_11, 2) @[Bitwise.scala 107:52]
    node _buf_T_13 = xor(_buf_T_3, _buf_T_12) @[Bitwise.scala 107:21]
    node _buf_T_14 = shr(_buf_T_10, 2) @[Bitwise.scala 108:21]
    node _buf_T_15 = and(_buf_T_14, _buf_T_13) @[Bitwise.scala 108:31]
    node _buf_T_16 = bits(_buf_T_10, 5, 0) @[Bitwise.scala 108:46]
    node _buf_T_17 = shl(_buf_T_16, 2) @[Bitwise.scala 108:70]
    node _buf_T_18 = not(_buf_T_13) @[Bitwise.scala 108:82]
    node _buf_T_19 = and(_buf_T_17, _buf_T_18) @[Bitwise.scala 108:80]
    node _buf_T_20 = or(_buf_T_15, _buf_T_19) @[Bitwise.scala 108:39]
    node _buf_T_21 = bits(_buf_T_13, 6, 0) @[Bitwise.scala 107:28]
    node _buf_T_22 = shl(_buf_T_21, 1) @[Bitwise.scala 107:52]
    node _buf_T_23 = xor(_buf_T_13, _buf_T_22) @[Bitwise.scala 107:21]
    node _buf_T_24 = shr(_buf_T_20, 1) @[Bitwise.scala 108:21]
    node _buf_T_25 = and(_buf_T_24, _buf_T_23) @[Bitwise.scala 108:31]
    node _buf_T_26 = bits(_buf_T_20, 6, 0) @[Bitwise.scala 108:46]
    node _buf_T_27 = shl(_buf_T_26, 1) @[Bitwise.scala 108:70]
    node _buf_T_28 = not(_buf_T_23) @[Bitwise.scala 108:82]
    node _buf_T_29 = and(_buf_T_27, _buf_T_28) @[Bitwise.scala 108:80]
    node _buf_T_30 = or(_buf_T_25, _buf_T_29) @[Bitwise.scala 108:39]
    node _buf_T_31 = bits(_buf_T, 12, 8) @[Bitwise.scala 114:47]
    node _buf_T_32 = bits(_buf_T_31, 3, 0) @[Bitwise.scala 114:18]
    node _buf_T_33 = bits(_buf_T_32, 1, 0) @[Bitwise.scala 114:18]
    node _buf_T_34 = bits(_buf_T_33, 0, 0) @[Bitwise.scala 114:18]
    node _buf_T_35 = bits(_buf_T_33, 1, 1) @[Bitwise.scala 114:47]
    node _buf_T_36 = cat(_buf_T_34, _buf_T_35) @[Cat.scala 33:92]
    node _buf_T_37 = bits(_buf_T_32, 3, 2) @[Bitwise.scala 114:47]
    node _buf_T_38 = bits(_buf_T_37, 0, 0) @[Bitwise.scala 114:18]
    node _buf_T_39 = bits(_buf_T_37, 1, 1) @[Bitwise.scala 114:47]
    node _buf_T_40 = cat(_buf_T_38, _buf_T_39) @[Cat.scala 33:92]
    node _buf_T_41 = cat(_buf_T_36, _buf_T_40) @[Cat.scala 33:92]
    node _buf_T_42 = bits(_buf_T_31, 4, 4) @[Bitwise.scala 114:47]
    node _buf_T_43 = cat(_buf_T_41, _buf_T_42) @[Cat.scala 33:92]
    node buf = cat(_buf_T_30, _buf_T_43) @[Cat.scala 33:92]
    node _right_shift_T = bits(buf, 0, 0) @[OneHot.scala 47:45]
    node _right_shift_T_1 = bits(buf, 1, 1) @[OneHot.scala 47:45]
    node _right_shift_T_2 = bits(buf, 2, 2) @[OneHot.scala 47:45]
    node _right_shift_T_3 = bits(buf, 3, 3) @[OneHot.scala 47:45]
    node _right_shift_T_4 = bits(buf, 4, 4) @[OneHot.scala 47:45]
    node _right_shift_T_5 = bits(buf, 5, 5) @[OneHot.scala 47:45]
    node _right_shift_T_6 = bits(buf, 6, 6) @[OneHot.scala 47:45]
    node _right_shift_T_7 = bits(buf, 7, 7) @[OneHot.scala 47:45]
    node _right_shift_T_8 = bits(buf, 8, 8) @[OneHot.scala 47:45]
    node _right_shift_T_9 = bits(buf, 9, 9) @[OneHot.scala 47:45]
    node _right_shift_T_10 = bits(buf, 10, 10) @[OneHot.scala 47:45]
    node _right_shift_T_11 = bits(buf, 11, 11) @[OneHot.scala 47:45]
    node _right_shift_T_12 = bits(buf, 12, 12) @[OneHot.scala 47:45]
    node _right_shift_T_13 = mux(_right_shift_T_11, UInt<4>("hb"), UInt<4>("hc")) @[Mux.scala 47:70]
    node _right_shift_T_14 = mux(_right_shift_T_10, UInt<4>("ha"), _right_shift_T_13) @[Mux.scala 47:70]
    node _right_shift_T_15 = mux(_right_shift_T_9, UInt<4>("h9"), _right_shift_T_14) @[Mux.scala 47:70]
    node _right_shift_T_16 = mux(_right_shift_T_8, UInt<4>("h8"), _right_shift_T_15) @[Mux.scala 47:70]
    node _right_shift_T_17 = mux(_right_shift_T_7, UInt<3>("h7"), _right_shift_T_16) @[Mux.scala 47:70]
    node _right_shift_T_18 = mux(_right_shift_T_6, UInt<3>("h6"), _right_shift_T_17) @[Mux.scala 47:70]
    node _right_shift_T_19 = mux(_right_shift_T_5, UInt<3>("h5"), _right_shift_T_18) @[Mux.scala 47:70]
    node _right_shift_T_20 = mux(_right_shift_T_4, UInt<3>("h4"), _right_shift_T_19) @[Mux.scala 47:70]
    node _right_shift_T_21 = mux(_right_shift_T_3, UInt<2>("h3"), _right_shift_T_20) @[Mux.scala 47:70]
    node _right_shift_T_22 = mux(_right_shift_T_2, UInt<2>("h2"), _right_shift_T_21) @[Mux.scala 47:70]
    node _right_shift_T_23 = mux(_right_shift_T_1, UInt<1>("h1"), _right_shift_T_22) @[Mux.scala 47:70]
    node _right_shift_T_24 = mux(_right_shift_T, UInt<1>("h0"), _right_shift_T_23) @[Mux.scala 47:70]
    right_shift <= _right_shift_T_24 @[shit.scala 167:15]
    node _actual_shift_T = sub(UInt<4>("hc"), right_shift) @[shit.scala 169:73]
    node _actual_shift_T_1 = tail(_actual_shift_T, 1) @[shit.scala 169:73]
    actual_shift <= _actual_shift_T_1 @[shit.scala 169:16]
    node man_out_shifted = dshr(sign_man_hbfp, actual_shift) @[shit.scala 171:39]
    node _io_result_tree_T = bits(sign_man_hbfp, 18, 18) @[shit.scala 173:34]
    node _io_result_tree_T_1 = add(exponent, actual_shift) @[shit.scala 175:18]
    node _io_result_tree_T_2 = tail(_io_result_tree_T_1, 1) @[shit.scala 175:18]
    node _io_result_tree_T_3 = cat(_io_result_tree_T, _io_result_tree_T_2) @[shit.scala 175:5]
    node _io_result_tree_T_4 = bits(man_out_shifted, 4, 0) @[shit.scala 175:52]
    node _io_result_tree_T_5 = cat(_io_result_tree_T_3, _io_result_tree_T_4) @[shit.scala 175:34]
    io.result_tree <= _io_result_tree_T_5 @[shit.scala 173:18]

  module HbfpTensor2 :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip man_a : UInt<5>[16], flip man_b : UInt<5>[16], flip sign_a : UInt<1>[16], flip sign_b : UInt<1>[16], flip exp_a : UInt<8>[2], flip exp_b : UInt<8>[2], result : UInt<14>}

    reg exp_output_0 : UInt<8>, clock with :
      reset => (reset, UInt<8>("h0")) @[shit.scala 17:60]
    reg exp_output_1 : UInt<8>, clock with :
      reset => (reset, UInt<8>("h0")) @[shit.scala 17:60]
    reg acc_0 : SInt<18>, clock with :
      reset => (reset, asSInt(UInt<18>("h0"))) @[shit.scala 22:53]
    reg acc_1 : SInt<18>, clock with :
      reset => (reset, asSInt(UInt<18>("h0"))) @[shit.scala 22:53]
    node _exp_output_0_T = add(io.exp_a[0], io.exp_b[0]) @[shit.scala 25:34]
    node _exp_output_0_T_1 = tail(_exp_output_0_T, 1) @[shit.scala 25:34]
    exp_output_0 <= _exp_output_0_T_1 @[shit.scala 25:19]
    reg dotProductRegs : UInt<10>[8], clock with :
      reset => (UInt<1>("h0"), dotProductRegs) @[shit.scala 26:29]
    reg signs : UInt<1>[8], clock with :
      reset => (UInt<1>("h0"), signs) @[shit.scala 27:20]
    reg two_complement : UInt<11>[8], clock with :
      reset => (UInt<1>("h0"), two_complement) @[shit.scala 28:29]
    reg two_complement_buffer : SInt<11>[8], clock with :
      reset => (UInt<1>("h0"), two_complement_buffer) @[shit.scala 29:36]
    reg multiplierReg : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[shit.scala 31:34]
    reg signReg : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[shit.scala 32:28]
    signReg <= io.sign_a[0] @[shit.scala 33:15]
    multiplierReg <= io.man_a[0] @[shit.scala 34:21]
    node _dotProductRegs_0_T = mul(multiplierReg, io.man_b[0]) @[shit.scala 35:42]
    dotProductRegs[0] <= _dotProductRegs_0_T @[shit.scala 35:25]
    node _signs_0_T = xor(signReg, io.sign_b[0]) @[shit.scala 36:27]
    signs[0] <= _signs_0_T @[shit.scala 36:16]
    node _two_complement_0_T = eq(signs[0], UInt<1>("h1")) @[shit.scala 38:18]
    node _two_complement_0_T_1 = cat(UInt<1>("h0"), dotProductRegs[0]) @[shit.scala 39:16]
    node _two_complement_0_T_2 = not(_two_complement_0_T_1) @[shit.scala 39:10]
    node _two_complement_0_T_3 = add(_two_complement_0_T_2, UInt<1>("h1")) @[shit.scala 39:38]
    node _two_complement_0_T_4 = tail(_two_complement_0_T_3, 1) @[shit.scala 39:38]
    node _two_complement_0_T_5 = cat(UInt<1>("h0"), dotProductRegs[0]) @[shit.scala 40:14]
    node _two_complement_0_T_6 = mux(_two_complement_0_T, _two_complement_0_T_4, _two_complement_0_T_5) @[shit.scala 37:31]
    two_complement[0] <= _two_complement_0_T_6 @[shit.scala 37:25]
    node _two_complement_buffer_0_T = asSInt(two_complement[0]) @[shit.scala 42:53]
    two_complement_buffer[0] <= _two_complement_buffer_0_T @[shit.scala 42:32]
    reg multiplierReg_1 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[shit.scala 31:34]
    reg signReg_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[shit.scala 32:28]
    signReg_1 <= io.sign_a[1] @[shit.scala 33:15]
    multiplierReg_1 <= io.man_a[1] @[shit.scala 34:21]
    node _dotProductRegs_1_T = mul(multiplierReg_1, io.man_b[1]) @[shit.scala 35:42]
    dotProductRegs[1] <= _dotProductRegs_1_T @[shit.scala 35:25]
    node _signs_1_T = xor(signReg_1, io.sign_b[1]) @[shit.scala 36:27]
    signs[1] <= _signs_1_T @[shit.scala 36:16]
    node _two_complement_1_T = eq(signs[1], UInt<1>("h1")) @[shit.scala 38:18]
    node _two_complement_1_T_1 = cat(UInt<1>("h0"), dotProductRegs[1]) @[shit.scala 39:16]
    node _two_complement_1_T_2 = not(_two_complement_1_T_1) @[shit.scala 39:10]
    node _two_complement_1_T_3 = add(_two_complement_1_T_2, UInt<1>("h1")) @[shit.scala 39:38]
    node _two_complement_1_T_4 = tail(_two_complement_1_T_3, 1) @[shit.scala 39:38]
    node _two_complement_1_T_5 = cat(UInt<1>("h0"), dotProductRegs[1]) @[shit.scala 40:14]
    node _two_complement_1_T_6 = mux(_two_complement_1_T, _two_complement_1_T_4, _two_complement_1_T_5) @[shit.scala 37:31]
    two_complement[1] <= _two_complement_1_T_6 @[shit.scala 37:25]
    node _two_complement_buffer_1_T = asSInt(two_complement[1]) @[shit.scala 42:53]
    two_complement_buffer[1] <= _two_complement_buffer_1_T @[shit.scala 42:32]
    reg multiplierReg_2 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[shit.scala 31:34]
    reg signReg_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[shit.scala 32:28]
    signReg_2 <= io.sign_a[2] @[shit.scala 33:15]
    multiplierReg_2 <= io.man_a[2] @[shit.scala 34:21]
    node _dotProductRegs_2_T = mul(multiplierReg_2, io.man_b[2]) @[shit.scala 35:42]
    dotProductRegs[2] <= _dotProductRegs_2_T @[shit.scala 35:25]
    node _signs_2_T = xor(signReg_2, io.sign_b[2]) @[shit.scala 36:27]
    signs[2] <= _signs_2_T @[shit.scala 36:16]
    node _two_complement_2_T = eq(signs[2], UInt<1>("h1")) @[shit.scala 38:18]
    node _two_complement_2_T_1 = cat(UInt<1>("h0"), dotProductRegs[2]) @[shit.scala 39:16]
    node _two_complement_2_T_2 = not(_two_complement_2_T_1) @[shit.scala 39:10]
    node _two_complement_2_T_3 = add(_two_complement_2_T_2, UInt<1>("h1")) @[shit.scala 39:38]
    node _two_complement_2_T_4 = tail(_two_complement_2_T_3, 1) @[shit.scala 39:38]
    node _two_complement_2_T_5 = cat(UInt<1>("h0"), dotProductRegs[2]) @[shit.scala 40:14]
    node _two_complement_2_T_6 = mux(_two_complement_2_T, _two_complement_2_T_4, _two_complement_2_T_5) @[shit.scala 37:31]
    two_complement[2] <= _two_complement_2_T_6 @[shit.scala 37:25]
    node _two_complement_buffer_2_T = asSInt(two_complement[2]) @[shit.scala 42:53]
    two_complement_buffer[2] <= _two_complement_buffer_2_T @[shit.scala 42:32]
    reg multiplierReg_3 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[shit.scala 31:34]
    reg signReg_3 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[shit.scala 32:28]
    signReg_3 <= io.sign_a[3] @[shit.scala 33:15]
    multiplierReg_3 <= io.man_a[3] @[shit.scala 34:21]
    node _dotProductRegs_3_T = mul(multiplierReg_3, io.man_b[3]) @[shit.scala 35:42]
    dotProductRegs[3] <= _dotProductRegs_3_T @[shit.scala 35:25]
    node _signs_3_T = xor(signReg_3, io.sign_b[3]) @[shit.scala 36:27]
    signs[3] <= _signs_3_T @[shit.scala 36:16]
    node _two_complement_3_T = eq(signs[3], UInt<1>("h1")) @[shit.scala 38:18]
    node _two_complement_3_T_1 = cat(UInt<1>("h0"), dotProductRegs[3]) @[shit.scala 39:16]
    node _two_complement_3_T_2 = not(_two_complement_3_T_1) @[shit.scala 39:10]
    node _two_complement_3_T_3 = add(_two_complement_3_T_2, UInt<1>("h1")) @[shit.scala 39:38]
    node _two_complement_3_T_4 = tail(_two_complement_3_T_3, 1) @[shit.scala 39:38]
    node _two_complement_3_T_5 = cat(UInt<1>("h0"), dotProductRegs[3]) @[shit.scala 40:14]
    node _two_complement_3_T_6 = mux(_two_complement_3_T, _two_complement_3_T_4, _two_complement_3_T_5) @[shit.scala 37:31]
    two_complement[3] <= _two_complement_3_T_6 @[shit.scala 37:25]
    node _two_complement_buffer_3_T = asSInt(two_complement[3]) @[shit.scala 42:53]
    two_complement_buffer[3] <= _two_complement_buffer_3_T @[shit.scala 42:32]
    reg multiplierReg_4 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[shit.scala 31:34]
    reg signReg_4 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[shit.scala 32:28]
    signReg_4 <= io.sign_a[4] @[shit.scala 33:15]
    multiplierReg_4 <= io.man_a[4] @[shit.scala 34:21]
    node _dotProductRegs_4_T = mul(multiplierReg_4, io.man_b[4]) @[shit.scala 35:42]
    dotProductRegs[4] <= _dotProductRegs_4_T @[shit.scala 35:25]
    node _signs_4_T = xor(signReg_4, io.sign_b[4]) @[shit.scala 36:27]
    signs[4] <= _signs_4_T @[shit.scala 36:16]
    node _two_complement_4_T = eq(signs[4], UInt<1>("h1")) @[shit.scala 38:18]
    node _two_complement_4_T_1 = cat(UInt<1>("h0"), dotProductRegs[4]) @[shit.scala 39:16]
    node _two_complement_4_T_2 = not(_two_complement_4_T_1) @[shit.scala 39:10]
    node _two_complement_4_T_3 = add(_two_complement_4_T_2, UInt<1>("h1")) @[shit.scala 39:38]
    node _two_complement_4_T_4 = tail(_two_complement_4_T_3, 1) @[shit.scala 39:38]
    node _two_complement_4_T_5 = cat(UInt<1>("h0"), dotProductRegs[4]) @[shit.scala 40:14]
    node _two_complement_4_T_6 = mux(_two_complement_4_T, _two_complement_4_T_4, _two_complement_4_T_5) @[shit.scala 37:31]
    two_complement[4] <= _two_complement_4_T_6 @[shit.scala 37:25]
    node _two_complement_buffer_4_T = asSInt(two_complement[4]) @[shit.scala 42:53]
    two_complement_buffer[4] <= _two_complement_buffer_4_T @[shit.scala 42:32]
    reg multiplierReg_5 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[shit.scala 31:34]
    reg signReg_5 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[shit.scala 32:28]
    signReg_5 <= io.sign_a[5] @[shit.scala 33:15]
    multiplierReg_5 <= io.man_a[5] @[shit.scala 34:21]
    node _dotProductRegs_5_T = mul(multiplierReg_5, io.man_b[5]) @[shit.scala 35:42]
    dotProductRegs[5] <= _dotProductRegs_5_T @[shit.scala 35:25]
    node _signs_5_T = xor(signReg_5, io.sign_b[5]) @[shit.scala 36:27]
    signs[5] <= _signs_5_T @[shit.scala 36:16]
    node _two_complement_5_T = eq(signs[5], UInt<1>("h1")) @[shit.scala 38:18]
    node _two_complement_5_T_1 = cat(UInt<1>("h0"), dotProductRegs[5]) @[shit.scala 39:16]
    node _two_complement_5_T_2 = not(_two_complement_5_T_1) @[shit.scala 39:10]
    node _two_complement_5_T_3 = add(_two_complement_5_T_2, UInt<1>("h1")) @[shit.scala 39:38]
    node _two_complement_5_T_4 = tail(_two_complement_5_T_3, 1) @[shit.scala 39:38]
    node _two_complement_5_T_5 = cat(UInt<1>("h0"), dotProductRegs[5]) @[shit.scala 40:14]
    node _two_complement_5_T_6 = mux(_two_complement_5_T, _two_complement_5_T_4, _two_complement_5_T_5) @[shit.scala 37:31]
    two_complement[5] <= _two_complement_5_T_6 @[shit.scala 37:25]
    node _two_complement_buffer_5_T = asSInt(two_complement[5]) @[shit.scala 42:53]
    two_complement_buffer[5] <= _two_complement_buffer_5_T @[shit.scala 42:32]
    reg multiplierReg_6 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[shit.scala 31:34]
    reg signReg_6 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[shit.scala 32:28]
    signReg_6 <= io.sign_a[6] @[shit.scala 33:15]
    multiplierReg_6 <= io.man_a[6] @[shit.scala 34:21]
    node _dotProductRegs_6_T = mul(multiplierReg_6, io.man_b[6]) @[shit.scala 35:42]
    dotProductRegs[6] <= _dotProductRegs_6_T @[shit.scala 35:25]
    node _signs_6_T = xor(signReg_6, io.sign_b[6]) @[shit.scala 36:27]
    signs[6] <= _signs_6_T @[shit.scala 36:16]
    node _two_complement_6_T = eq(signs[6], UInt<1>("h1")) @[shit.scala 38:18]
    node _two_complement_6_T_1 = cat(UInt<1>("h0"), dotProductRegs[6]) @[shit.scala 39:16]
    node _two_complement_6_T_2 = not(_two_complement_6_T_1) @[shit.scala 39:10]
    node _two_complement_6_T_3 = add(_two_complement_6_T_2, UInt<1>("h1")) @[shit.scala 39:38]
    node _two_complement_6_T_4 = tail(_two_complement_6_T_3, 1) @[shit.scala 39:38]
    node _two_complement_6_T_5 = cat(UInt<1>("h0"), dotProductRegs[6]) @[shit.scala 40:14]
    node _two_complement_6_T_6 = mux(_two_complement_6_T, _two_complement_6_T_4, _two_complement_6_T_5) @[shit.scala 37:31]
    two_complement[6] <= _two_complement_6_T_6 @[shit.scala 37:25]
    node _two_complement_buffer_6_T = asSInt(two_complement[6]) @[shit.scala 42:53]
    two_complement_buffer[6] <= _two_complement_buffer_6_T @[shit.scala 42:32]
    reg multiplierReg_7 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[shit.scala 31:34]
    reg signReg_7 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[shit.scala 32:28]
    signReg_7 <= io.sign_a[7] @[shit.scala 33:15]
    multiplierReg_7 <= io.man_a[7] @[shit.scala 34:21]
    node _dotProductRegs_7_T = mul(multiplierReg_7, io.man_b[7]) @[shit.scala 35:42]
    dotProductRegs[7] <= _dotProductRegs_7_T @[shit.scala 35:25]
    node _signs_7_T = xor(signReg_7, io.sign_b[7]) @[shit.scala 36:27]
    signs[7] <= _signs_7_T @[shit.scala 36:16]
    node _two_complement_7_T = eq(signs[7], UInt<1>("h1")) @[shit.scala 38:18]
    node _two_complement_7_T_1 = cat(UInt<1>("h0"), dotProductRegs[7]) @[shit.scala 39:16]
    node _two_complement_7_T_2 = not(_two_complement_7_T_1) @[shit.scala 39:10]
    node _two_complement_7_T_3 = add(_two_complement_7_T_2, UInt<1>("h1")) @[shit.scala 39:38]
    node _two_complement_7_T_4 = tail(_two_complement_7_T_3, 1) @[shit.scala 39:38]
    node _two_complement_7_T_5 = cat(UInt<1>("h0"), dotProductRegs[7]) @[shit.scala 40:14]
    node _two_complement_7_T_6 = mux(_two_complement_7_T, _two_complement_7_T_4, _two_complement_7_T_5) @[shit.scala 37:31]
    two_complement[7] <= _two_complement_7_T_6 @[shit.scala 37:25]
    node _two_complement_buffer_7_T = asSInt(two_complement[7]) @[shit.scala 42:53]
    two_complement_buffer[7] <= _two_complement_buffer_7_T @[shit.scala 42:32]
    node _acc_0_T = add(two_complement_buffer[0], two_complement_buffer[1]) @[shit.scala 44:46]
    node _acc_0_T_1 = tail(_acc_0_T, 1) @[shit.scala 44:46]
    node _acc_0_T_2 = asSInt(_acc_0_T_1) @[shit.scala 44:46]
    node _acc_0_T_3 = add(_acc_0_T_2, two_complement_buffer[2]) @[shit.scala 44:46]
    node _acc_0_T_4 = tail(_acc_0_T_3, 1) @[shit.scala 44:46]
    node _acc_0_T_5 = asSInt(_acc_0_T_4) @[shit.scala 44:46]
    node _acc_0_T_6 = add(_acc_0_T_5, two_complement_buffer[3]) @[shit.scala 44:46]
    node _acc_0_T_7 = tail(_acc_0_T_6, 1) @[shit.scala 44:46]
    node _acc_0_T_8 = asSInt(_acc_0_T_7) @[shit.scala 44:46]
    node _acc_0_T_9 = add(_acc_0_T_8, two_complement_buffer[4]) @[shit.scala 44:46]
    node _acc_0_T_10 = tail(_acc_0_T_9, 1) @[shit.scala 44:46]
    node _acc_0_T_11 = asSInt(_acc_0_T_10) @[shit.scala 44:46]
    node _acc_0_T_12 = add(_acc_0_T_11, two_complement_buffer[5]) @[shit.scala 44:46]
    node _acc_0_T_13 = tail(_acc_0_T_12, 1) @[shit.scala 44:46]
    node _acc_0_T_14 = asSInt(_acc_0_T_13) @[shit.scala 44:46]
    node _acc_0_T_15 = add(_acc_0_T_14, two_complement_buffer[6]) @[shit.scala 44:46]
    node _acc_0_T_16 = tail(_acc_0_T_15, 1) @[shit.scala 44:46]
    node _acc_0_T_17 = asSInt(_acc_0_T_16) @[shit.scala 44:46]
    node _acc_0_T_18 = add(_acc_0_T_17, two_complement_buffer[7]) @[shit.scala 44:46]
    node _acc_0_T_19 = tail(_acc_0_T_18, 1) @[shit.scala 44:46]
    node _acc_0_T_20 = asSInt(_acc_0_T_19) @[shit.scala 44:46]
    acc_0 <= _acc_0_T_20 @[shit.scala 44:12]
    node _exp_output_1_T = add(io.exp_a[1], io.exp_b[1]) @[shit.scala 25:34]
    node _exp_output_1_T_1 = tail(_exp_output_1_T, 1) @[shit.scala 25:34]
    exp_output_1 <= _exp_output_1_T_1 @[shit.scala 25:19]
    reg dotProductRegs_1 : UInt<10>[8], clock with :
      reset => (UInt<1>("h0"), dotProductRegs_1) @[shit.scala 26:29]
    reg signs_1 : UInt<1>[8], clock with :
      reset => (UInt<1>("h0"), signs_1) @[shit.scala 27:20]
    reg two_complement_1 : UInt<11>[8], clock with :
      reset => (UInt<1>("h0"), two_complement_1) @[shit.scala 28:29]
    reg two_complement_buffer_1 : SInt<11>[8], clock with :
      reset => (UInt<1>("h0"), two_complement_buffer_1) @[shit.scala 29:36]
    reg multiplierReg_8 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[shit.scala 31:34]
    reg signReg_8 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[shit.scala 32:28]
    signReg_8 <= io.sign_a[8] @[shit.scala 33:15]
    multiplierReg_8 <= io.man_a[8] @[shit.scala 34:21]
    node _dotProductRegs_0_T_1 = mul(multiplierReg_8, io.man_b[8]) @[shit.scala 35:42]
    dotProductRegs_1[0] <= _dotProductRegs_0_T_1 @[shit.scala 35:25]
    node _signs_0_T_1 = xor(signReg_8, io.sign_b[8]) @[shit.scala 36:27]
    signs_1[0] <= _signs_0_T_1 @[shit.scala 36:16]
    node _two_complement_0_T_7 = eq(signs_1[0], UInt<1>("h1")) @[shit.scala 38:18]
    node _two_complement_0_T_8 = cat(UInt<1>("h0"), dotProductRegs_1[0]) @[shit.scala 39:16]
    node _two_complement_0_T_9 = not(_two_complement_0_T_8) @[shit.scala 39:10]
    node _two_complement_0_T_10 = add(_two_complement_0_T_9, UInt<1>("h1")) @[shit.scala 39:38]
    node _two_complement_0_T_11 = tail(_two_complement_0_T_10, 1) @[shit.scala 39:38]
    node _two_complement_0_T_12 = cat(UInt<1>("h0"), dotProductRegs_1[0]) @[shit.scala 40:14]
    node _two_complement_0_T_13 = mux(_two_complement_0_T_7, _two_complement_0_T_11, _two_complement_0_T_12) @[shit.scala 37:31]
    two_complement_1[0] <= _two_complement_0_T_13 @[shit.scala 37:25]
    node _two_complement_buffer_0_T_1 = asSInt(two_complement_1[0]) @[shit.scala 42:53]
    two_complement_buffer_1[0] <= _two_complement_buffer_0_T_1 @[shit.scala 42:32]
    reg multiplierReg_9 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[shit.scala 31:34]
    reg signReg_9 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[shit.scala 32:28]
    signReg_9 <= io.sign_a[9] @[shit.scala 33:15]
    multiplierReg_9 <= io.man_a[9] @[shit.scala 34:21]
    node _dotProductRegs_1_T_1 = mul(multiplierReg_9, io.man_b[9]) @[shit.scala 35:42]
    dotProductRegs_1[1] <= _dotProductRegs_1_T_1 @[shit.scala 35:25]
    node _signs_1_T_1 = xor(signReg_9, io.sign_b[9]) @[shit.scala 36:27]
    signs_1[1] <= _signs_1_T_1 @[shit.scala 36:16]
    node _two_complement_1_T_7 = eq(signs_1[1], UInt<1>("h1")) @[shit.scala 38:18]
    node _two_complement_1_T_8 = cat(UInt<1>("h0"), dotProductRegs_1[1]) @[shit.scala 39:16]
    node _two_complement_1_T_9 = not(_two_complement_1_T_8) @[shit.scala 39:10]
    node _two_complement_1_T_10 = add(_two_complement_1_T_9, UInt<1>("h1")) @[shit.scala 39:38]
    node _two_complement_1_T_11 = tail(_two_complement_1_T_10, 1) @[shit.scala 39:38]
    node _two_complement_1_T_12 = cat(UInt<1>("h0"), dotProductRegs_1[1]) @[shit.scala 40:14]
    node _two_complement_1_T_13 = mux(_two_complement_1_T_7, _two_complement_1_T_11, _two_complement_1_T_12) @[shit.scala 37:31]
    two_complement_1[1] <= _two_complement_1_T_13 @[shit.scala 37:25]
    node _two_complement_buffer_1_T_1 = asSInt(two_complement_1[1]) @[shit.scala 42:53]
    two_complement_buffer_1[1] <= _two_complement_buffer_1_T_1 @[shit.scala 42:32]
    reg multiplierReg_10 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[shit.scala 31:34]
    reg signReg_10 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[shit.scala 32:28]
    signReg_10 <= io.sign_a[10] @[shit.scala 33:15]
    multiplierReg_10 <= io.man_a[10] @[shit.scala 34:21]
    node _dotProductRegs_2_T_1 = mul(multiplierReg_10, io.man_b[10]) @[shit.scala 35:42]
    dotProductRegs_1[2] <= _dotProductRegs_2_T_1 @[shit.scala 35:25]
    node _signs_2_T_1 = xor(signReg_10, io.sign_b[10]) @[shit.scala 36:27]
    signs_1[2] <= _signs_2_T_1 @[shit.scala 36:16]
    node _two_complement_2_T_7 = eq(signs_1[2], UInt<1>("h1")) @[shit.scala 38:18]
    node _two_complement_2_T_8 = cat(UInt<1>("h0"), dotProductRegs_1[2]) @[shit.scala 39:16]
    node _two_complement_2_T_9 = not(_two_complement_2_T_8) @[shit.scala 39:10]
    node _two_complement_2_T_10 = add(_two_complement_2_T_9, UInt<1>("h1")) @[shit.scala 39:38]
    node _two_complement_2_T_11 = tail(_two_complement_2_T_10, 1) @[shit.scala 39:38]
    node _two_complement_2_T_12 = cat(UInt<1>("h0"), dotProductRegs_1[2]) @[shit.scala 40:14]
    node _two_complement_2_T_13 = mux(_two_complement_2_T_7, _two_complement_2_T_11, _two_complement_2_T_12) @[shit.scala 37:31]
    two_complement_1[2] <= _two_complement_2_T_13 @[shit.scala 37:25]
    node _two_complement_buffer_2_T_1 = asSInt(two_complement_1[2]) @[shit.scala 42:53]
    two_complement_buffer_1[2] <= _two_complement_buffer_2_T_1 @[shit.scala 42:32]
    reg multiplierReg_11 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[shit.scala 31:34]
    reg signReg_11 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[shit.scala 32:28]
    signReg_11 <= io.sign_a[11] @[shit.scala 33:15]
    multiplierReg_11 <= io.man_a[11] @[shit.scala 34:21]
    node _dotProductRegs_3_T_1 = mul(multiplierReg_11, io.man_b[11]) @[shit.scala 35:42]
    dotProductRegs_1[3] <= _dotProductRegs_3_T_1 @[shit.scala 35:25]
    node _signs_3_T_1 = xor(signReg_11, io.sign_b[11]) @[shit.scala 36:27]
    signs_1[3] <= _signs_3_T_1 @[shit.scala 36:16]
    node _two_complement_3_T_7 = eq(signs_1[3], UInt<1>("h1")) @[shit.scala 38:18]
    node _two_complement_3_T_8 = cat(UInt<1>("h0"), dotProductRegs_1[3]) @[shit.scala 39:16]
    node _two_complement_3_T_9 = not(_two_complement_3_T_8) @[shit.scala 39:10]
    node _two_complement_3_T_10 = add(_two_complement_3_T_9, UInt<1>("h1")) @[shit.scala 39:38]
    node _two_complement_3_T_11 = tail(_two_complement_3_T_10, 1) @[shit.scala 39:38]
    node _two_complement_3_T_12 = cat(UInt<1>("h0"), dotProductRegs_1[3]) @[shit.scala 40:14]
    node _two_complement_3_T_13 = mux(_two_complement_3_T_7, _two_complement_3_T_11, _two_complement_3_T_12) @[shit.scala 37:31]
    two_complement_1[3] <= _two_complement_3_T_13 @[shit.scala 37:25]
    node _two_complement_buffer_3_T_1 = asSInt(two_complement_1[3]) @[shit.scala 42:53]
    two_complement_buffer_1[3] <= _two_complement_buffer_3_T_1 @[shit.scala 42:32]
    reg multiplierReg_12 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[shit.scala 31:34]
    reg signReg_12 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[shit.scala 32:28]
    signReg_12 <= io.sign_a[12] @[shit.scala 33:15]
    multiplierReg_12 <= io.man_a[12] @[shit.scala 34:21]
    node _dotProductRegs_4_T_1 = mul(multiplierReg_12, io.man_b[12]) @[shit.scala 35:42]
    dotProductRegs_1[4] <= _dotProductRegs_4_T_1 @[shit.scala 35:25]
    node _signs_4_T_1 = xor(signReg_12, io.sign_b[12]) @[shit.scala 36:27]
    signs_1[4] <= _signs_4_T_1 @[shit.scala 36:16]
    node _two_complement_4_T_7 = eq(signs_1[4], UInt<1>("h1")) @[shit.scala 38:18]
    node _two_complement_4_T_8 = cat(UInt<1>("h0"), dotProductRegs_1[4]) @[shit.scala 39:16]
    node _two_complement_4_T_9 = not(_two_complement_4_T_8) @[shit.scala 39:10]
    node _two_complement_4_T_10 = add(_two_complement_4_T_9, UInt<1>("h1")) @[shit.scala 39:38]
    node _two_complement_4_T_11 = tail(_two_complement_4_T_10, 1) @[shit.scala 39:38]
    node _two_complement_4_T_12 = cat(UInt<1>("h0"), dotProductRegs_1[4]) @[shit.scala 40:14]
    node _two_complement_4_T_13 = mux(_two_complement_4_T_7, _two_complement_4_T_11, _two_complement_4_T_12) @[shit.scala 37:31]
    two_complement_1[4] <= _two_complement_4_T_13 @[shit.scala 37:25]
    node _two_complement_buffer_4_T_1 = asSInt(two_complement_1[4]) @[shit.scala 42:53]
    two_complement_buffer_1[4] <= _two_complement_buffer_4_T_1 @[shit.scala 42:32]
    reg multiplierReg_13 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[shit.scala 31:34]
    reg signReg_13 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[shit.scala 32:28]
    signReg_13 <= io.sign_a[13] @[shit.scala 33:15]
    multiplierReg_13 <= io.man_a[13] @[shit.scala 34:21]
    node _dotProductRegs_5_T_1 = mul(multiplierReg_13, io.man_b[13]) @[shit.scala 35:42]
    dotProductRegs_1[5] <= _dotProductRegs_5_T_1 @[shit.scala 35:25]
    node _signs_5_T_1 = xor(signReg_13, io.sign_b[13]) @[shit.scala 36:27]
    signs_1[5] <= _signs_5_T_1 @[shit.scala 36:16]
    node _two_complement_5_T_7 = eq(signs_1[5], UInt<1>("h1")) @[shit.scala 38:18]
    node _two_complement_5_T_8 = cat(UInt<1>("h0"), dotProductRegs_1[5]) @[shit.scala 39:16]
    node _two_complement_5_T_9 = not(_two_complement_5_T_8) @[shit.scala 39:10]
    node _two_complement_5_T_10 = add(_two_complement_5_T_9, UInt<1>("h1")) @[shit.scala 39:38]
    node _two_complement_5_T_11 = tail(_two_complement_5_T_10, 1) @[shit.scala 39:38]
    node _two_complement_5_T_12 = cat(UInt<1>("h0"), dotProductRegs_1[5]) @[shit.scala 40:14]
    node _two_complement_5_T_13 = mux(_two_complement_5_T_7, _two_complement_5_T_11, _two_complement_5_T_12) @[shit.scala 37:31]
    two_complement_1[5] <= _two_complement_5_T_13 @[shit.scala 37:25]
    node _two_complement_buffer_5_T_1 = asSInt(two_complement_1[5]) @[shit.scala 42:53]
    two_complement_buffer_1[5] <= _two_complement_buffer_5_T_1 @[shit.scala 42:32]
    reg multiplierReg_14 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[shit.scala 31:34]
    reg signReg_14 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[shit.scala 32:28]
    signReg_14 <= io.sign_a[14] @[shit.scala 33:15]
    multiplierReg_14 <= io.man_a[14] @[shit.scala 34:21]
    node _dotProductRegs_6_T_1 = mul(multiplierReg_14, io.man_b[14]) @[shit.scala 35:42]
    dotProductRegs_1[6] <= _dotProductRegs_6_T_1 @[shit.scala 35:25]
    node _signs_6_T_1 = xor(signReg_14, io.sign_b[14]) @[shit.scala 36:27]
    signs_1[6] <= _signs_6_T_1 @[shit.scala 36:16]
    node _two_complement_6_T_7 = eq(signs_1[6], UInt<1>("h1")) @[shit.scala 38:18]
    node _two_complement_6_T_8 = cat(UInt<1>("h0"), dotProductRegs_1[6]) @[shit.scala 39:16]
    node _two_complement_6_T_9 = not(_two_complement_6_T_8) @[shit.scala 39:10]
    node _two_complement_6_T_10 = add(_two_complement_6_T_9, UInt<1>("h1")) @[shit.scala 39:38]
    node _two_complement_6_T_11 = tail(_two_complement_6_T_10, 1) @[shit.scala 39:38]
    node _two_complement_6_T_12 = cat(UInt<1>("h0"), dotProductRegs_1[6]) @[shit.scala 40:14]
    node _two_complement_6_T_13 = mux(_two_complement_6_T_7, _two_complement_6_T_11, _two_complement_6_T_12) @[shit.scala 37:31]
    two_complement_1[6] <= _two_complement_6_T_13 @[shit.scala 37:25]
    node _two_complement_buffer_6_T_1 = asSInt(two_complement_1[6]) @[shit.scala 42:53]
    two_complement_buffer_1[6] <= _two_complement_buffer_6_T_1 @[shit.scala 42:32]
    reg multiplierReg_15 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[shit.scala 31:34]
    reg signReg_15 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[shit.scala 32:28]
    signReg_15 <= io.sign_a[15] @[shit.scala 33:15]
    multiplierReg_15 <= io.man_a[15] @[shit.scala 34:21]
    node _dotProductRegs_7_T_1 = mul(multiplierReg_15, io.man_b[15]) @[shit.scala 35:42]
    dotProductRegs_1[7] <= _dotProductRegs_7_T_1 @[shit.scala 35:25]
    node _signs_7_T_1 = xor(signReg_15, io.sign_b[15]) @[shit.scala 36:27]
    signs_1[7] <= _signs_7_T_1 @[shit.scala 36:16]
    node _two_complement_7_T_7 = eq(signs_1[7], UInt<1>("h1")) @[shit.scala 38:18]
    node _two_complement_7_T_8 = cat(UInt<1>("h0"), dotProductRegs_1[7]) @[shit.scala 39:16]
    node _two_complement_7_T_9 = not(_two_complement_7_T_8) @[shit.scala 39:10]
    node _two_complement_7_T_10 = add(_two_complement_7_T_9, UInt<1>("h1")) @[shit.scala 39:38]
    node _two_complement_7_T_11 = tail(_two_complement_7_T_10, 1) @[shit.scala 39:38]
    node _two_complement_7_T_12 = cat(UInt<1>("h0"), dotProductRegs_1[7]) @[shit.scala 40:14]
    node _two_complement_7_T_13 = mux(_two_complement_7_T_7, _two_complement_7_T_11, _two_complement_7_T_12) @[shit.scala 37:31]
    two_complement_1[7] <= _two_complement_7_T_13 @[shit.scala 37:25]
    node _two_complement_buffer_7_T_1 = asSInt(two_complement_1[7]) @[shit.scala 42:53]
    two_complement_buffer_1[7] <= _two_complement_buffer_7_T_1 @[shit.scala 42:32]
    node _acc_1_T = add(two_complement_buffer_1[0], two_complement_buffer_1[1]) @[shit.scala 44:46]
    node _acc_1_T_1 = tail(_acc_1_T, 1) @[shit.scala 44:46]
    node _acc_1_T_2 = asSInt(_acc_1_T_1) @[shit.scala 44:46]
    node _acc_1_T_3 = add(_acc_1_T_2, two_complement_buffer_1[2]) @[shit.scala 44:46]
    node _acc_1_T_4 = tail(_acc_1_T_3, 1) @[shit.scala 44:46]
    node _acc_1_T_5 = asSInt(_acc_1_T_4) @[shit.scala 44:46]
    node _acc_1_T_6 = add(_acc_1_T_5, two_complement_buffer_1[3]) @[shit.scala 44:46]
    node _acc_1_T_7 = tail(_acc_1_T_6, 1) @[shit.scala 44:46]
    node _acc_1_T_8 = asSInt(_acc_1_T_7) @[shit.scala 44:46]
    node _acc_1_T_9 = add(_acc_1_T_8, two_complement_buffer_1[4]) @[shit.scala 44:46]
    node _acc_1_T_10 = tail(_acc_1_T_9, 1) @[shit.scala 44:46]
    node _acc_1_T_11 = asSInt(_acc_1_T_10) @[shit.scala 44:46]
    node _acc_1_T_12 = add(_acc_1_T_11, two_complement_buffer_1[5]) @[shit.scala 44:46]
    node _acc_1_T_13 = tail(_acc_1_T_12, 1) @[shit.scala 44:46]
    node _acc_1_T_14 = asSInt(_acc_1_T_13) @[shit.scala 44:46]
    node _acc_1_T_15 = add(_acc_1_T_14, two_complement_buffer_1[6]) @[shit.scala 44:46]
    node _acc_1_T_16 = tail(_acc_1_T_15, 1) @[shit.scala 44:46]
    node _acc_1_T_17 = asSInt(_acc_1_T_16) @[shit.scala 44:46]
    node _acc_1_T_18 = add(_acc_1_T_17, two_complement_buffer_1[7]) @[shit.scala 44:46]
    node _acc_1_T_19 = tail(_acc_1_T_18, 1) @[shit.scala 44:46]
    node _acc_1_T_20 = asSInt(_acc_1_T_19) @[shit.scala 44:46]
    acc_1 <= _acc_1_T_20 @[shit.scala 44:12]
    inst adderTreeInst of adderTree3 @[shit.scala 47:29]
    adderTreeInst.clock <= clock
    adderTreeInst.reset <= reset
    wire _WIRE : SInt<18>[2] @[shit.scala 48:39]
    _WIRE[0] <= acc_0 @[shit.scala 48:39]
    _WIRE[1] <= acc_1 @[shit.scala 48:39]
    adderTreeInst.io.sign_man <= _WIRE @[shit.scala 48:29]
    wire _WIRE_1 : UInt<8>[2] @[shit.scala 49:35]
    _WIRE_1[0] <= exp_output_0 @[shit.scala 49:35]
    _WIRE_1[1] <= exp_output_1 @[shit.scala 49:35]
    adderTreeInst.io.exps <= _WIRE_1 @[shit.scala 49:25]
    io.result <= adderTreeInst.io.result_tree @[shit.scala 50:13]

