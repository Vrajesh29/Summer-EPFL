circuit Hbfp :
  module Hbfp :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip man_a : UInt<5>[16], flip man_b : UInt<5>[16], flip sign_a : UInt<1>[16], flip sign_b : UInt<1>[16], flip exp_a : UInt<8>, flip exp_b : UInt<8>, result : UInt<14>}

    wire exp_output : UInt<9> @[hbfp.scala 261:24]
    node _exp_output_T = add(io.exp_a, io.exp_b) @[hbfp.scala 262:23]
    exp_output <= _exp_output_T @[hbfp.scala 262:14]
    reg dotProductRegs_0 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[hbfp.scala 264:51]
    reg dotProductRegs_1 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[hbfp.scala 264:51]
    reg dotProductRegs_2 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[hbfp.scala 264:51]
    reg dotProductRegs_3 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[hbfp.scala 264:51]
    reg dotProductRegs_4 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[hbfp.scala 264:51]
    reg dotProductRegs_5 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[hbfp.scala 264:51]
    reg dotProductRegs_6 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[hbfp.scala 264:51]
    reg dotProductRegs_7 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[hbfp.scala 264:51]
    reg dotProductRegs_8 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[hbfp.scala 264:51]
    reg dotProductRegs_9 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[hbfp.scala 264:51]
    reg dotProductRegs_10 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[hbfp.scala 264:51]
    reg dotProductRegs_11 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[hbfp.scala 264:51]
    reg dotProductRegs_12 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[hbfp.scala 264:51]
    reg dotProductRegs_13 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[hbfp.scala 264:51]
    reg dotProductRegs_14 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[hbfp.scala 264:51]
    reg dotProductRegs_15 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[hbfp.scala 264:51]
    reg two_complement_buffer_0 : SInt<6>, clock with :
      reset => (reset, asSInt(UInt<6>("h0"))) @[hbfp.scala 265:58]
    reg two_complement_buffer_1 : SInt<6>, clock with :
      reset => (reset, asSInt(UInt<6>("h0"))) @[hbfp.scala 265:58]
    reg two_complement_buffer_2 : SInt<6>, clock with :
      reset => (reset, asSInt(UInt<6>("h0"))) @[hbfp.scala 265:58]
    reg two_complement_buffer_3 : SInt<6>, clock with :
      reset => (reset, asSInt(UInt<6>("h0"))) @[hbfp.scala 265:58]
    reg two_complement_buffer_4 : SInt<6>, clock with :
      reset => (reset, asSInt(UInt<6>("h0"))) @[hbfp.scala 265:58]
    reg two_complement_buffer_5 : SInt<6>, clock with :
      reset => (reset, asSInt(UInt<6>("h0"))) @[hbfp.scala 265:58]
    reg two_complement_buffer_6 : SInt<6>, clock with :
      reset => (reset, asSInt(UInt<6>("h0"))) @[hbfp.scala 265:58]
    reg two_complement_buffer_7 : SInt<6>, clock with :
      reset => (reset, asSInt(UInt<6>("h0"))) @[hbfp.scala 265:58]
    reg two_complement_buffer_8 : SInt<6>, clock with :
      reset => (reset, asSInt(UInt<6>("h0"))) @[hbfp.scala 265:58]
    reg two_complement_buffer_9 : SInt<6>, clock with :
      reset => (reset, asSInt(UInt<6>("h0"))) @[hbfp.scala 265:58]
    reg two_complement_buffer_10 : SInt<6>, clock with :
      reset => (reset, asSInt(UInt<6>("h0"))) @[hbfp.scala 265:58]
    reg two_complement_buffer_11 : SInt<6>, clock with :
      reset => (reset, asSInt(UInt<6>("h0"))) @[hbfp.scala 265:58]
    reg two_complement_buffer_12 : SInt<6>, clock with :
      reset => (reset, asSInt(UInt<6>("h0"))) @[hbfp.scala 265:58]
    reg two_complement_buffer_13 : SInt<6>, clock with :
      reset => (reset, asSInt(UInt<6>("h0"))) @[hbfp.scala 265:58]
    reg two_complement_buffer_14 : SInt<6>, clock with :
      reset => (reset, asSInt(UInt<6>("h0"))) @[hbfp.scala 265:58]
    reg two_complement_buffer_15 : SInt<6>, clock with :
      reset => (reset, asSInt(UInt<6>("h0"))) @[hbfp.scala 265:58]
    reg two_complement_0 : UInt<6>, clock with :
      reset => (reset, UInt<6>("h0")) @[hbfp.scala 266:51]
    reg two_complement_1 : UInt<6>, clock with :
      reset => (reset, UInt<6>("h0")) @[hbfp.scala 266:51]
    reg two_complement_2 : UInt<6>, clock with :
      reset => (reset, UInt<6>("h0")) @[hbfp.scala 266:51]
    reg two_complement_3 : UInt<6>, clock with :
      reset => (reset, UInt<6>("h0")) @[hbfp.scala 266:51]
    reg two_complement_4 : UInt<6>, clock with :
      reset => (reset, UInt<6>("h0")) @[hbfp.scala 266:51]
    reg two_complement_5 : UInt<6>, clock with :
      reset => (reset, UInt<6>("h0")) @[hbfp.scala 266:51]
    reg two_complement_6 : UInt<6>, clock with :
      reset => (reset, UInt<6>("h0")) @[hbfp.scala 266:51]
    reg two_complement_7 : UInt<6>, clock with :
      reset => (reset, UInt<6>("h0")) @[hbfp.scala 266:51]
    reg two_complement_8 : UInt<6>, clock with :
      reset => (reset, UInt<6>("h0")) @[hbfp.scala 266:51]
    reg two_complement_9 : UInt<6>, clock with :
      reset => (reset, UInt<6>("h0")) @[hbfp.scala 266:51]
    reg two_complement_10 : UInt<6>, clock with :
      reset => (reset, UInt<6>("h0")) @[hbfp.scala 266:51]
    reg two_complement_11 : UInt<6>, clock with :
      reset => (reset, UInt<6>("h0")) @[hbfp.scala 266:51]
    reg two_complement_12 : UInt<6>, clock with :
      reset => (reset, UInt<6>("h0")) @[hbfp.scala 266:51]
    reg two_complement_13 : UInt<6>, clock with :
      reset => (reset, UInt<6>("h0")) @[hbfp.scala 266:51]
    reg two_complement_14 : UInt<6>, clock with :
      reset => (reset, UInt<6>("h0")) @[hbfp.scala 266:51]
    reg two_complement_15 : UInt<6>, clock with :
      reset => (reset, UInt<6>("h0")) @[hbfp.scala 266:51]
    reg signs_0 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[hbfp.scala 267:42]
    reg signs_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[hbfp.scala 267:42]
    reg signs_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[hbfp.scala 267:42]
    reg signs_3 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[hbfp.scala 267:42]
    reg signs_4 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[hbfp.scala 267:42]
    reg signs_5 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[hbfp.scala 267:42]
    reg signs_6 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[hbfp.scala 267:42]
    reg signs_7 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[hbfp.scala 267:42]
    reg signs_8 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[hbfp.scala 267:42]
    reg signs_9 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[hbfp.scala 267:42]
    reg signs_10 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[hbfp.scala 267:42]
    reg signs_11 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[hbfp.scala 267:42]
    reg signs_12 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[hbfp.scala 267:42]
    reg signs_13 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[hbfp.scala 267:42]
    reg signs_14 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[hbfp.scala 267:42]
    reg signs_15 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[hbfp.scala 267:42]
    reg acc : UInt<6>, clock with :
      reset => (reset, UInt<6>("h0")) @[hbfp.scala 268:20]
    reg acc_hbfp : UInt<6>, clock with :
      reset => (reset, UInt<6>("h0")) @[hbfp.scala 269:25]
    reg acc_buf : UInt<6>, clock with :
      reset => (reset, UInt<6>("h0")) @[hbfp.scala 270:24]
    reg multiplierReg : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[hbfp.scala 274:32]
    reg signReg : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[hbfp.scala 275:26]
    signReg <= io.sign_a[0] @[hbfp.scala 276:13]
    multiplierReg <= io.man_a[0] @[hbfp.scala 277:19]
    node multiplication = mul(multiplierReg, io.man_b[0]) @[hbfp.scala 278:41]
    node _dotProductRegs_0_T = sub(UInt<6>("h20"), UInt<1>("h1")) @[hbfp.scala 279:58]
    node _dotProductRegs_0_T_1 = tail(_dotProductRegs_0_T, 1) @[hbfp.scala 279:58]
    node _dotProductRegs_0_T_2 = gt(multiplication, _dotProductRegs_0_T_1) @[hbfp.scala 279:45]
    node _dotProductRegs_0_T_3 = sub(UInt<6>("h20"), UInt<1>("h1")) @[hbfp.scala 279:76]
    node _dotProductRegs_0_T_4 = tail(_dotProductRegs_0_T_3, 1) @[hbfp.scala 279:76]
    node _dotProductRegs_0_T_5 = mux(_dotProductRegs_0_T_2, _dotProductRegs_0_T_4, multiplication) @[hbfp.scala 279:29]
    dotProductRegs_0 <= _dotProductRegs_0_T_5 @[hbfp.scala 279:23]
    node _signs_0_T = xor(signReg, io.sign_b[0]) @[hbfp.scala 280:25]
    signs_0 <= _signs_0_T @[hbfp.scala 280:14]
    node _two_complement_0_T = eq(signs_0, UInt<1>("h1")) @[hbfp.scala 281:38]
    node _two_complement_0_T_1 = cat(UInt<1>("h0"), dotProductRegs_0) @[hbfp.scala 281:53]
    node _two_complement_0_T_2 = not(_two_complement_0_T_1) @[hbfp.scala 281:47]
    node _two_complement_0_T_3 = add(_two_complement_0_T_2, UInt<1>("h1")) @[hbfp.scala 281:75]
    node _two_complement_0_T_4 = tail(_two_complement_0_T_3, 1) @[hbfp.scala 281:75]
    node _two_complement_0_T_5 = cat(UInt<1>("h0"), dotProductRegs_0) @[hbfp.scala 281:88]
    node _two_complement_0_T_6 = mux(_two_complement_0_T, _two_complement_0_T_4, _two_complement_0_T_5) @[hbfp.scala 281:29]
    two_complement_0 <= _two_complement_0_T_6 @[hbfp.scala 281:23]
    node _two_complement_buffer_0_T = asSInt(two_complement_0) @[hbfp.scala 282:51]
    two_complement_buffer_0 <= _two_complement_buffer_0_T @[hbfp.scala 282:30]
    reg multiplierReg_1 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[hbfp.scala 274:32]
    reg signReg_1 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[hbfp.scala 275:26]
    signReg_1 <= io.sign_a[1] @[hbfp.scala 276:13]
    multiplierReg_1 <= io.man_a[1] @[hbfp.scala 277:19]
    node multiplication_1 = mul(multiplierReg_1, io.man_b[1]) @[hbfp.scala 278:41]
    node _dotProductRegs_1_T = sub(UInt<6>("h20"), UInt<1>("h1")) @[hbfp.scala 279:58]
    node _dotProductRegs_1_T_1 = tail(_dotProductRegs_1_T, 1) @[hbfp.scala 279:58]
    node _dotProductRegs_1_T_2 = gt(multiplication_1, _dotProductRegs_1_T_1) @[hbfp.scala 279:45]
    node _dotProductRegs_1_T_3 = sub(UInt<6>("h20"), UInt<1>("h1")) @[hbfp.scala 279:76]
    node _dotProductRegs_1_T_4 = tail(_dotProductRegs_1_T_3, 1) @[hbfp.scala 279:76]
    node _dotProductRegs_1_T_5 = mux(_dotProductRegs_1_T_2, _dotProductRegs_1_T_4, multiplication_1) @[hbfp.scala 279:29]
    dotProductRegs_1 <= _dotProductRegs_1_T_5 @[hbfp.scala 279:23]
    node _signs_1_T = xor(signReg_1, io.sign_b[1]) @[hbfp.scala 280:25]
    signs_1 <= _signs_1_T @[hbfp.scala 280:14]
    node _two_complement_1_T = eq(signs_1, UInt<1>("h1")) @[hbfp.scala 281:38]
    node _two_complement_1_T_1 = cat(UInt<1>("h0"), dotProductRegs_1) @[hbfp.scala 281:53]
    node _two_complement_1_T_2 = not(_two_complement_1_T_1) @[hbfp.scala 281:47]
    node _two_complement_1_T_3 = add(_two_complement_1_T_2, UInt<1>("h1")) @[hbfp.scala 281:75]
    node _two_complement_1_T_4 = tail(_two_complement_1_T_3, 1) @[hbfp.scala 281:75]
    node _two_complement_1_T_5 = cat(UInt<1>("h0"), dotProductRegs_1) @[hbfp.scala 281:88]
    node _two_complement_1_T_6 = mux(_two_complement_1_T, _two_complement_1_T_4, _two_complement_1_T_5) @[hbfp.scala 281:29]
    two_complement_1 <= _two_complement_1_T_6 @[hbfp.scala 281:23]
    node _two_complement_buffer_1_T = asSInt(two_complement_1) @[hbfp.scala 282:51]
    two_complement_buffer_1 <= _two_complement_buffer_1_T @[hbfp.scala 282:30]
    reg multiplierReg_2 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[hbfp.scala 274:32]
    reg signReg_2 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[hbfp.scala 275:26]
    signReg_2 <= io.sign_a[2] @[hbfp.scala 276:13]
    multiplierReg_2 <= io.man_a[2] @[hbfp.scala 277:19]
    node multiplication_2 = mul(multiplierReg_2, io.man_b[2]) @[hbfp.scala 278:41]
    node _dotProductRegs_2_T = sub(UInt<6>("h20"), UInt<1>("h1")) @[hbfp.scala 279:58]
    node _dotProductRegs_2_T_1 = tail(_dotProductRegs_2_T, 1) @[hbfp.scala 279:58]
    node _dotProductRegs_2_T_2 = gt(multiplication_2, _dotProductRegs_2_T_1) @[hbfp.scala 279:45]
    node _dotProductRegs_2_T_3 = sub(UInt<6>("h20"), UInt<1>("h1")) @[hbfp.scala 279:76]
    node _dotProductRegs_2_T_4 = tail(_dotProductRegs_2_T_3, 1) @[hbfp.scala 279:76]
    node _dotProductRegs_2_T_5 = mux(_dotProductRegs_2_T_2, _dotProductRegs_2_T_4, multiplication_2) @[hbfp.scala 279:29]
    dotProductRegs_2 <= _dotProductRegs_2_T_5 @[hbfp.scala 279:23]
    node _signs_2_T = xor(signReg_2, io.sign_b[2]) @[hbfp.scala 280:25]
    signs_2 <= _signs_2_T @[hbfp.scala 280:14]
    node _two_complement_2_T = eq(signs_2, UInt<1>("h1")) @[hbfp.scala 281:38]
    node _two_complement_2_T_1 = cat(UInt<1>("h0"), dotProductRegs_2) @[hbfp.scala 281:53]
    node _two_complement_2_T_2 = not(_two_complement_2_T_1) @[hbfp.scala 281:47]
    node _two_complement_2_T_3 = add(_two_complement_2_T_2, UInt<1>("h1")) @[hbfp.scala 281:75]
    node _two_complement_2_T_4 = tail(_two_complement_2_T_3, 1) @[hbfp.scala 281:75]
    node _two_complement_2_T_5 = cat(UInt<1>("h0"), dotProductRegs_2) @[hbfp.scala 281:88]
    node _two_complement_2_T_6 = mux(_two_complement_2_T, _two_complement_2_T_4, _two_complement_2_T_5) @[hbfp.scala 281:29]
    two_complement_2 <= _two_complement_2_T_6 @[hbfp.scala 281:23]
    node _two_complement_buffer_2_T = asSInt(two_complement_2) @[hbfp.scala 282:51]
    two_complement_buffer_2 <= _two_complement_buffer_2_T @[hbfp.scala 282:30]
    reg multiplierReg_3 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[hbfp.scala 274:32]
    reg signReg_3 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[hbfp.scala 275:26]
    signReg_3 <= io.sign_a[3] @[hbfp.scala 276:13]
    multiplierReg_3 <= io.man_a[3] @[hbfp.scala 277:19]
    node multiplication_3 = mul(multiplierReg_3, io.man_b[3]) @[hbfp.scala 278:41]
    node _dotProductRegs_3_T = sub(UInt<6>("h20"), UInt<1>("h1")) @[hbfp.scala 279:58]
    node _dotProductRegs_3_T_1 = tail(_dotProductRegs_3_T, 1) @[hbfp.scala 279:58]
    node _dotProductRegs_3_T_2 = gt(multiplication_3, _dotProductRegs_3_T_1) @[hbfp.scala 279:45]
    node _dotProductRegs_3_T_3 = sub(UInt<6>("h20"), UInt<1>("h1")) @[hbfp.scala 279:76]
    node _dotProductRegs_3_T_4 = tail(_dotProductRegs_3_T_3, 1) @[hbfp.scala 279:76]
    node _dotProductRegs_3_T_5 = mux(_dotProductRegs_3_T_2, _dotProductRegs_3_T_4, multiplication_3) @[hbfp.scala 279:29]
    dotProductRegs_3 <= _dotProductRegs_3_T_5 @[hbfp.scala 279:23]
    node _signs_3_T = xor(signReg_3, io.sign_b[3]) @[hbfp.scala 280:25]
    signs_3 <= _signs_3_T @[hbfp.scala 280:14]
    node _two_complement_3_T = eq(signs_3, UInt<1>("h1")) @[hbfp.scala 281:38]
    node _two_complement_3_T_1 = cat(UInt<1>("h0"), dotProductRegs_3) @[hbfp.scala 281:53]
    node _two_complement_3_T_2 = not(_two_complement_3_T_1) @[hbfp.scala 281:47]
    node _two_complement_3_T_3 = add(_two_complement_3_T_2, UInt<1>("h1")) @[hbfp.scala 281:75]
    node _two_complement_3_T_4 = tail(_two_complement_3_T_3, 1) @[hbfp.scala 281:75]
    node _two_complement_3_T_5 = cat(UInt<1>("h0"), dotProductRegs_3) @[hbfp.scala 281:88]
    node _two_complement_3_T_6 = mux(_two_complement_3_T, _two_complement_3_T_4, _two_complement_3_T_5) @[hbfp.scala 281:29]
    two_complement_3 <= _two_complement_3_T_6 @[hbfp.scala 281:23]
    node _two_complement_buffer_3_T = asSInt(two_complement_3) @[hbfp.scala 282:51]
    two_complement_buffer_3 <= _two_complement_buffer_3_T @[hbfp.scala 282:30]
    reg multiplierReg_4 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[hbfp.scala 274:32]
    reg signReg_4 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[hbfp.scala 275:26]
    signReg_4 <= io.sign_a[4] @[hbfp.scala 276:13]
    multiplierReg_4 <= io.man_a[4] @[hbfp.scala 277:19]
    node multiplication_4 = mul(multiplierReg_4, io.man_b[4]) @[hbfp.scala 278:41]
    node _dotProductRegs_4_T = sub(UInt<6>("h20"), UInt<1>("h1")) @[hbfp.scala 279:58]
    node _dotProductRegs_4_T_1 = tail(_dotProductRegs_4_T, 1) @[hbfp.scala 279:58]
    node _dotProductRegs_4_T_2 = gt(multiplication_4, _dotProductRegs_4_T_1) @[hbfp.scala 279:45]
    node _dotProductRegs_4_T_3 = sub(UInt<6>("h20"), UInt<1>("h1")) @[hbfp.scala 279:76]
    node _dotProductRegs_4_T_4 = tail(_dotProductRegs_4_T_3, 1) @[hbfp.scala 279:76]
    node _dotProductRegs_4_T_5 = mux(_dotProductRegs_4_T_2, _dotProductRegs_4_T_4, multiplication_4) @[hbfp.scala 279:29]
    dotProductRegs_4 <= _dotProductRegs_4_T_5 @[hbfp.scala 279:23]
    node _signs_4_T = xor(signReg_4, io.sign_b[4]) @[hbfp.scala 280:25]
    signs_4 <= _signs_4_T @[hbfp.scala 280:14]
    node _two_complement_4_T = eq(signs_4, UInt<1>("h1")) @[hbfp.scala 281:38]
    node _two_complement_4_T_1 = cat(UInt<1>("h0"), dotProductRegs_4) @[hbfp.scala 281:53]
    node _two_complement_4_T_2 = not(_two_complement_4_T_1) @[hbfp.scala 281:47]
    node _two_complement_4_T_3 = add(_two_complement_4_T_2, UInt<1>("h1")) @[hbfp.scala 281:75]
    node _two_complement_4_T_4 = tail(_two_complement_4_T_3, 1) @[hbfp.scala 281:75]
    node _two_complement_4_T_5 = cat(UInt<1>("h0"), dotProductRegs_4) @[hbfp.scala 281:88]
    node _two_complement_4_T_6 = mux(_two_complement_4_T, _two_complement_4_T_4, _two_complement_4_T_5) @[hbfp.scala 281:29]
    two_complement_4 <= _two_complement_4_T_6 @[hbfp.scala 281:23]
    node _two_complement_buffer_4_T = asSInt(two_complement_4) @[hbfp.scala 282:51]
    two_complement_buffer_4 <= _two_complement_buffer_4_T @[hbfp.scala 282:30]
    reg multiplierReg_5 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[hbfp.scala 274:32]
    reg signReg_5 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[hbfp.scala 275:26]
    signReg_5 <= io.sign_a[5] @[hbfp.scala 276:13]
    multiplierReg_5 <= io.man_a[5] @[hbfp.scala 277:19]
    node multiplication_5 = mul(multiplierReg_5, io.man_b[5]) @[hbfp.scala 278:41]
    node _dotProductRegs_5_T = sub(UInt<6>("h20"), UInt<1>("h1")) @[hbfp.scala 279:58]
    node _dotProductRegs_5_T_1 = tail(_dotProductRegs_5_T, 1) @[hbfp.scala 279:58]
    node _dotProductRegs_5_T_2 = gt(multiplication_5, _dotProductRegs_5_T_1) @[hbfp.scala 279:45]
    node _dotProductRegs_5_T_3 = sub(UInt<6>("h20"), UInt<1>("h1")) @[hbfp.scala 279:76]
    node _dotProductRegs_5_T_4 = tail(_dotProductRegs_5_T_3, 1) @[hbfp.scala 279:76]
    node _dotProductRegs_5_T_5 = mux(_dotProductRegs_5_T_2, _dotProductRegs_5_T_4, multiplication_5) @[hbfp.scala 279:29]
    dotProductRegs_5 <= _dotProductRegs_5_T_5 @[hbfp.scala 279:23]
    node _signs_5_T = xor(signReg_5, io.sign_b[5]) @[hbfp.scala 280:25]
    signs_5 <= _signs_5_T @[hbfp.scala 280:14]
    node _two_complement_5_T = eq(signs_5, UInt<1>("h1")) @[hbfp.scala 281:38]
    node _two_complement_5_T_1 = cat(UInt<1>("h0"), dotProductRegs_5) @[hbfp.scala 281:53]
    node _two_complement_5_T_2 = not(_two_complement_5_T_1) @[hbfp.scala 281:47]
    node _two_complement_5_T_3 = add(_two_complement_5_T_2, UInt<1>("h1")) @[hbfp.scala 281:75]
    node _two_complement_5_T_4 = tail(_two_complement_5_T_3, 1) @[hbfp.scala 281:75]
    node _two_complement_5_T_5 = cat(UInt<1>("h0"), dotProductRegs_5) @[hbfp.scala 281:88]
    node _two_complement_5_T_6 = mux(_two_complement_5_T, _two_complement_5_T_4, _two_complement_5_T_5) @[hbfp.scala 281:29]
    two_complement_5 <= _two_complement_5_T_6 @[hbfp.scala 281:23]
    node _two_complement_buffer_5_T = asSInt(two_complement_5) @[hbfp.scala 282:51]
    two_complement_buffer_5 <= _two_complement_buffer_5_T @[hbfp.scala 282:30]
    reg multiplierReg_6 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[hbfp.scala 274:32]
    reg signReg_6 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[hbfp.scala 275:26]
    signReg_6 <= io.sign_a[6] @[hbfp.scala 276:13]
    multiplierReg_6 <= io.man_a[6] @[hbfp.scala 277:19]
    node multiplication_6 = mul(multiplierReg_6, io.man_b[6]) @[hbfp.scala 278:41]
    node _dotProductRegs_6_T = sub(UInt<6>("h20"), UInt<1>("h1")) @[hbfp.scala 279:58]
    node _dotProductRegs_6_T_1 = tail(_dotProductRegs_6_T, 1) @[hbfp.scala 279:58]
    node _dotProductRegs_6_T_2 = gt(multiplication_6, _dotProductRegs_6_T_1) @[hbfp.scala 279:45]
    node _dotProductRegs_6_T_3 = sub(UInt<6>("h20"), UInt<1>("h1")) @[hbfp.scala 279:76]
    node _dotProductRegs_6_T_4 = tail(_dotProductRegs_6_T_3, 1) @[hbfp.scala 279:76]
    node _dotProductRegs_6_T_5 = mux(_dotProductRegs_6_T_2, _dotProductRegs_6_T_4, multiplication_6) @[hbfp.scala 279:29]
    dotProductRegs_6 <= _dotProductRegs_6_T_5 @[hbfp.scala 279:23]
    node _signs_6_T = xor(signReg_6, io.sign_b[6]) @[hbfp.scala 280:25]
    signs_6 <= _signs_6_T @[hbfp.scala 280:14]
    node _two_complement_6_T = eq(signs_6, UInt<1>("h1")) @[hbfp.scala 281:38]
    node _two_complement_6_T_1 = cat(UInt<1>("h0"), dotProductRegs_6) @[hbfp.scala 281:53]
    node _two_complement_6_T_2 = not(_two_complement_6_T_1) @[hbfp.scala 281:47]
    node _two_complement_6_T_3 = add(_two_complement_6_T_2, UInt<1>("h1")) @[hbfp.scala 281:75]
    node _two_complement_6_T_4 = tail(_two_complement_6_T_3, 1) @[hbfp.scala 281:75]
    node _two_complement_6_T_5 = cat(UInt<1>("h0"), dotProductRegs_6) @[hbfp.scala 281:88]
    node _two_complement_6_T_6 = mux(_two_complement_6_T, _two_complement_6_T_4, _two_complement_6_T_5) @[hbfp.scala 281:29]
    two_complement_6 <= _two_complement_6_T_6 @[hbfp.scala 281:23]
    node _two_complement_buffer_6_T = asSInt(two_complement_6) @[hbfp.scala 282:51]
    two_complement_buffer_6 <= _two_complement_buffer_6_T @[hbfp.scala 282:30]
    reg multiplierReg_7 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[hbfp.scala 274:32]
    reg signReg_7 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[hbfp.scala 275:26]
    signReg_7 <= io.sign_a[7] @[hbfp.scala 276:13]
    multiplierReg_7 <= io.man_a[7] @[hbfp.scala 277:19]
    node multiplication_7 = mul(multiplierReg_7, io.man_b[7]) @[hbfp.scala 278:41]
    node _dotProductRegs_7_T = sub(UInt<6>("h20"), UInt<1>("h1")) @[hbfp.scala 279:58]
    node _dotProductRegs_7_T_1 = tail(_dotProductRegs_7_T, 1) @[hbfp.scala 279:58]
    node _dotProductRegs_7_T_2 = gt(multiplication_7, _dotProductRegs_7_T_1) @[hbfp.scala 279:45]
    node _dotProductRegs_7_T_3 = sub(UInt<6>("h20"), UInt<1>("h1")) @[hbfp.scala 279:76]
    node _dotProductRegs_7_T_4 = tail(_dotProductRegs_7_T_3, 1) @[hbfp.scala 279:76]
    node _dotProductRegs_7_T_5 = mux(_dotProductRegs_7_T_2, _dotProductRegs_7_T_4, multiplication_7) @[hbfp.scala 279:29]
    dotProductRegs_7 <= _dotProductRegs_7_T_5 @[hbfp.scala 279:23]
    node _signs_7_T = xor(signReg_7, io.sign_b[7]) @[hbfp.scala 280:25]
    signs_7 <= _signs_7_T @[hbfp.scala 280:14]
    node _two_complement_7_T = eq(signs_7, UInt<1>("h1")) @[hbfp.scala 281:38]
    node _two_complement_7_T_1 = cat(UInt<1>("h0"), dotProductRegs_7) @[hbfp.scala 281:53]
    node _two_complement_7_T_2 = not(_two_complement_7_T_1) @[hbfp.scala 281:47]
    node _two_complement_7_T_3 = add(_two_complement_7_T_2, UInt<1>("h1")) @[hbfp.scala 281:75]
    node _two_complement_7_T_4 = tail(_two_complement_7_T_3, 1) @[hbfp.scala 281:75]
    node _two_complement_7_T_5 = cat(UInt<1>("h0"), dotProductRegs_7) @[hbfp.scala 281:88]
    node _two_complement_7_T_6 = mux(_two_complement_7_T, _two_complement_7_T_4, _two_complement_7_T_5) @[hbfp.scala 281:29]
    two_complement_7 <= _two_complement_7_T_6 @[hbfp.scala 281:23]
    node _two_complement_buffer_7_T = asSInt(two_complement_7) @[hbfp.scala 282:51]
    two_complement_buffer_7 <= _two_complement_buffer_7_T @[hbfp.scala 282:30]
    reg multiplierReg_8 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[hbfp.scala 274:32]
    reg signReg_8 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[hbfp.scala 275:26]
    signReg_8 <= io.sign_a[8] @[hbfp.scala 276:13]
    multiplierReg_8 <= io.man_a[8] @[hbfp.scala 277:19]
    node multiplication_8 = mul(multiplierReg_8, io.man_b[8]) @[hbfp.scala 278:41]
    node _dotProductRegs_8_T = sub(UInt<6>("h20"), UInt<1>("h1")) @[hbfp.scala 279:58]
    node _dotProductRegs_8_T_1 = tail(_dotProductRegs_8_T, 1) @[hbfp.scala 279:58]
    node _dotProductRegs_8_T_2 = gt(multiplication_8, _dotProductRegs_8_T_1) @[hbfp.scala 279:45]
    node _dotProductRegs_8_T_3 = sub(UInt<6>("h20"), UInt<1>("h1")) @[hbfp.scala 279:76]
    node _dotProductRegs_8_T_4 = tail(_dotProductRegs_8_T_3, 1) @[hbfp.scala 279:76]
    node _dotProductRegs_8_T_5 = mux(_dotProductRegs_8_T_2, _dotProductRegs_8_T_4, multiplication_8) @[hbfp.scala 279:29]
    dotProductRegs_8 <= _dotProductRegs_8_T_5 @[hbfp.scala 279:23]
    node _signs_8_T = xor(signReg_8, io.sign_b[8]) @[hbfp.scala 280:25]
    signs_8 <= _signs_8_T @[hbfp.scala 280:14]
    node _two_complement_8_T = eq(signs_8, UInt<1>("h1")) @[hbfp.scala 281:38]
    node _two_complement_8_T_1 = cat(UInt<1>("h0"), dotProductRegs_8) @[hbfp.scala 281:53]
    node _two_complement_8_T_2 = not(_two_complement_8_T_1) @[hbfp.scala 281:47]
    node _two_complement_8_T_3 = add(_two_complement_8_T_2, UInt<1>("h1")) @[hbfp.scala 281:75]
    node _two_complement_8_T_4 = tail(_two_complement_8_T_3, 1) @[hbfp.scala 281:75]
    node _two_complement_8_T_5 = cat(UInt<1>("h0"), dotProductRegs_8) @[hbfp.scala 281:88]
    node _two_complement_8_T_6 = mux(_two_complement_8_T, _two_complement_8_T_4, _two_complement_8_T_5) @[hbfp.scala 281:29]
    two_complement_8 <= _two_complement_8_T_6 @[hbfp.scala 281:23]
    node _two_complement_buffer_8_T = asSInt(two_complement_8) @[hbfp.scala 282:51]
    two_complement_buffer_8 <= _two_complement_buffer_8_T @[hbfp.scala 282:30]
    reg multiplierReg_9 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[hbfp.scala 274:32]
    reg signReg_9 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[hbfp.scala 275:26]
    signReg_9 <= io.sign_a[9] @[hbfp.scala 276:13]
    multiplierReg_9 <= io.man_a[9] @[hbfp.scala 277:19]
    node multiplication_9 = mul(multiplierReg_9, io.man_b[9]) @[hbfp.scala 278:41]
    node _dotProductRegs_9_T = sub(UInt<6>("h20"), UInt<1>("h1")) @[hbfp.scala 279:58]
    node _dotProductRegs_9_T_1 = tail(_dotProductRegs_9_T, 1) @[hbfp.scala 279:58]
    node _dotProductRegs_9_T_2 = gt(multiplication_9, _dotProductRegs_9_T_1) @[hbfp.scala 279:45]
    node _dotProductRegs_9_T_3 = sub(UInt<6>("h20"), UInt<1>("h1")) @[hbfp.scala 279:76]
    node _dotProductRegs_9_T_4 = tail(_dotProductRegs_9_T_3, 1) @[hbfp.scala 279:76]
    node _dotProductRegs_9_T_5 = mux(_dotProductRegs_9_T_2, _dotProductRegs_9_T_4, multiplication_9) @[hbfp.scala 279:29]
    dotProductRegs_9 <= _dotProductRegs_9_T_5 @[hbfp.scala 279:23]
    node _signs_9_T = xor(signReg_9, io.sign_b[9]) @[hbfp.scala 280:25]
    signs_9 <= _signs_9_T @[hbfp.scala 280:14]
    node _two_complement_9_T = eq(signs_9, UInt<1>("h1")) @[hbfp.scala 281:38]
    node _two_complement_9_T_1 = cat(UInt<1>("h0"), dotProductRegs_9) @[hbfp.scala 281:53]
    node _two_complement_9_T_2 = not(_two_complement_9_T_1) @[hbfp.scala 281:47]
    node _two_complement_9_T_3 = add(_two_complement_9_T_2, UInt<1>("h1")) @[hbfp.scala 281:75]
    node _two_complement_9_T_4 = tail(_two_complement_9_T_3, 1) @[hbfp.scala 281:75]
    node _two_complement_9_T_5 = cat(UInt<1>("h0"), dotProductRegs_9) @[hbfp.scala 281:88]
    node _two_complement_9_T_6 = mux(_two_complement_9_T, _two_complement_9_T_4, _two_complement_9_T_5) @[hbfp.scala 281:29]
    two_complement_9 <= _two_complement_9_T_6 @[hbfp.scala 281:23]
    node _two_complement_buffer_9_T = asSInt(two_complement_9) @[hbfp.scala 282:51]
    two_complement_buffer_9 <= _two_complement_buffer_9_T @[hbfp.scala 282:30]
    reg multiplierReg_10 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[hbfp.scala 274:32]
    reg signReg_10 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[hbfp.scala 275:26]
    signReg_10 <= io.sign_a[10] @[hbfp.scala 276:13]
    multiplierReg_10 <= io.man_a[10] @[hbfp.scala 277:19]
    node multiplication_10 = mul(multiplierReg_10, io.man_b[10]) @[hbfp.scala 278:41]
    node _dotProductRegs_10_T = sub(UInt<6>("h20"), UInt<1>("h1")) @[hbfp.scala 279:58]
    node _dotProductRegs_10_T_1 = tail(_dotProductRegs_10_T, 1) @[hbfp.scala 279:58]
    node _dotProductRegs_10_T_2 = gt(multiplication_10, _dotProductRegs_10_T_1) @[hbfp.scala 279:45]
    node _dotProductRegs_10_T_3 = sub(UInt<6>("h20"), UInt<1>("h1")) @[hbfp.scala 279:76]
    node _dotProductRegs_10_T_4 = tail(_dotProductRegs_10_T_3, 1) @[hbfp.scala 279:76]
    node _dotProductRegs_10_T_5 = mux(_dotProductRegs_10_T_2, _dotProductRegs_10_T_4, multiplication_10) @[hbfp.scala 279:29]
    dotProductRegs_10 <= _dotProductRegs_10_T_5 @[hbfp.scala 279:23]
    node _signs_10_T = xor(signReg_10, io.sign_b[10]) @[hbfp.scala 280:25]
    signs_10 <= _signs_10_T @[hbfp.scala 280:14]
    node _two_complement_10_T = eq(signs_10, UInt<1>("h1")) @[hbfp.scala 281:38]
    node _two_complement_10_T_1 = cat(UInt<1>("h0"), dotProductRegs_10) @[hbfp.scala 281:53]
    node _two_complement_10_T_2 = not(_two_complement_10_T_1) @[hbfp.scala 281:47]
    node _two_complement_10_T_3 = add(_two_complement_10_T_2, UInt<1>("h1")) @[hbfp.scala 281:75]
    node _two_complement_10_T_4 = tail(_two_complement_10_T_3, 1) @[hbfp.scala 281:75]
    node _two_complement_10_T_5 = cat(UInt<1>("h0"), dotProductRegs_10) @[hbfp.scala 281:88]
    node _two_complement_10_T_6 = mux(_two_complement_10_T, _two_complement_10_T_4, _two_complement_10_T_5) @[hbfp.scala 281:29]
    two_complement_10 <= _two_complement_10_T_6 @[hbfp.scala 281:23]
    node _two_complement_buffer_10_T = asSInt(two_complement_10) @[hbfp.scala 282:51]
    two_complement_buffer_10 <= _two_complement_buffer_10_T @[hbfp.scala 282:30]
    reg multiplierReg_11 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[hbfp.scala 274:32]
    reg signReg_11 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[hbfp.scala 275:26]
    signReg_11 <= io.sign_a[11] @[hbfp.scala 276:13]
    multiplierReg_11 <= io.man_a[11] @[hbfp.scala 277:19]
    node multiplication_11 = mul(multiplierReg_11, io.man_b[11]) @[hbfp.scala 278:41]
    node _dotProductRegs_11_T = sub(UInt<6>("h20"), UInt<1>("h1")) @[hbfp.scala 279:58]
    node _dotProductRegs_11_T_1 = tail(_dotProductRegs_11_T, 1) @[hbfp.scala 279:58]
    node _dotProductRegs_11_T_2 = gt(multiplication_11, _dotProductRegs_11_T_1) @[hbfp.scala 279:45]
    node _dotProductRegs_11_T_3 = sub(UInt<6>("h20"), UInt<1>("h1")) @[hbfp.scala 279:76]
    node _dotProductRegs_11_T_4 = tail(_dotProductRegs_11_T_3, 1) @[hbfp.scala 279:76]
    node _dotProductRegs_11_T_5 = mux(_dotProductRegs_11_T_2, _dotProductRegs_11_T_4, multiplication_11) @[hbfp.scala 279:29]
    dotProductRegs_11 <= _dotProductRegs_11_T_5 @[hbfp.scala 279:23]
    node _signs_11_T = xor(signReg_11, io.sign_b[11]) @[hbfp.scala 280:25]
    signs_11 <= _signs_11_T @[hbfp.scala 280:14]
    node _two_complement_11_T = eq(signs_11, UInt<1>("h1")) @[hbfp.scala 281:38]
    node _two_complement_11_T_1 = cat(UInt<1>("h0"), dotProductRegs_11) @[hbfp.scala 281:53]
    node _two_complement_11_T_2 = not(_two_complement_11_T_1) @[hbfp.scala 281:47]
    node _two_complement_11_T_3 = add(_two_complement_11_T_2, UInt<1>("h1")) @[hbfp.scala 281:75]
    node _two_complement_11_T_4 = tail(_two_complement_11_T_3, 1) @[hbfp.scala 281:75]
    node _two_complement_11_T_5 = cat(UInt<1>("h0"), dotProductRegs_11) @[hbfp.scala 281:88]
    node _two_complement_11_T_6 = mux(_two_complement_11_T, _two_complement_11_T_4, _two_complement_11_T_5) @[hbfp.scala 281:29]
    two_complement_11 <= _two_complement_11_T_6 @[hbfp.scala 281:23]
    node _two_complement_buffer_11_T = asSInt(two_complement_11) @[hbfp.scala 282:51]
    two_complement_buffer_11 <= _two_complement_buffer_11_T @[hbfp.scala 282:30]
    reg multiplierReg_12 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[hbfp.scala 274:32]
    reg signReg_12 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[hbfp.scala 275:26]
    signReg_12 <= io.sign_a[12] @[hbfp.scala 276:13]
    multiplierReg_12 <= io.man_a[12] @[hbfp.scala 277:19]
    node multiplication_12 = mul(multiplierReg_12, io.man_b[12]) @[hbfp.scala 278:41]
    node _dotProductRegs_12_T = sub(UInt<6>("h20"), UInt<1>("h1")) @[hbfp.scala 279:58]
    node _dotProductRegs_12_T_1 = tail(_dotProductRegs_12_T, 1) @[hbfp.scala 279:58]
    node _dotProductRegs_12_T_2 = gt(multiplication_12, _dotProductRegs_12_T_1) @[hbfp.scala 279:45]
    node _dotProductRegs_12_T_3 = sub(UInt<6>("h20"), UInt<1>("h1")) @[hbfp.scala 279:76]
    node _dotProductRegs_12_T_4 = tail(_dotProductRegs_12_T_3, 1) @[hbfp.scala 279:76]
    node _dotProductRegs_12_T_5 = mux(_dotProductRegs_12_T_2, _dotProductRegs_12_T_4, multiplication_12) @[hbfp.scala 279:29]
    dotProductRegs_12 <= _dotProductRegs_12_T_5 @[hbfp.scala 279:23]
    node _signs_12_T = xor(signReg_12, io.sign_b[12]) @[hbfp.scala 280:25]
    signs_12 <= _signs_12_T @[hbfp.scala 280:14]
    node _two_complement_12_T = eq(signs_12, UInt<1>("h1")) @[hbfp.scala 281:38]
    node _two_complement_12_T_1 = cat(UInt<1>("h0"), dotProductRegs_12) @[hbfp.scala 281:53]
    node _two_complement_12_T_2 = not(_two_complement_12_T_1) @[hbfp.scala 281:47]
    node _two_complement_12_T_3 = add(_two_complement_12_T_2, UInt<1>("h1")) @[hbfp.scala 281:75]
    node _two_complement_12_T_4 = tail(_two_complement_12_T_3, 1) @[hbfp.scala 281:75]
    node _two_complement_12_T_5 = cat(UInt<1>("h0"), dotProductRegs_12) @[hbfp.scala 281:88]
    node _two_complement_12_T_6 = mux(_two_complement_12_T, _two_complement_12_T_4, _two_complement_12_T_5) @[hbfp.scala 281:29]
    two_complement_12 <= _two_complement_12_T_6 @[hbfp.scala 281:23]
    node _two_complement_buffer_12_T = asSInt(two_complement_12) @[hbfp.scala 282:51]
    two_complement_buffer_12 <= _two_complement_buffer_12_T @[hbfp.scala 282:30]
    reg multiplierReg_13 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[hbfp.scala 274:32]
    reg signReg_13 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[hbfp.scala 275:26]
    signReg_13 <= io.sign_a[13] @[hbfp.scala 276:13]
    multiplierReg_13 <= io.man_a[13] @[hbfp.scala 277:19]
    node multiplication_13 = mul(multiplierReg_13, io.man_b[13]) @[hbfp.scala 278:41]
    node _dotProductRegs_13_T = sub(UInt<6>("h20"), UInt<1>("h1")) @[hbfp.scala 279:58]
    node _dotProductRegs_13_T_1 = tail(_dotProductRegs_13_T, 1) @[hbfp.scala 279:58]
    node _dotProductRegs_13_T_2 = gt(multiplication_13, _dotProductRegs_13_T_1) @[hbfp.scala 279:45]
    node _dotProductRegs_13_T_3 = sub(UInt<6>("h20"), UInt<1>("h1")) @[hbfp.scala 279:76]
    node _dotProductRegs_13_T_4 = tail(_dotProductRegs_13_T_3, 1) @[hbfp.scala 279:76]
    node _dotProductRegs_13_T_5 = mux(_dotProductRegs_13_T_2, _dotProductRegs_13_T_4, multiplication_13) @[hbfp.scala 279:29]
    dotProductRegs_13 <= _dotProductRegs_13_T_5 @[hbfp.scala 279:23]
    node _signs_13_T = xor(signReg_13, io.sign_b[13]) @[hbfp.scala 280:25]
    signs_13 <= _signs_13_T @[hbfp.scala 280:14]
    node _two_complement_13_T = eq(signs_13, UInt<1>("h1")) @[hbfp.scala 281:38]
    node _two_complement_13_T_1 = cat(UInt<1>("h0"), dotProductRegs_13) @[hbfp.scala 281:53]
    node _two_complement_13_T_2 = not(_two_complement_13_T_1) @[hbfp.scala 281:47]
    node _two_complement_13_T_3 = add(_two_complement_13_T_2, UInt<1>("h1")) @[hbfp.scala 281:75]
    node _two_complement_13_T_4 = tail(_two_complement_13_T_3, 1) @[hbfp.scala 281:75]
    node _two_complement_13_T_5 = cat(UInt<1>("h0"), dotProductRegs_13) @[hbfp.scala 281:88]
    node _two_complement_13_T_6 = mux(_two_complement_13_T, _two_complement_13_T_4, _two_complement_13_T_5) @[hbfp.scala 281:29]
    two_complement_13 <= _two_complement_13_T_6 @[hbfp.scala 281:23]
    node _two_complement_buffer_13_T = asSInt(two_complement_13) @[hbfp.scala 282:51]
    two_complement_buffer_13 <= _two_complement_buffer_13_T @[hbfp.scala 282:30]
    reg multiplierReg_14 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[hbfp.scala 274:32]
    reg signReg_14 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[hbfp.scala 275:26]
    signReg_14 <= io.sign_a[14] @[hbfp.scala 276:13]
    multiplierReg_14 <= io.man_a[14] @[hbfp.scala 277:19]
    node multiplication_14 = mul(multiplierReg_14, io.man_b[14]) @[hbfp.scala 278:41]
    node _dotProductRegs_14_T = sub(UInt<6>("h20"), UInt<1>("h1")) @[hbfp.scala 279:58]
    node _dotProductRegs_14_T_1 = tail(_dotProductRegs_14_T, 1) @[hbfp.scala 279:58]
    node _dotProductRegs_14_T_2 = gt(multiplication_14, _dotProductRegs_14_T_1) @[hbfp.scala 279:45]
    node _dotProductRegs_14_T_3 = sub(UInt<6>("h20"), UInt<1>("h1")) @[hbfp.scala 279:76]
    node _dotProductRegs_14_T_4 = tail(_dotProductRegs_14_T_3, 1) @[hbfp.scala 279:76]
    node _dotProductRegs_14_T_5 = mux(_dotProductRegs_14_T_2, _dotProductRegs_14_T_4, multiplication_14) @[hbfp.scala 279:29]
    dotProductRegs_14 <= _dotProductRegs_14_T_5 @[hbfp.scala 279:23]
    node _signs_14_T = xor(signReg_14, io.sign_b[14]) @[hbfp.scala 280:25]
    signs_14 <= _signs_14_T @[hbfp.scala 280:14]
    node _two_complement_14_T = eq(signs_14, UInt<1>("h1")) @[hbfp.scala 281:38]
    node _two_complement_14_T_1 = cat(UInt<1>("h0"), dotProductRegs_14) @[hbfp.scala 281:53]
    node _two_complement_14_T_2 = not(_two_complement_14_T_1) @[hbfp.scala 281:47]
    node _two_complement_14_T_3 = add(_two_complement_14_T_2, UInt<1>("h1")) @[hbfp.scala 281:75]
    node _two_complement_14_T_4 = tail(_two_complement_14_T_3, 1) @[hbfp.scala 281:75]
    node _two_complement_14_T_5 = cat(UInt<1>("h0"), dotProductRegs_14) @[hbfp.scala 281:88]
    node _two_complement_14_T_6 = mux(_two_complement_14_T, _two_complement_14_T_4, _two_complement_14_T_5) @[hbfp.scala 281:29]
    two_complement_14 <= _two_complement_14_T_6 @[hbfp.scala 281:23]
    node _two_complement_buffer_14_T = asSInt(two_complement_14) @[hbfp.scala 282:51]
    two_complement_buffer_14 <= _two_complement_buffer_14_T @[hbfp.scala 282:30]
    reg multiplierReg_15 : UInt<5>, clock with :
      reset => (reset, UInt<5>("h0")) @[hbfp.scala 274:32]
    reg signReg_15 : UInt<1>, clock with :
      reset => (reset, UInt<1>("h0")) @[hbfp.scala 275:26]
    signReg_15 <= io.sign_a[15] @[hbfp.scala 276:13]
    multiplierReg_15 <= io.man_a[15] @[hbfp.scala 277:19]
    node multiplication_15 = mul(multiplierReg_15, io.man_b[15]) @[hbfp.scala 278:41]
    node _dotProductRegs_15_T = sub(UInt<6>("h20"), UInt<1>("h1")) @[hbfp.scala 279:58]
    node _dotProductRegs_15_T_1 = tail(_dotProductRegs_15_T, 1) @[hbfp.scala 279:58]
    node _dotProductRegs_15_T_2 = gt(multiplication_15, _dotProductRegs_15_T_1) @[hbfp.scala 279:45]
    node _dotProductRegs_15_T_3 = sub(UInt<6>("h20"), UInt<1>("h1")) @[hbfp.scala 279:76]
    node _dotProductRegs_15_T_4 = tail(_dotProductRegs_15_T_3, 1) @[hbfp.scala 279:76]
    node _dotProductRegs_15_T_5 = mux(_dotProductRegs_15_T_2, _dotProductRegs_15_T_4, multiplication_15) @[hbfp.scala 279:29]
    dotProductRegs_15 <= _dotProductRegs_15_T_5 @[hbfp.scala 279:23]
    node _signs_15_T = xor(signReg_15, io.sign_b[15]) @[hbfp.scala 280:25]
    signs_15 <= _signs_15_T @[hbfp.scala 280:14]
    node _two_complement_15_T = eq(signs_15, UInt<1>("h1")) @[hbfp.scala 281:38]
    node _two_complement_15_T_1 = cat(UInt<1>("h0"), dotProductRegs_15) @[hbfp.scala 281:53]
    node _two_complement_15_T_2 = not(_two_complement_15_T_1) @[hbfp.scala 281:47]
    node _two_complement_15_T_3 = add(_two_complement_15_T_2, UInt<1>("h1")) @[hbfp.scala 281:75]
    node _two_complement_15_T_4 = tail(_two_complement_15_T_3, 1) @[hbfp.scala 281:75]
    node _two_complement_15_T_5 = cat(UInt<1>("h0"), dotProductRegs_15) @[hbfp.scala 281:88]
    node _two_complement_15_T_6 = mux(_two_complement_15_T, _two_complement_15_T_4, _two_complement_15_T_5) @[hbfp.scala 281:29]
    two_complement_15 <= _two_complement_15_T_6 @[hbfp.scala 281:23]
    node _two_complement_buffer_15_T = asSInt(two_complement_15) @[hbfp.scala 282:51]
    two_complement_buffer_15 <= _two_complement_buffer_15_T @[hbfp.scala 282:30]
    node _sum_T = add(two_complement_buffer_0, two_complement_buffer_1) @[hbfp.scala 285:43]
    node _sum_T_1 = add(_sum_T, two_complement_buffer_2) @[hbfp.scala 285:43]
    node _sum_T_2 = add(_sum_T_1, two_complement_buffer_3) @[hbfp.scala 285:43]
    node _sum_T_3 = add(_sum_T_2, two_complement_buffer_4) @[hbfp.scala 285:43]
    node _sum_T_4 = add(_sum_T_3, two_complement_buffer_5) @[hbfp.scala 285:43]
    node _sum_T_5 = add(_sum_T_4, two_complement_buffer_6) @[hbfp.scala 285:43]
    node _sum_T_6 = add(_sum_T_5, two_complement_buffer_7) @[hbfp.scala 285:43]
    node _sum_T_7 = add(_sum_T_6, two_complement_buffer_8) @[hbfp.scala 285:43]
    node _sum_T_8 = add(_sum_T_7, two_complement_buffer_9) @[hbfp.scala 285:43]
    node _sum_T_9 = add(_sum_T_8, two_complement_buffer_10) @[hbfp.scala 285:43]
    node _sum_T_10 = add(_sum_T_9, two_complement_buffer_11) @[hbfp.scala 285:43]
    node _sum_T_11 = add(_sum_T_10, two_complement_buffer_12) @[hbfp.scala 285:43]
    node _sum_T_12 = add(_sum_T_11, two_complement_buffer_13) @[hbfp.scala 285:43]
    node _sum_T_13 = add(_sum_T_12, two_complement_buffer_14) @[hbfp.scala 285:43]
    node sum = add(_sum_T_13, two_complement_buffer_15) @[hbfp.scala 285:43]
    node _acc_T = bits(sum, 19, 0) @[hbfp.scala 286:17]
    node _acc_T_1 = sub(UInt<6>("h20"), UInt<1>("h1")) @[hbfp.scala 286:56]
    node _acc_T_2 = tail(_acc_T_1, 1) @[hbfp.scala 286:56]
    node _acc_T_3 = gt(_acc_T, _acc_T_2) @[hbfp.scala 286:42]
    node _acc_T_4 = sub(UInt<6>("h20"), UInt<1>("h1")) @[hbfp.scala 286:75]
    node _acc_T_5 = tail(_acc_T_4, 1) @[hbfp.scala 286:75]
    node _acc_T_6 = asUInt(sum) @[hbfp.scala 286:86]
    node _acc_T_7 = mux(_acc_T_3, _acc_T_5, _acc_T_6) @[hbfp.scala 286:13]
    acc <= _acc_T_7 @[hbfp.scala 286:7]
    acc_buf <= acc @[hbfp.scala 287:11]
    node _acc_hbfp_T = bits(sum, 20, 20) @[hbfp.scala 290:22]
    node _acc_hbfp_T_1 = eq(_acc_hbfp_T, UInt<1>("h1")) @[hbfp.scala 290:44]
    node _acc_hbfp_T_2 = bits(sum, 19, 0) @[hbfp.scala 290:61]
    node _acc_hbfp_T_3 = not(_acc_hbfp_T_2) @[hbfp.scala 290:57]
    node _acc_hbfp_T_4 = add(_acc_hbfp_T_3, UInt<1>("h1")) @[hbfp.scala 290:86]
    node _acc_hbfp_T_5 = tail(_acc_hbfp_T_4, 1) @[hbfp.scala 290:86]
    node _acc_hbfp_T_6 = sub(UInt<6>("h20"), UInt<1>("h1")) @[hbfp.scala 290:106]
    node _acc_hbfp_T_7 = tail(_acc_hbfp_T_6, 1) @[hbfp.scala 290:106]
    node _acc_hbfp_T_8 = gt(_acc_hbfp_T_5, _acc_hbfp_T_7) @[hbfp.scala 290:93]
    node _acc_hbfp_T_9 = sub(UInt<7>("h40"), UInt<1>("h1")) @[hbfp.scala 290:122]
    node _acc_hbfp_T_10 = tail(_acc_hbfp_T_9, 1) @[hbfp.scala 290:122]
    node _acc_hbfp_T_11 = bits(sum, 19, 0) @[hbfp.scala 290:141]
    node _acc_hbfp_T_12 = cat(UInt<1>("h0"), _acc_hbfp_T_11) @[hbfp.scala 290:135]
    node _acc_hbfp_T_13 = not(_acc_hbfp_T_12) @[hbfp.scala 290:129]
    node _acc_hbfp_T_14 = add(_acc_hbfp_T_13, UInt<1>("h1")) @[hbfp.scala 290:168]
    node _acc_hbfp_T_15 = tail(_acc_hbfp_T_14, 1) @[hbfp.scala 290:168]
    node _acc_hbfp_T_16 = mux(_acc_hbfp_T_8, _acc_hbfp_T_10, _acc_hbfp_T_15) @[hbfp.scala 290:55]
    node _acc_hbfp_T_17 = bits(sum, 19, 0) @[hbfp.scala 291:10]
    node _acc_hbfp_T_18 = sub(UInt<6>("h20"), UInt<1>("h1")) @[hbfp.scala 291:49]
    node _acc_hbfp_T_19 = tail(_acc_hbfp_T_18, 1) @[hbfp.scala 291:49]
    node _acc_hbfp_T_20 = gt(_acc_hbfp_T_17, _acc_hbfp_T_19) @[hbfp.scala 291:36]
    node _acc_hbfp_T_21 = sub(UInt<6>("h20"), UInt<1>("h1")) @[hbfp.scala 291:67]
    node _acc_hbfp_T_22 = tail(_acc_hbfp_T_21, 1) @[hbfp.scala 291:67]
    node _acc_hbfp_T_23 = bits(sum, 19, 0) @[hbfp.scala 291:84]
    node _acc_hbfp_T_24 = cat(UInt<1>("h0"), _acc_hbfp_T_23) @[hbfp.scala 291:78]
    node _acc_hbfp_T_25 = mux(_acc_hbfp_T_20, _acc_hbfp_T_22, _acc_hbfp_T_24) @[hbfp.scala 291:6]
    node _acc_hbfp_T_26 = mux(_acc_hbfp_T_1, _acc_hbfp_T_16, _acc_hbfp_T_25) @[hbfp.scala 290:18]
    acc_hbfp <= _acc_hbfp_T_26 @[hbfp.scala 290:12]
    node _io_result_T = bits(acc_hbfp, 5, 5) @[hbfp.scala 294:24]
    node _io_result_T_1 = bits(exp_output, 8, 1) @[hbfp.scala 294:48]
    node _io_result_T_2 = cat(_io_result_T, _io_result_T_1) @[hbfp.scala 294:35]
    node _io_result_T_3 = bits(acc_hbfp, 4, 0) @[hbfp.scala 294:66]
    node _io_result_T_4 = cat(_io_result_T_2, _io_result_T_3) @[hbfp.scala 294:55]
    io.result <= _io_result_T_4 @[hbfp.scala 294:13]

