$version Generated by VerilatedVcd $end
$date Fri Jun 30 08:28:29 2023
 $end
$timescale   1ps $end

 $scope module TOP $end
  $var wire  1 `! clock $end
  $var wire  8 $" io_in_a_exp_0 [7:0] $end
  $var wire  8 %" io_in_a_exp_1 [7:0] $end
  $var wire  8 &" io_in_a_exp_2 [7:0] $end
  $var wire  8 '" io_in_a_exp_3 [7:0] $end
  $var wire  6 b! io_in_a_man_0 [5:0] $end
  $var wire  6 c! io_in_a_man_1 [5:0] $end
  $var wire  6 l! io_in_a_man_10 [5:0] $end
  $var wire  6 m! io_in_a_man_11 [5:0] $end
  $var wire  6 n! io_in_a_man_12 [5:0] $end
  $var wire  6 o! io_in_a_man_13 [5:0] $end
  $var wire  6 p! io_in_a_man_14 [5:0] $end
  $var wire  6 q! io_in_a_man_15 [5:0] $end
  $var wire  6 d! io_in_a_man_2 [5:0] $end
  $var wire  6 e! io_in_a_man_3 [5:0] $end
  $var wire  6 f! io_in_a_man_4 [5:0] $end
  $var wire  6 g! io_in_a_man_5 [5:0] $end
  $var wire  6 h! io_in_a_man_6 [5:0] $end
  $var wire  6 i! io_in_a_man_7 [5:0] $end
  $var wire  6 j! io_in_a_man_8 [5:0] $end
  $var wire  6 k! io_in_a_man_9 [5:0] $end
  $var wire  1 r! io_in_a_sign_0 $end
  $var wire  1 s! io_in_a_sign_1 $end
  $var wire  1 |! io_in_a_sign_10 $end
  $var wire  1 }! io_in_a_sign_11 $end
  $var wire  1 ~! io_in_a_sign_12 $end
  $var wire  1 !" io_in_a_sign_13 $end
  $var wire  1 "" io_in_a_sign_14 $end
  $var wire  1 #" io_in_a_sign_15 $end
  $var wire  1 t! io_in_a_sign_2 $end
  $var wire  1 u! io_in_a_sign_3 $end
  $var wire  1 v! io_in_a_sign_4 $end
  $var wire  1 w! io_in_a_sign_5 $end
  $var wire  1 x! io_in_a_sign_6 $end
  $var wire  1 y! io_in_a_sign_7 $end
  $var wire  1 z! io_in_a_sign_8 $end
  $var wire  1 {! io_in_a_sign_9 $end
  $var wire  8 H" io_in_b_exp_0 [7:0] $end
  $var wire  8 I" io_in_b_exp_1 [7:0] $end
  $var wire  8 J" io_in_b_exp_2 [7:0] $end
  $var wire  8 K" io_in_b_exp_3 [7:0] $end
  $var wire  6 (" io_in_b_man_0 [5:0] $end
  $var wire  6 )" io_in_b_man_1 [5:0] $end
  $var wire  6 2" io_in_b_man_10 [5:0] $end
  $var wire  6 3" io_in_b_man_11 [5:0] $end
  $var wire  6 4" io_in_b_man_12 [5:0] $end
  $var wire  6 5" io_in_b_man_13 [5:0] $end
  $var wire  6 6" io_in_b_man_14 [5:0] $end
  $var wire  6 7" io_in_b_man_15 [5:0] $end
  $var wire  6 *" io_in_b_man_2 [5:0] $end
  $var wire  6 +" io_in_b_man_3 [5:0] $end
  $var wire  6 ," io_in_b_man_4 [5:0] $end
  $var wire  6 -" io_in_b_man_5 [5:0] $end
  $var wire  6 ." io_in_b_man_6 [5:0] $end
  $var wire  6 /" io_in_b_man_7 [5:0] $end
  $var wire  6 0" io_in_b_man_8 [5:0] $end
  $var wire  6 1" io_in_b_man_9 [5:0] $end
  $var wire  1 8" io_in_b_sign_0 $end
  $var wire  1 9" io_in_b_sign_1 $end
  $var wire  1 B" io_in_b_sign_10 $end
  $var wire  1 C" io_in_b_sign_11 $end
  $var wire  1 D" io_in_b_sign_12 $end
  $var wire  1 E" io_in_b_sign_13 $end
  $var wire  1 F" io_in_b_sign_14 $end
  $var wire  1 G" io_in_b_sign_15 $end
  $var wire  1 :" io_in_b_sign_2 $end
  $var wire  1 ;" io_in_b_sign_3 $end
  $var wire  1 <" io_in_b_sign_4 $end
  $var wire  1 =" io_in_b_sign_5 $end
  $var wire  1 >" io_in_b_sign_6 $end
  $var wire  1 ?" io_in_b_sign_7 $end
  $var wire  1 @" io_in_b_sign_8 $end
  $var wire  1 A" io_in_b_sign_9 $end
  $var wire  1 L" io_in_control $end
  $var wire  1 M" io_in_control2 $end
  $var wire 15 N" io_result [14:0] $end
  $var wire  1 a! reset $end
  $scope module Improved_HbfpTensor $end
   $var wire 16 # acc_0 [15:0] $end
   $var wire 16 $ acc_1 [15:0] $end
   $var wire 16 % acc_2 [15:0] $end
   $var wire 16 & acc_3 [15:0] $end
   $var wire  1 `! adderTreeInst_clock $end
   $var wire  1 L" adderTreeInst_io_in_control_signal $end
   $var wire  1 M" adderTreeInst_io_in_control_signal2 $end
   $var wire  9 ' adderTreeInst_io_in_exps_0 [8:0] $end
   $var wire  9 ( adderTreeInst_io_in_exps_1 [8:0] $end
   $var wire  9 ) adderTreeInst_io_in_exps_2 [8:0] $end
   $var wire  9 * adderTreeInst_io_in_exps_3 [8:0] $end
   $var wire 16 # adderTreeInst_io_in_sign_man_0 [15:0] $end
   $var wire 16 $ adderTreeInst_io_in_sign_man_1 [15:0] $end
   $var wire 16 % adderTreeInst_io_in_sign_man_2 [15:0] $end
   $var wire 16 & adderTreeInst_io_in_sign_man_3 [15:0] $end
   $var wire 15 + adderTreeInst_io_result_tree [14:0] $end
   $var wire  1 a! adderTreeInst_reset $end
   $var wire  1 `! clock $end
   $var wire 12 L dotProductRegs_1_0 [11:0] $end
   $var wire 12 M dotProductRegs_1_1 [11:0] $end
   $var wire 12 N dotProductRegs_1_2 [11:0] $end
   $var wire 12 O dotProductRegs_1_3 [11:0] $end
   $var wire 12 l dotProductRegs_2_0 [11:0] $end
   $var wire 12 m dotProductRegs_2_1 [11:0] $end
   $var wire 12 n dotProductRegs_2_2 [11:0] $end
   $var wire 12 o dotProductRegs_2_3 [11:0] $end
   $var wire 12 .! dotProductRegs_3_0 [11:0] $end
   $var wire 12 /! dotProductRegs_3_1 [11:0] $end
   $var wire 12 0! dotProductRegs_3_2 [11:0] $end
   $var wire 12 1! dotProductRegs_3_3 [11:0] $end
   $var wire 12 , dotProductRegs__0 [11:0] $end
   $var wire 12 - dotProductRegs__1 [11:0] $end
   $var wire 12 . dotProductRegs__2 [11:0] $end
   $var wire 12 / dotProductRegs__3 [11:0] $end
   $var wire  9 ' exp_output_0 [8:0] $end
   $var wire  9 ( exp_output_1 [8:0] $end
   $var wire  9 ) exp_output_2 [8:0] $end
   $var wire  9 * exp_output_3 [8:0] $end
   $var wire  8 $" io_in_a_exp_0 [7:0] $end
   $var wire  8 %" io_in_a_exp_1 [7:0] $end
   $var wire  8 &" io_in_a_exp_2 [7:0] $end
   $var wire  8 '" io_in_a_exp_3 [7:0] $end
   $var wire  6 b! io_in_a_man_0 [5:0] $end
   $var wire  6 c! io_in_a_man_1 [5:0] $end
   $var wire  6 l! io_in_a_man_10 [5:0] $end
   $var wire  6 m! io_in_a_man_11 [5:0] $end
   $var wire  6 n! io_in_a_man_12 [5:0] $end
   $var wire  6 o! io_in_a_man_13 [5:0] $end
   $var wire  6 p! io_in_a_man_14 [5:0] $end
   $var wire  6 q! io_in_a_man_15 [5:0] $end
   $var wire  6 d! io_in_a_man_2 [5:0] $end
   $var wire  6 e! io_in_a_man_3 [5:0] $end
   $var wire  6 f! io_in_a_man_4 [5:0] $end
   $var wire  6 g! io_in_a_man_5 [5:0] $end
   $var wire  6 h! io_in_a_man_6 [5:0] $end
   $var wire  6 i! io_in_a_man_7 [5:0] $end
   $var wire  6 j! io_in_a_man_8 [5:0] $end
   $var wire  6 k! io_in_a_man_9 [5:0] $end
   $var wire  1 r! io_in_a_sign_0 $end
   $var wire  1 s! io_in_a_sign_1 $end
   $var wire  1 |! io_in_a_sign_10 $end
   $var wire  1 }! io_in_a_sign_11 $end
   $var wire  1 ~! io_in_a_sign_12 $end
   $var wire  1 !" io_in_a_sign_13 $end
   $var wire  1 "" io_in_a_sign_14 $end
   $var wire  1 #" io_in_a_sign_15 $end
   $var wire  1 t! io_in_a_sign_2 $end
   $var wire  1 u! io_in_a_sign_3 $end
   $var wire  1 v! io_in_a_sign_4 $end
   $var wire  1 w! io_in_a_sign_5 $end
   $var wire  1 x! io_in_a_sign_6 $end
   $var wire  1 y! io_in_a_sign_7 $end
   $var wire  1 z! io_in_a_sign_8 $end
   $var wire  1 {! io_in_a_sign_9 $end
   $var wire  8 H" io_in_b_exp_0 [7:0] $end
   $var wire  8 I" io_in_b_exp_1 [7:0] $end
   $var wire  8 J" io_in_b_exp_2 [7:0] $end
   $var wire  8 K" io_in_b_exp_3 [7:0] $end
   $var wire  6 (" io_in_b_man_0 [5:0] $end
   $var wire  6 )" io_in_b_man_1 [5:0] $end
   $var wire  6 2" io_in_b_man_10 [5:0] $end
   $var wire  6 3" io_in_b_man_11 [5:0] $end
   $var wire  6 4" io_in_b_man_12 [5:0] $end
   $var wire  6 5" io_in_b_man_13 [5:0] $end
   $var wire  6 6" io_in_b_man_14 [5:0] $end
   $var wire  6 7" io_in_b_man_15 [5:0] $end
   $var wire  6 *" io_in_b_man_2 [5:0] $end
   $var wire  6 +" io_in_b_man_3 [5:0] $end
   $var wire  6 ," io_in_b_man_4 [5:0] $end
   $var wire  6 -" io_in_b_man_5 [5:0] $end
   $var wire  6 ." io_in_b_man_6 [5:0] $end
   $var wire  6 /" io_in_b_man_7 [5:0] $end
   $var wire  6 0" io_in_b_man_8 [5:0] $end
   $var wire  6 1" io_in_b_man_9 [5:0] $end
   $var wire  1 8" io_in_b_sign_0 $end
   $var wire  1 9" io_in_b_sign_1 $end
   $var wire  1 B" io_in_b_sign_10 $end
   $var wire  1 C" io_in_b_sign_11 $end
   $var wire  1 D" io_in_b_sign_12 $end
   $var wire  1 E" io_in_b_sign_13 $end
   $var wire  1 F" io_in_b_sign_14 $end
   $var wire  1 G" io_in_b_sign_15 $end
   $var wire  1 :" io_in_b_sign_2 $end
   $var wire  1 ;" io_in_b_sign_3 $end
   $var wire  1 <" io_in_b_sign_4 $end
   $var wire  1 =" io_in_b_sign_5 $end
   $var wire  1 >" io_in_b_sign_6 $end
   $var wire  1 ?" io_in_b_sign_7 $end
   $var wire  1 @" io_in_b_sign_8 $end
   $var wire  1 A" io_in_b_sign_9 $end
   $var wire  1 L" io_in_control $end
   $var wire  1 M" io_in_control2 $end
   $var wire 15 N" io_result [14:0] $end
   $var wire 24 ? multiplication [23:0] $end
   $var wire 24 C multiplication_1 [23:0] $end
   $var wire 24 )! multiplication_10 [23:0] $end
   $var wire 24 -! multiplication_11 [23:0] $end
   $var wire 24 A! multiplication_12 [23:0] $end
   $var wire 24 E! multiplication_13 [23:0] $end
   $var wire 24 I! multiplication_14 [23:0] $end
   $var wire 24 M! multiplication_15 [23:0] $end
   $var wire 24 G multiplication_2 [23:0] $end
   $var wire 24 K multiplication_3 [23:0] $end
   $var wire 24 _ multiplication_4 [23:0] $end
   $var wire 24 c multiplication_5 [23:0] $end
   $var wire 24 g multiplication_6 [23:0] $end
   $var wire 24 k multiplication_7 [23:0] $end
   $var wire 24 !! multiplication_8 [23:0] $end
   $var wire 24 %! multiplication_9 [23:0] $end
   $var wire  6 < multiplierReg [5:0] $end
   $var wire  6 = multiplierReg2 [5:0] $end
   $var wire  6 A multiplierReg2_1 [5:0] $end
   $var wire  6 '! multiplierReg2_10 [5:0] $end
   $var wire  6 +! multiplierReg2_11 [5:0] $end
   $var wire  6 ?! multiplierReg2_12 [5:0] $end
   $var wire  6 C! multiplierReg2_13 [5:0] $end
   $var wire  6 G! multiplierReg2_14 [5:0] $end
   $var wire  6 K! multiplierReg2_15 [5:0] $end
   $var wire  6 E multiplierReg2_2 [5:0] $end
   $var wire  6 I multiplierReg2_3 [5:0] $end
   $var wire  6 ] multiplierReg2_4 [5:0] $end
   $var wire  6 a multiplierReg2_5 [5:0] $end
   $var wire  6 e multiplierReg2_6 [5:0] $end
   $var wire  6 i multiplierReg2_7 [5:0] $end
   $var wire  6 } multiplierReg2_8 [5:0] $end
   $var wire  6 #! multiplierReg2_9 [5:0] $end
   $var wire  6 @ multiplierReg_1 [5:0] $end
   $var wire  6 &! multiplierReg_10 [5:0] $end
   $var wire  6 *! multiplierReg_11 [5:0] $end
   $var wire  6 >! multiplierReg_12 [5:0] $end
   $var wire  6 B! multiplierReg_13 [5:0] $end
   $var wire  6 F! multiplierReg_14 [5:0] $end
   $var wire  6 J! multiplierReg_15 [5:0] $end
   $var wire  6 D multiplierReg_2 [5:0] $end
   $var wire  6 H multiplierReg_3 [5:0] $end
   $var wire  6 \ multiplierReg_4 [5:0] $end
   $var wire  6 ` multiplierReg_5 [5:0] $end
   $var wire  6 d multiplierReg_6 [5:0] $end
   $var wire  6 h multiplierReg_7 [5:0] $end
   $var wire  6 | multiplierReg_8 [5:0] $end
   $var wire  6 "! multiplierReg_9 [5:0] $end
   $var wire  1 a! reset $end
   $var wire  1 > signReg $end
   $var wire  1 B signReg_1 $end
   $var wire  1 (! signReg_10 $end
   $var wire  1 ,! signReg_11 $end
   $var wire  1 @! signReg_12 $end
   $var wire  1 D! signReg_13 $end
   $var wire  1 H! signReg_14 $end
   $var wire  1 L! signReg_15 $end
   $var wire  1 F signReg_2 $end
   $var wire  1 J signReg_3 $end
   $var wire  1 ^ signReg_4 $end
   $var wire  1 b signReg_5 $end
   $var wire  1 f signReg_6 $end
   $var wire  1 j signReg_7 $end
   $var wire  1 ~ signReg_8 $end
   $var wire  1 $! signReg_9 $end
   $var wire  1 P signs_1_0 $end
   $var wire  1 Q signs_1_1 $end
   $var wire  1 R signs_1_2 $end
   $var wire  1 S signs_1_3 $end
   $var wire  1 p signs_2_0 $end
   $var wire  1 q signs_2_1 $end
   $var wire  1 r signs_2_2 $end
   $var wire  1 s signs_2_3 $end
   $var wire  1 2! signs_3_0 $end
   $var wire  1 3! signs_3_1 $end
   $var wire  1 4! signs_3_2 $end
   $var wire  1 5! signs_3_3 $end
   $var wire  1 0 signs__0 $end
   $var wire  1 1 signs__1 $end
   $var wire  1 2 signs__2 $end
   $var wire  1 3 signs__3 $end
   $var wire 13 T two_complement_1_0 [12:0] $end
   $var wire 13 U two_complement_1_1 [12:0] $end
   $var wire 13 V two_complement_1_2 [12:0] $end
   $var wire 13 W two_complement_1_3 [12:0] $end
   $var wire 13 t two_complement_2_0 [12:0] $end
   $var wire 13 u two_complement_2_1 [12:0] $end
   $var wire 13 v two_complement_2_2 [12:0] $end
   $var wire 13 w two_complement_2_3 [12:0] $end
   $var wire 13 6! two_complement_3_0 [12:0] $end
   $var wire 13 7! two_complement_3_1 [12:0] $end
   $var wire 13 8! two_complement_3_2 [12:0] $end
   $var wire 13 9! two_complement_3_3 [12:0] $end
   $var wire 13 4 two_complement__0 [12:0] $end
   $var wire 13 5 two_complement__1 [12:0] $end
   $var wire 13 6 two_complement__2 [12:0] $end
   $var wire 13 7 two_complement__3 [12:0] $end
   $var wire 13 X two_complement_buffer_1_0 [12:0] $end
   $var wire 13 Y two_complement_buffer_1_1 [12:0] $end
   $var wire 13 Z two_complement_buffer_1_2 [12:0] $end
   $var wire 13 [ two_complement_buffer_1_3 [12:0] $end
   $var wire 13 x two_complement_buffer_2_0 [12:0] $end
   $var wire 13 y two_complement_buffer_2_1 [12:0] $end
   $var wire 13 z two_complement_buffer_2_2 [12:0] $end
   $var wire 13 { two_complement_buffer_2_3 [12:0] $end
   $var wire 13 :! two_complement_buffer_3_0 [12:0] $end
   $var wire 13 ;! two_complement_buffer_3_1 [12:0] $end
   $var wire 13 <! two_complement_buffer_3_2 [12:0] $end
   $var wire 13 =! two_complement_buffer_3_3 [12:0] $end
   $var wire 13 8 two_complement_buffer__0 [12:0] $end
   $var wire 13 9 two_complement_buffer__1 [12:0] $end
   $var wire 13 : two_complement_buffer__2 [12:0] $end
   $var wire 13 ; two_complement_buffer__3 [12:0] $end
   $scope module adderTreeInst $end
    $var wire  8 \! actual_shift [7:0] $end
    $var wire 13 ]! buf_ [12:0] $end
    $var wire  1 `! clock $end
    $var wire  1 W! enable $end
    $var wire 10 _! exp_actual [9:0] $end
    $var wire  9 N! exp_buffer_0 [8:0] $end
    $var wire  9 O! exp_buffer_1 [8:0] $end
    $var wire  9 P! exp_buffer_2 [8:0] $end
    $var wire  9 Q! exp_buffer_3 [8:0] $end
    $var wire  9 X! exp_difference [8:0] $end
    $var wire  9 Y! exp_difference_1 [8:0] $end
    $var wire  1 L" io_in_control_signal $end
    $var wire  1 M" io_in_control_signal2 $end
    $var wire  9 ' io_in_exps_0 [8:0] $end
    $var wire  9 ( io_in_exps_1 [8:0] $end
    $var wire  9 ) io_in_exps_2 [8:0] $end
    $var wire  9 * io_in_exps_3 [8:0] $end
    $var wire 16 # io_in_sign_man_0 [15:0] $end
    $var wire 16 $ io_in_sign_man_1 [15:0] $end
    $var wire 16 % io_in_sign_man_2 [15:0] $end
    $var wire 16 & io_in_sign_man_3 [15:0] $end
    $var wire 15 + io_result_tree [14:0] $end
    $var wire 19 R! man_buffer_two_complement_0 [18:0] $end
    $var wire 19 S! man_buffer_two_complement_1 [18:0] $end
    $var wire 19 T! man_buffer_two_complement_2 [18:0] $end
    $var wire 19 U! man_buffer_two_complement_3 [18:0] $end
    $var wire 19 ^! man_out_shifted [18:0] $end
    $var wire  1 a! reset $end
    $var wire  8 [! right_shift [7:0] $end
    $var wire 19 Z! sign_man_hbfp [18:0] $end
    $var wire 10 V! v [9:0] $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
b0000000000000000 #
b0000000000000000 $
b0000000000000000 %
b0000000000000000 &
b000000000 '
b000000000 (
b000000000 )
b000000000 *
b000000000000000 +
b000000000000 ,
b000000000000 -
b000000000000 .
b000000000000 /
00
01
02
03
b0000000000000 4
b0000000000000 5
b0000000000000 6
b0000000000000 7
b0000000000000 8
b0000000000000 9
b0000000000000 :
b0000000000000 ;
b000000 <
b000000 =
0>
b000000000000000000000000 ?
b000000 @
b000000 A
0B
b000000000000000000000000 C
b000000 D
b000000 E
0F
b000000000000000000000000 G
b000000 H
b000000 I
0J
b000000000000000000000000 K
b000000000000 L
b000000000000 M
b000000000000 N
b000000000000 O
0P
0Q
0R
0S
b0000000000000 T
b0000000000000 U
b0000000000000 V
b0000000000000 W
b0000000000000 X
b0000000000000 Y
b0000000000000 Z
b0000000000000 [
b000000 \
b000000 ]
0^
b000000000000000000000000 _
b000000 `
b000000 a
0b
b000000000000000000000000 c
b000000 d
b000000 e
0f
b000000000000000000000000 g
b000000 h
b000000 i
0j
b000000000000000000000000 k
b000000000000 l
b000000000000 m
b000000000000 n
b000000000000 o
0p
0q
0r
0s
b0000000000000 t
b0000000000000 u
b0000000000000 v
b0000000000000 w
b0000000000000 x
b0000000000000 y
b0000000000000 z
b0000000000000 {
b000000 |
b000000 }
0~
b000000000000000000000000 !!
b000000 "!
b000000 #!
0$!
b000000000000000000000000 %!
b000000 &!
b000000 '!
0(!
b000000000000000000000000 )!
b000000 *!
b000000 +!
0,!
b000000000000000000000000 -!
b000000000000 .!
b000000000000 /!
b000000000000 0!
b000000000000 1!
02!
03!
04!
05!
b0000000000000 6!
b0000000000000 7!
b0000000000000 8!
b0000000000000 9!
b0000000000000 :!
b0000000000000 ;!
b0000000000000 <!
b0000000000000 =!
b000000 >!
b000000 ?!
0@!
b000000000000000000000000 A!
b000000 B!
b000000 C!
0D!
b000000000000000000000000 E!
b000000 F!
b000000 G!
0H!
b000000000000000000000000 I!
b000000 J!
b000000 K!
0L!
b000000000000000000000000 M!
b000000000 N!
b000000000 O!
b000000000 P!
b000000000 Q!
b0000000000000000000 R!
b0000000000000000000 S!
b0000000000000000000 T!
b0000000000000000000 U!
b0000000000 V!
0W!
b000000000 X!
b000000000 Y!
b0000000000000000000 Z!
b00000000 [!
b00000000 \!
b0000000000000 ]!
b0000000000000000000 ^!
b0000000000 _!
0`!
1a!
b000000 b!
b000000 c!
b000000 d!
b000000 e!
b000000 f!
b000000 g!
b000000 h!
b000000 i!
b000000 j!
b000000 k!
b000000 l!
b000000 m!
b000000 n!
b000000 o!
b000000 p!
b000000 q!
0r!
0s!
0t!
0u!
0v!
0w!
0x!
0y!
0z!
0{!
0|!
0}!
0~!
0!"
0""
0#"
b00000000 $"
b00000000 %"
b00000000 &"
b00000000 '"
b000000 ("
b000000 )"
b000000 *"
b000000 +"
b000000 ,"
b000000 -"
b000000 ."
b000000 /"
b000000 0"
b000000 1"
b000000 2"
b000000 3"
b000000 4"
b000000 5"
b000000 6"
b000000 7"
08"
09"
0:"
0;"
0<"
0="
0>"
0?"
0@"
0A"
0B"
0C"
0D"
0E"
0F"
0G"
b00000000 H"
b00000000 I"
b00000000 J"
b00000000 K"
0L"
0M"
b000000000000000 N"
#1
1`!
#2
0`!
0a!
b011011 b!
b101001 c!
b011101 d!
b110101 e!
b010111 f!
b000101 g!
b101000 h!
b110001 i!
b010100 j!
b011101 k!
b010000 l!
b110000 m!
b011001 n!
b110000 o!
b001011 p!
b001110 q!
1r!
1s!
1w!
1x!
1z!
1{!
1|!
1}!
1~!
1!"
1""
b10011101 $"
b11011001 %"
b11101100 &"
b00100110 '"
b011101 ("
b010010 )"
b000110 *"
b000111 +"
b001010 ,"
b111001 -"
b110101 ."
b001001 /"
b001000 0"
b100111 1"
b010011 2"
b000100 3"
b111100 4"
b111010 5"
b000100 6"
b001100 7"
18"
19"
1;"
1<"
1>"
1A"
1B"
1G"
b01110011 H"
b00100101 I"
b10000010 J"
b01100101 K"
1M"
#3
b100010000 '
b011111110 (
b101101110 )
b010001011 *
b000000011000000 +
10
11
13
b011011 <
b011101 =
1>
b000000000000001100001111 ?
b101001 @
b010010 A
1B
b000000000000001011100010 C
b011101 D
b000110 E
b000000000000000010101110 G
b110101 H
b000111 I
b000000000000000101110011 K
1P
1R
b010111 \
b001010 ]
b000000000000000011100110 _
b000101 `
b111001 a
1b
b000000000000000100011101 c
b101000 d
b110101 e
1f
b000000000000100001001000 g
b110001 h
b001001 i
b000000000000000110111001 k
1q
1r
b010100 |
b001000 }
1~
b000000000000000010100000 !!
b011101 "!
b100111 #!
1$!
b000000000000010001101011 %!
b010000 &!
b010011 '!
1(!
b000000000000000100110000 )!
b110000 *!
b000100 +!
1,!
b000000000000000011000000 -!
15!
b011001 >!
b111100 ?!
1@!
b000000000000010111011100 A!
b110000 B!
b111010 C!
1D!
b000000000000101011100000 E!
b001011 F!
b000100 G!
1H!
b000000000000000000101100 I!
b001110 J!
b001100 K!
b000000000000000010101000 M!
1W!
b00001100 [!
b00001100 \!
b0000001100 _!
1`!
b000000011000000 N"
#4
0`!
#5
b001000100000000 +
b001100001111 ,
b001011100010 -
b000010101110 .
b000101110011 /
00
01
b000011100110 L
b000100011101 M
b100001001000 N
b000110111001 O
1Q
0R
b000010100000 l
b010001101011 m
b000100110000 n
b000011000000 o
1p
0q
0r
1s
b010111011100 .!
b101011100000 /!
b000000101100 0!
b000010101000 1!
12!
13!
14!
b100010000 N!
b011111110 O!
b101101110 P!
b010001011 Q!
b000010010 X!
b011100011 Y!
b00000000 \!
b0100010000 _!
1`!
b001000100000000 N"
#6
0`!
0M"
#7
b0001100001111 4
b0001011100010 5
b0000010101110 6
b1111010001101 7
b1111100011010 T
b1111011100011 U
b0100001001000 V
b0000110111001 W
b1111101100000 t
b0010001101011 u
b0000100110000 v
b1111101000000 w
b1101000100100 6!
b1010100100000 7!
b1111111010100 8!
b1111101011000 9!
1`!
#8
0`!
#9
b0001100001111 8
b0001011100010 9
b0000010101110 :
b1111010001101 ;
b1111100011010 X
b1111011100011 Y
b0100001001000 Z
b0000110111001 [
b1111101100000 x
b0010001101011 y
b0000100110000 z
b1111101000000 {
b1101000100100 :!
b1010100100000 ;!
b1111111010100 <!
b1111101011000 =!
1`!
#10
0`!
#11
b0000010100101100 #
b0000011111111110 $
b0000010000111011 %
b1110111001110000 &
1`!
#12
0`!
#13
b0000000010100101100 R!
b0000000011111111110 S!
b0000000010000111011 T!
b1111110111001110000 U!
1`!
#14
0`!
#15
b001000100101100 +
b0000000010100101100 Z!
b0001010000000 ]!
b0000000010100101100 ^!
1`!
b001000100101100 N"
#16
0`!
#17
b00000111 [!
1`!
#18
0`!
#19
b001000101101001 +
b00000101 \!
b0000000000000101001 ^!
b0100010101 _!
1`!
b001000101101001 N"
#20
0`!
#21
1`!
#22
0`!
#23
1`!
#24
0`!
#25
1`!
#26
0`!
#27
1`!
#28
0`!
#29
1`!
#30
0`!
#31
1`!
#32
0`!
#33
1`!
#34
0`!
1L"
#35
b101101110 O!
b0000000010000111011 S!
b0000000001 V!
b001011110 X!
1`!
#36
0`!
#37
b001011100101001 +
b101101110 N!
b0000000010000111011 R!
b0000000010 V!
0W!
b000000000 X!
b0101110011 _!
1`!
b001011100101001 N"
#38
0`!
#39
b001011100100001 +
b0000000010000111011 Z!
b0000010000000 ]!
b0000000000000100001 ^!
1`!
b001011100100001 N"
#40
0`!
#41
1`!
#42
0`!
#43
1`!
#44
0`!
#45
1`!
#46
0`!
#47
1`!
